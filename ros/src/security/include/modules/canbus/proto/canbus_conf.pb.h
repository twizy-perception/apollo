// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/canbus_conf.proto

#ifndef PROTOBUF_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto__INCLUDED
#define PROTOBUF_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/drivers/canbus/proto/can_card_parameter.pb.h"
#include "modules/canbus/proto/vehicle_parameter.pb.h"
// @@protoc_insertion_point(includes)
namespace apollo {
namespace canbus {
class CanbusConf;
class CanbusConfDefaultTypeInternal;
extern CanbusConfDefaultTypeInternal _CanbusConf_default_instance_;
class VehicleParameter;
class VehicleParameterDefaultTypeInternal;
extern VehicleParameterDefaultTypeInternal _VehicleParameter_default_instance_;
}  // namespace canbus
namespace drivers {
namespace canbus {
class CANCardParameter;
class CANCardParameterDefaultTypeInternal;
extern CANCardParameterDefaultTypeInternal _CANCardParameter_default_instance_;
}  // namespace canbus
}  // namespace drivers
}  // namespace apollo

namespace apollo {
namespace canbus {

namespace protobuf_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto

// ===================================================================

class CanbusConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.CanbusConf) */ {
 public:
  CanbusConf();
  virtual ~CanbusConf();

  CanbusConf(const CanbusConf& from);

  inline CanbusConf& operator=(const CanbusConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanbusConf& default_instance();

  static inline const CanbusConf* internal_default_instance() {
    return reinterpret_cast<const CanbusConf*>(
               &_CanbusConf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CanbusConf* other);

  // implements Message ----------------------------------------------

  inline CanbusConf* New() const PROTOBUF_FINAL { return New(NULL); }

  CanbusConf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CanbusConf& from);
  void MergeFrom(const CanbusConf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CanbusConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.canbus.VehicleParameter vehicle_parameter = 1;
  bool has_vehicle_parameter() const;
  void clear_vehicle_parameter();
  static const int kVehicleParameterFieldNumber = 1;
  const ::apollo::canbus::VehicleParameter& vehicle_parameter() const;
  ::apollo::canbus::VehicleParameter* mutable_vehicle_parameter();
  ::apollo::canbus::VehicleParameter* release_vehicle_parameter();
  void set_allocated_vehicle_parameter(::apollo::canbus::VehicleParameter* vehicle_parameter);

  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 2;
  bool has_can_card_parameter() const;
  void clear_can_card_parameter();
  static const int kCanCardParameterFieldNumber = 2;
  const ::apollo::drivers::canbus::CANCardParameter& can_card_parameter() const;
  ::apollo::drivers::canbus::CANCardParameter* mutable_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* release_can_card_parameter();
  void set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter);

  // optional bool enable_debug_mode = 3 [default = false];
  bool has_enable_debug_mode() const;
  void clear_enable_debug_mode();
  static const int kEnableDebugModeFieldNumber = 3;
  bool enable_debug_mode() const;
  void set_enable_debug_mode(bool value);

  // optional bool enable_receiver_log = 4 [default = false];
  bool has_enable_receiver_log() const;
  void clear_enable_receiver_log();
  static const int kEnableReceiverLogFieldNumber = 4;
  bool enable_receiver_log() const;
  void set_enable_receiver_log(bool value);

  // optional bool enable_sender_log = 5 [default = false];
  bool has_enable_sender_log() const;
  void clear_enable_sender_log();
  static const int kEnableSenderLogFieldNumber = 5;
  bool enable_sender_log() const;
  void set_enable_sender_log(bool value);

  // @@protoc_insertion_point(class_scope:apollo.canbus.CanbusConf)
 private:
  void set_has_vehicle_parameter();
  void clear_has_vehicle_parameter();
  void set_has_can_card_parameter();
  void clear_has_can_card_parameter();
  void set_has_enable_debug_mode();
  void clear_has_enable_debug_mode();
  void set_has_enable_receiver_log();
  void clear_has_enable_receiver_log();
  void set_has_enable_sender_log();
  void clear_has_enable_sender_log();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::apollo::canbus::VehicleParameter* vehicle_parameter_;
  ::apollo::drivers::canbus::CANCardParameter* can_card_parameter_;
  bool enable_debug_mode_;
  bool enable_receiver_log_;
  bool enable_sender_log_;
  friend struct protobuf_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CanbusConf

// optional .apollo.canbus.VehicleParameter vehicle_parameter = 1;
inline bool CanbusConf::has_vehicle_parameter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanbusConf::set_has_vehicle_parameter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanbusConf::clear_has_vehicle_parameter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanbusConf::clear_vehicle_parameter() {
  if (vehicle_parameter_ != NULL) vehicle_parameter_->::apollo::canbus::VehicleParameter::Clear();
  clear_has_vehicle_parameter();
}
inline const ::apollo::canbus::VehicleParameter& CanbusConf::vehicle_parameter() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.vehicle_parameter)
  return vehicle_parameter_ != NULL ? *vehicle_parameter_
                         : *::apollo::canbus::VehicleParameter::internal_default_instance();
}
inline ::apollo::canbus::VehicleParameter* CanbusConf::mutable_vehicle_parameter() {
  set_has_vehicle_parameter();
  if (vehicle_parameter_ == NULL) {
    vehicle_parameter_ = new ::apollo::canbus::VehicleParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.CanbusConf.vehicle_parameter)
  return vehicle_parameter_;
}
inline ::apollo::canbus::VehicleParameter* CanbusConf::release_vehicle_parameter() {
  // @@protoc_insertion_point(field_release:apollo.canbus.CanbusConf.vehicle_parameter)
  clear_has_vehicle_parameter();
  ::apollo::canbus::VehicleParameter* temp = vehicle_parameter_;
  vehicle_parameter_ = NULL;
  return temp;
}
inline void CanbusConf::set_allocated_vehicle_parameter(::apollo::canbus::VehicleParameter* vehicle_parameter) {
  delete vehicle_parameter_;
  vehicle_parameter_ = vehicle_parameter;
  if (vehicle_parameter) {
    set_has_vehicle_parameter();
  } else {
    clear_has_vehicle_parameter();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.CanbusConf.vehicle_parameter)
}

// optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 2;
inline bool CanbusConf::has_can_card_parameter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanbusConf::set_has_can_card_parameter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CanbusConf::clear_has_can_card_parameter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CanbusConf::clear_can_card_parameter() {
  if (can_card_parameter_ != NULL) can_card_parameter_->::apollo::drivers::canbus::CANCardParameter::Clear();
  clear_has_can_card_parameter();
}
inline const ::apollo::drivers::canbus::CANCardParameter& CanbusConf::can_card_parameter() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.can_card_parameter)
  return can_card_parameter_ != NULL ? *can_card_parameter_
                         : *::apollo::drivers::canbus::CANCardParameter::internal_default_instance();
}
inline ::apollo::drivers::canbus::CANCardParameter* CanbusConf::mutable_can_card_parameter() {
  set_has_can_card_parameter();
  if (can_card_parameter_ == NULL) {
    can_card_parameter_ = new ::apollo::drivers::canbus::CANCardParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.CanbusConf.can_card_parameter)
  return can_card_parameter_;
}
inline ::apollo::drivers::canbus::CANCardParameter* CanbusConf::release_can_card_parameter() {
  // @@protoc_insertion_point(field_release:apollo.canbus.CanbusConf.can_card_parameter)
  clear_has_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* temp = can_card_parameter_;
  can_card_parameter_ = NULL;
  return temp;
}
inline void CanbusConf::set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter) {
  delete can_card_parameter_;
  can_card_parameter_ = can_card_parameter;
  if (can_card_parameter) {
    set_has_can_card_parameter();
  } else {
    clear_has_can_card_parameter();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.CanbusConf.can_card_parameter)
}

// optional bool enable_debug_mode = 3 [default = false];
inline bool CanbusConf::has_enable_debug_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CanbusConf::set_has_enable_debug_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CanbusConf::clear_has_enable_debug_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CanbusConf::clear_enable_debug_mode() {
  enable_debug_mode_ = false;
  clear_has_enable_debug_mode();
}
inline bool CanbusConf::enable_debug_mode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_debug_mode)
  return enable_debug_mode_;
}
inline void CanbusConf::set_enable_debug_mode(bool value) {
  set_has_enable_debug_mode();
  enable_debug_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_debug_mode)
}

// optional bool enable_receiver_log = 4 [default = false];
inline bool CanbusConf::has_enable_receiver_log() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CanbusConf::set_has_enable_receiver_log() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CanbusConf::clear_has_enable_receiver_log() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CanbusConf::clear_enable_receiver_log() {
  enable_receiver_log_ = false;
  clear_has_enable_receiver_log();
}
inline bool CanbusConf::enable_receiver_log() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_receiver_log)
  return enable_receiver_log_;
}
inline void CanbusConf::set_enable_receiver_log(bool value) {
  set_has_enable_receiver_log();
  enable_receiver_log_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_receiver_log)
}

// optional bool enable_sender_log = 5 [default = false];
inline bool CanbusConf::has_enable_sender_log() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CanbusConf::set_has_enable_sender_log() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CanbusConf::clear_has_enable_sender_log() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CanbusConf::clear_enable_sender_log() {
  enable_sender_log_ = false;
  clear_has_enable_sender_log();
}
inline bool CanbusConf::enable_sender_log() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_sender_log)
  return enable_sender_log_;
}
inline void CanbusConf::set_enable_sender_log(bool value) {
  set_has_enable_sender_log();
  enable_sender_log_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_sender_log)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace canbus
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto__INCLUDED
