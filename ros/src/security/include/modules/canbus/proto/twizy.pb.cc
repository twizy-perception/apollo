// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/twizy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/canbus/proto/twizy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace canbus {
class Steeringangle_0c0h_c0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Steeringangle_0c0h_c0> {
} _Steeringangle_0c0h_c0_default_instance_;
class Currentspeed_599DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Currentspeed_599> {
} _Currentspeed_599_default_instance_;
class Gear_and_breakpedal_59bDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gear_and_breakpedal_59b> {
} _Gear_and_breakpedal_59b_default_instance_;
class TwizyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Twizy> {
} _Twizy_default_instance_;

namespace protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, sas_chcksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, msg_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, lws_stat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, lws_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Steeringangle_0c0h_c0, lws_),
  0,
  1,
  4,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Currentspeed_599, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Currentspeed_599, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Currentspeed_599, curr_speed_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, brake_pedalstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, gear_r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, gear_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gear_and_breakpedal_59b, gear_d_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twizy, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twizy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twizy, steeringangle_0c0h_c0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twizy, currentspeed_599_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Twizy, gear_and_breakpedal_59b_),
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(Steeringangle_0c0h_c0)},
  { 15, 21, sizeof(Currentspeed_599)},
  { 22, 31, sizeof(Gear_and_breakpedal_59b)},
  { 35, 43, sizeof(Twizy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Steeringangle_0c0h_c0_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Currentspeed_599_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gear_and_breakpedal_59b_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Twizy_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/canbus/proto/twizy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _Steeringangle_0c0h_c0_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Currentspeed_599_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Gear_and_breakpedal_59b_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Twizy_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Steeringangle_0c0h_c0_default_instance_.DefaultConstruct();
  _Currentspeed_599_default_instance_.DefaultConstruct();
  _Gear_and_breakpedal_59b_default_instance_.DefaultConstruct();
  _Twizy_default_instance_.DefaultConstruct();
  _Twizy_default_instance_.get_mutable()->steeringangle_0c0h_c0_ = const_cast< ::apollo::canbus::Steeringangle_0c0h_c0*>(
      ::apollo::canbus::Steeringangle_0c0h_c0::internal_default_instance());
  _Twizy_default_instance_.get_mutable()->currentspeed_599_ = const_cast< ::apollo::canbus::Currentspeed_599*>(
      ::apollo::canbus::Currentspeed_599::internal_default_instance());
  _Twizy_default_instance_.get_mutable()->gear_and_breakpedal_59b_ = const_cast< ::apollo::canbus::Gear_and_breakpedal_59b*>(
      ::apollo::canbus::Gear_and_breakpedal_59b::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n modules/canbus/proto/twizy.proto\022\rapol"
      "lo.canbus\"q\n\025Steeringangle_0c0h_c0\022\023\n\013sa"
      "s_chcksum\030\001 \001(\005\022\021\n\tmsg_count\030\002 \001(\005\022\020\n\010lw"
      "s_stat\030\003 \001(\005\022\021\n\tlws_speed\030\004 \001(\001\022\013\n\003lws\030\005"
      " \001(\001\"&\n\020Currentspeed_599\022\022\n\ncurr_speed\030\001"
      " \001(\001\"d\n\027Gear_and_breakpedal_59b\022\031\n\021brake"
      "_pedalstatus\030\001 \001(\010\022\016\n\006gear_r\030\002 \001(\010\022\016\n\006ge"
      "ar_n\030\003 \001(\010\022\016\n\006gear_d\030\004 \001(\010\"\320\001\n\005Twizy\022C\n\025"
      "steeringangle_0c0h_c0\030\001 \001(\0132$.apollo.can"
      "bus.Steeringangle_0c0h_c0\0229\n\020currentspee"
      "d_599\030\002 \001(\0132\037.apollo.canbus.Currentspeed"
      "_599\022G\n\027gear_and_breakpedal_59b\030\003 \001(\0132&."
      "apollo.canbus.Gear_and_breakpedal_59b"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 517);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/twizy.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Steeringangle_0c0h_c0::kSasChcksumFieldNumber;
const int Steeringangle_0c0h_c0::kMsgCountFieldNumber;
const int Steeringangle_0c0h_c0::kLwsStatFieldNumber;
const int Steeringangle_0c0h_c0::kLwsSpeedFieldNumber;
const int Steeringangle_0c0h_c0::kLwsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Steeringangle_0c0h_c0::Steeringangle_0c0h_c0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Steeringangle_0c0h_c0)
}
Steeringangle_0c0h_c0::Steeringangle_0c0h_c0(const Steeringangle_0c0h_c0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sas_chcksum_, &from.sas_chcksum_,
    reinterpret_cast<char*>(&lws_stat_) -
    reinterpret_cast<char*>(&sas_chcksum_) + sizeof(lws_stat_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Steeringangle_0c0h_c0)
}

void Steeringangle_0c0h_c0::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sas_chcksum_, 0, reinterpret_cast<char*>(&lws_stat_) -
    reinterpret_cast<char*>(&sas_chcksum_) + sizeof(lws_stat_));
}

Steeringangle_0c0h_c0::~Steeringangle_0c0h_c0() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Steeringangle_0c0h_c0)
  SharedDtor();
}

void Steeringangle_0c0h_c0::SharedDtor() {
}

void Steeringangle_0c0h_c0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Steeringangle_0c0h_c0::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Steeringangle_0c0h_c0& Steeringangle_0c0h_c0::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Steeringangle_0c0h_c0* Steeringangle_0c0h_c0::New(::google::protobuf::Arena* arena) const {
  Steeringangle_0c0h_c0* n = new Steeringangle_0c0h_c0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Steeringangle_0c0h_c0::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Steeringangle_0c0h_c0)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&sas_chcksum_, 0, reinterpret_cast<char*>(&lws_stat_) -
      reinterpret_cast<char*>(&sas_chcksum_) + sizeof(lws_stat_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Steeringangle_0c0h_c0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Steeringangle_0c0h_c0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sas_chcksum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sas_chcksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sas_chcksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msg_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_msg_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lws_stat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_lws_stat();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lws_stat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lws_speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_lws_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lws_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lws = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_lws();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lws_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Steeringangle_0c0h_c0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Steeringangle_0c0h_c0)
  return false;
#undef DO_
}

void Steeringangle_0c0h_c0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Steeringangle_0c0h_c0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sas_chcksum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sas_chcksum(), output);
  }

  // optional int32 msg_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_count(), output);
  }

  // optional int32 lws_stat = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lws_stat(), output);
  }

  // optional double lws_speed = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lws_speed(), output);
  }

  // optional double lws = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lws(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Steeringangle_0c0h_c0)
}

::google::protobuf::uint8* Steeringangle_0c0h_c0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Steeringangle_0c0h_c0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sas_chcksum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sas_chcksum(), target);
  }

  // optional int32 msg_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_count(), target);
  }

  // optional int32 lws_stat = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lws_stat(), target);
  }

  // optional double lws_speed = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lws_speed(), target);
  }

  // optional double lws = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lws(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Steeringangle_0c0h_c0)
  return target;
}

size_t Steeringangle_0c0h_c0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Steeringangle_0c0h_c0)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 sas_chcksum = 1;
    if (has_sas_chcksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sas_chcksum());
    }

    // optional int32 msg_count = 2;
    if (has_msg_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_count());
    }

    // optional double lws_speed = 4;
    if (has_lws_speed()) {
      total_size += 1 + 8;
    }

    // optional double lws = 5;
    if (has_lws()) {
      total_size += 1 + 8;
    }

    // optional int32 lws_stat = 3;
    if (has_lws_stat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lws_stat());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Steeringangle_0c0h_c0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Steeringangle_0c0h_c0)
  GOOGLE_DCHECK_NE(&from, this);
  const Steeringangle_0c0h_c0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Steeringangle_0c0h_c0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Steeringangle_0c0h_c0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Steeringangle_0c0h_c0)
    MergeFrom(*source);
  }
}

void Steeringangle_0c0h_c0::MergeFrom(const Steeringangle_0c0h_c0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Steeringangle_0c0h_c0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      sas_chcksum_ = from.sas_chcksum_;
    }
    if (cached_has_bits & 0x00000002u) {
      msg_count_ = from.msg_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      lws_speed_ = from.lws_speed_;
    }
    if (cached_has_bits & 0x00000008u) {
      lws_ = from.lws_;
    }
    if (cached_has_bits & 0x00000010u) {
      lws_stat_ = from.lws_stat_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Steeringangle_0c0h_c0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Steeringangle_0c0h_c0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Steeringangle_0c0h_c0::CopyFrom(const Steeringangle_0c0h_c0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Steeringangle_0c0h_c0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Steeringangle_0c0h_c0::IsInitialized() const {
  return true;
}

void Steeringangle_0c0h_c0::Swap(Steeringangle_0c0h_c0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Steeringangle_0c0h_c0::InternalSwap(Steeringangle_0c0h_c0* other) {
  std::swap(sas_chcksum_, other->sas_chcksum_);
  std::swap(msg_count_, other->msg_count_);
  std::swap(lws_speed_, other->lws_speed_);
  std::swap(lws_, other->lws_);
  std::swap(lws_stat_, other->lws_stat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Steeringangle_0c0h_c0::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Steeringangle_0c0h_c0

// optional int32 sas_chcksum = 1;
bool Steeringangle_0c0h_c0::has_sas_chcksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Steeringangle_0c0h_c0::set_has_sas_chcksum() {
  _has_bits_[0] |= 0x00000001u;
}
void Steeringangle_0c0h_c0::clear_has_sas_chcksum() {
  _has_bits_[0] &= ~0x00000001u;
}
void Steeringangle_0c0h_c0::clear_sas_chcksum() {
  sas_chcksum_ = 0;
  clear_has_sas_chcksum();
}
::google::protobuf::int32 Steeringangle_0c0h_c0::sas_chcksum() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Steeringangle_0c0h_c0.sas_chcksum)
  return sas_chcksum_;
}
void Steeringangle_0c0h_c0::set_sas_chcksum(::google::protobuf::int32 value) {
  set_has_sas_chcksum();
  sas_chcksum_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Steeringangle_0c0h_c0.sas_chcksum)
}

// optional int32 msg_count = 2;
bool Steeringangle_0c0h_c0::has_msg_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Steeringangle_0c0h_c0::set_has_msg_count() {
  _has_bits_[0] |= 0x00000002u;
}
void Steeringangle_0c0h_c0::clear_has_msg_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void Steeringangle_0c0h_c0::clear_msg_count() {
  msg_count_ = 0;
  clear_has_msg_count();
}
::google::protobuf::int32 Steeringangle_0c0h_c0::msg_count() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Steeringangle_0c0h_c0.msg_count)
  return msg_count_;
}
void Steeringangle_0c0h_c0::set_msg_count(::google::protobuf::int32 value) {
  set_has_msg_count();
  msg_count_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Steeringangle_0c0h_c0.msg_count)
}

// optional int32 lws_stat = 3;
bool Steeringangle_0c0h_c0::has_lws_stat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Steeringangle_0c0h_c0::set_has_lws_stat() {
  _has_bits_[0] |= 0x00000010u;
}
void Steeringangle_0c0h_c0::clear_has_lws_stat() {
  _has_bits_[0] &= ~0x00000010u;
}
void Steeringangle_0c0h_c0::clear_lws_stat() {
  lws_stat_ = 0;
  clear_has_lws_stat();
}
::google::protobuf::int32 Steeringangle_0c0h_c0::lws_stat() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Steeringangle_0c0h_c0.lws_stat)
  return lws_stat_;
}
void Steeringangle_0c0h_c0::set_lws_stat(::google::protobuf::int32 value) {
  set_has_lws_stat();
  lws_stat_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Steeringangle_0c0h_c0.lws_stat)
}

// optional double lws_speed = 4;
bool Steeringangle_0c0h_c0::has_lws_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Steeringangle_0c0h_c0::set_has_lws_speed() {
  _has_bits_[0] |= 0x00000004u;
}
void Steeringangle_0c0h_c0::clear_has_lws_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
void Steeringangle_0c0h_c0::clear_lws_speed() {
  lws_speed_ = 0;
  clear_has_lws_speed();
}
double Steeringangle_0c0h_c0::lws_speed() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Steeringangle_0c0h_c0.lws_speed)
  return lws_speed_;
}
void Steeringangle_0c0h_c0::set_lws_speed(double value) {
  set_has_lws_speed();
  lws_speed_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Steeringangle_0c0h_c0.lws_speed)
}

// optional double lws = 5;
bool Steeringangle_0c0h_c0::has_lws() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Steeringangle_0c0h_c0::set_has_lws() {
  _has_bits_[0] |= 0x00000008u;
}
void Steeringangle_0c0h_c0::clear_has_lws() {
  _has_bits_[0] &= ~0x00000008u;
}
void Steeringangle_0c0h_c0::clear_lws() {
  lws_ = 0;
  clear_has_lws();
}
double Steeringangle_0c0h_c0::lws() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Steeringangle_0c0h_c0.lws)
  return lws_;
}
void Steeringangle_0c0h_c0::set_lws(double value) {
  set_has_lws();
  lws_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Steeringangle_0c0h_c0.lws)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Currentspeed_599::kCurrSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Currentspeed_599::Currentspeed_599()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Currentspeed_599)
}
Currentspeed_599::Currentspeed_599(const Currentspeed_599& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  curr_speed_ = from.curr_speed_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Currentspeed_599)
}

void Currentspeed_599::SharedCtor() {
  _cached_size_ = 0;
  curr_speed_ = 0;
}

Currentspeed_599::~Currentspeed_599() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Currentspeed_599)
  SharedDtor();
}

void Currentspeed_599::SharedDtor() {
}

void Currentspeed_599::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Currentspeed_599::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Currentspeed_599& Currentspeed_599::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Currentspeed_599* Currentspeed_599::New(::google::protobuf::Arena* arena) const {
  Currentspeed_599* n = new Currentspeed_599;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Currentspeed_599::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Currentspeed_599)
  curr_speed_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Currentspeed_599::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Currentspeed_599)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double curr_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_curr_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &curr_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Currentspeed_599)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Currentspeed_599)
  return false;
#undef DO_
}

void Currentspeed_599::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Currentspeed_599)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double curr_speed = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->curr_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Currentspeed_599)
}

::google::protobuf::uint8* Currentspeed_599::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Currentspeed_599)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double curr_speed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->curr_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Currentspeed_599)
  return target;
}

size_t Currentspeed_599::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Currentspeed_599)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double curr_speed = 1;
  if (has_curr_speed()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Currentspeed_599::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Currentspeed_599)
  GOOGLE_DCHECK_NE(&from, this);
  const Currentspeed_599* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Currentspeed_599>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Currentspeed_599)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Currentspeed_599)
    MergeFrom(*source);
  }
}

void Currentspeed_599::MergeFrom(const Currentspeed_599& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Currentspeed_599)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_curr_speed()) {
    set_curr_speed(from.curr_speed());
  }
}

void Currentspeed_599::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Currentspeed_599)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Currentspeed_599::CopyFrom(const Currentspeed_599& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Currentspeed_599)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Currentspeed_599::IsInitialized() const {
  return true;
}

void Currentspeed_599::Swap(Currentspeed_599* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Currentspeed_599::InternalSwap(Currentspeed_599* other) {
  std::swap(curr_speed_, other->curr_speed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Currentspeed_599::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Currentspeed_599

// optional double curr_speed = 1;
bool Currentspeed_599::has_curr_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Currentspeed_599::set_has_curr_speed() {
  _has_bits_[0] |= 0x00000001u;
}
void Currentspeed_599::clear_has_curr_speed() {
  _has_bits_[0] &= ~0x00000001u;
}
void Currentspeed_599::clear_curr_speed() {
  curr_speed_ = 0;
  clear_has_curr_speed();
}
double Currentspeed_599::curr_speed() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Currentspeed_599.curr_speed)
  return curr_speed_;
}
void Currentspeed_599::set_curr_speed(double value) {
  set_has_curr_speed();
  curr_speed_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Currentspeed_599.curr_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gear_and_breakpedal_59b::kBrakePedalstatusFieldNumber;
const int Gear_and_breakpedal_59b::kGearRFieldNumber;
const int Gear_and_breakpedal_59b::kGearNFieldNumber;
const int Gear_and_breakpedal_59b::kGearDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gear_and_breakpedal_59b::Gear_and_breakpedal_59b()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Gear_and_breakpedal_59b)
}
Gear_and_breakpedal_59b::Gear_and_breakpedal_59b(const Gear_and_breakpedal_59b& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&brake_pedalstatus_, &from.brake_pedalstatus_,
    reinterpret_cast<char*>(&gear_d_) -
    reinterpret_cast<char*>(&brake_pedalstatus_) + sizeof(gear_d_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Gear_and_breakpedal_59b)
}

void Gear_and_breakpedal_59b::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&brake_pedalstatus_, 0, reinterpret_cast<char*>(&gear_d_) -
    reinterpret_cast<char*>(&brake_pedalstatus_) + sizeof(gear_d_));
}

Gear_and_breakpedal_59b::~Gear_and_breakpedal_59b() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Gear_and_breakpedal_59b)
  SharedDtor();
}

void Gear_and_breakpedal_59b::SharedDtor() {
}

void Gear_and_breakpedal_59b::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gear_and_breakpedal_59b::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gear_and_breakpedal_59b& Gear_and_breakpedal_59b::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gear_and_breakpedal_59b* Gear_and_breakpedal_59b::New(::google::protobuf::Arena* arena) const {
  Gear_and_breakpedal_59b* n = new Gear_and_breakpedal_59b;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gear_and_breakpedal_59b::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Gear_and_breakpedal_59b)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&brake_pedalstatus_, 0, reinterpret_cast<char*>(&gear_d_) -
      reinterpret_cast<char*>(&brake_pedalstatus_) + sizeof(gear_d_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gear_and_breakpedal_59b::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Gear_and_breakpedal_59b)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool brake_pedalstatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_brake_pedalstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &brake_pedalstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool gear_r = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_gear_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gear_r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool gear_n = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_gear_n();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gear_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool gear_d = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_gear_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gear_d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Gear_and_breakpedal_59b)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Gear_and_breakpedal_59b)
  return false;
#undef DO_
}

void Gear_and_breakpedal_59b::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Gear_and_breakpedal_59b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool brake_pedalstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->brake_pedalstatus(), output);
  }

  // optional bool gear_r = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->gear_r(), output);
  }

  // optional bool gear_n = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->gear_n(), output);
  }

  // optional bool gear_d = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->gear_d(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Gear_and_breakpedal_59b)
}

::google::protobuf::uint8* Gear_and_breakpedal_59b::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Gear_and_breakpedal_59b)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool brake_pedalstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->brake_pedalstatus(), target);
  }

  // optional bool gear_r = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->gear_r(), target);
  }

  // optional bool gear_n = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->gear_n(), target);
  }

  // optional bool gear_d = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->gear_d(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Gear_and_breakpedal_59b)
  return target;
}

size_t Gear_and_breakpedal_59b::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Gear_and_breakpedal_59b)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bool brake_pedalstatus = 1;
    if (has_brake_pedalstatus()) {
      total_size += 1 + 1;
    }

    // optional bool gear_r = 2;
    if (has_gear_r()) {
      total_size += 1 + 1;
    }

    // optional bool gear_n = 3;
    if (has_gear_n()) {
      total_size += 1 + 1;
    }

    // optional bool gear_d = 4;
    if (has_gear_d()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gear_and_breakpedal_59b::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Gear_and_breakpedal_59b)
  GOOGLE_DCHECK_NE(&from, this);
  const Gear_and_breakpedal_59b* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gear_and_breakpedal_59b>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Gear_and_breakpedal_59b)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Gear_and_breakpedal_59b)
    MergeFrom(*source);
  }
}

void Gear_and_breakpedal_59b::MergeFrom(const Gear_and_breakpedal_59b& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Gear_and_breakpedal_59b)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      brake_pedalstatus_ = from.brake_pedalstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      gear_r_ = from.gear_r_;
    }
    if (cached_has_bits & 0x00000004u) {
      gear_n_ = from.gear_n_;
    }
    if (cached_has_bits & 0x00000008u) {
      gear_d_ = from.gear_d_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gear_and_breakpedal_59b::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Gear_and_breakpedal_59b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gear_and_breakpedal_59b::CopyFrom(const Gear_and_breakpedal_59b& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Gear_and_breakpedal_59b)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gear_and_breakpedal_59b::IsInitialized() const {
  return true;
}

void Gear_and_breakpedal_59b::Swap(Gear_and_breakpedal_59b* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gear_and_breakpedal_59b::InternalSwap(Gear_and_breakpedal_59b* other) {
  std::swap(brake_pedalstatus_, other->brake_pedalstatus_);
  std::swap(gear_r_, other->gear_r_);
  std::swap(gear_n_, other->gear_n_);
  std::swap(gear_d_, other->gear_d_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gear_and_breakpedal_59b::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gear_and_breakpedal_59b

// optional bool brake_pedalstatus = 1;
bool Gear_and_breakpedal_59b::has_brake_pedalstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gear_and_breakpedal_59b::set_has_brake_pedalstatus() {
  _has_bits_[0] |= 0x00000001u;
}
void Gear_and_breakpedal_59b::clear_has_brake_pedalstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gear_and_breakpedal_59b::clear_brake_pedalstatus() {
  brake_pedalstatus_ = false;
  clear_has_brake_pedalstatus();
}
bool Gear_and_breakpedal_59b::brake_pedalstatus() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Gear_and_breakpedal_59b.brake_pedalstatus)
  return brake_pedalstatus_;
}
void Gear_and_breakpedal_59b::set_brake_pedalstatus(bool value) {
  set_has_brake_pedalstatus();
  brake_pedalstatus_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Gear_and_breakpedal_59b.brake_pedalstatus)
}

// optional bool gear_r = 2;
bool Gear_and_breakpedal_59b::has_gear_r() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gear_and_breakpedal_59b::set_has_gear_r() {
  _has_bits_[0] |= 0x00000002u;
}
void Gear_and_breakpedal_59b::clear_has_gear_r() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gear_and_breakpedal_59b::clear_gear_r() {
  gear_r_ = false;
  clear_has_gear_r();
}
bool Gear_and_breakpedal_59b::gear_r() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Gear_and_breakpedal_59b.gear_r)
  return gear_r_;
}
void Gear_and_breakpedal_59b::set_gear_r(bool value) {
  set_has_gear_r();
  gear_r_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Gear_and_breakpedal_59b.gear_r)
}

// optional bool gear_n = 3;
bool Gear_and_breakpedal_59b::has_gear_n() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gear_and_breakpedal_59b::set_has_gear_n() {
  _has_bits_[0] |= 0x00000004u;
}
void Gear_and_breakpedal_59b::clear_has_gear_n() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gear_and_breakpedal_59b::clear_gear_n() {
  gear_n_ = false;
  clear_has_gear_n();
}
bool Gear_and_breakpedal_59b::gear_n() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Gear_and_breakpedal_59b.gear_n)
  return gear_n_;
}
void Gear_and_breakpedal_59b::set_gear_n(bool value) {
  set_has_gear_n();
  gear_n_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Gear_and_breakpedal_59b.gear_n)
}

// optional bool gear_d = 4;
bool Gear_and_breakpedal_59b::has_gear_d() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gear_and_breakpedal_59b::set_has_gear_d() {
  _has_bits_[0] |= 0x00000008u;
}
void Gear_and_breakpedal_59b::clear_has_gear_d() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gear_and_breakpedal_59b::clear_gear_d() {
  gear_d_ = false;
  clear_has_gear_d();
}
bool Gear_and_breakpedal_59b::gear_d() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Gear_and_breakpedal_59b.gear_d)
  return gear_d_;
}
void Gear_and_breakpedal_59b::set_gear_d(bool value) {
  set_has_gear_d();
  gear_d_ = value;
  // @@protoc_insertion_point(field_set:apollo.canbus.Gear_and_breakpedal_59b.gear_d)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Twizy::kSteeringangle0C0HC0FieldNumber;
const int Twizy::kCurrentspeed599FieldNumber;
const int Twizy::kGearAndBreakpedal59BFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Twizy::Twizy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Twizy)
}
Twizy::Twizy(const Twizy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_steeringangle_0c0h_c0()) {
    steeringangle_0c0h_c0_ = new ::apollo::canbus::Steeringangle_0c0h_c0(*from.steeringangle_0c0h_c0_);
  } else {
    steeringangle_0c0h_c0_ = NULL;
  }
  if (from.has_currentspeed_599()) {
    currentspeed_599_ = new ::apollo::canbus::Currentspeed_599(*from.currentspeed_599_);
  } else {
    currentspeed_599_ = NULL;
  }
  if (from.has_gear_and_breakpedal_59b()) {
    gear_and_breakpedal_59b_ = new ::apollo::canbus::Gear_and_breakpedal_59b(*from.gear_and_breakpedal_59b_);
  } else {
    gear_and_breakpedal_59b_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Twizy)
}

void Twizy::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steeringangle_0c0h_c0_, 0, reinterpret_cast<char*>(&gear_and_breakpedal_59b_) -
    reinterpret_cast<char*>(&steeringangle_0c0h_c0_) + sizeof(gear_and_breakpedal_59b_));
}

Twizy::~Twizy() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Twizy)
  SharedDtor();
}

void Twizy::SharedDtor() {
  if (this != internal_default_instance()) {
    delete steeringangle_0c0h_c0_;
  }
  if (this != internal_default_instance()) {
    delete currentspeed_599_;
  }
  if (this != internal_default_instance()) {
    delete gear_and_breakpedal_59b_;
  }
}

void Twizy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Twizy::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Twizy& Twizy::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Twizy* Twizy::New(::google::protobuf::Arena* arena) const {
  Twizy* n = new Twizy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Twizy::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Twizy)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_steeringangle_0c0h_c0()) {
      GOOGLE_DCHECK(steeringangle_0c0h_c0_ != NULL);
      steeringangle_0c0h_c0_->::apollo::canbus::Steeringangle_0c0h_c0::Clear();
    }
    if (has_currentspeed_599()) {
      GOOGLE_DCHECK(currentspeed_599_ != NULL);
      currentspeed_599_->::apollo::canbus::Currentspeed_599::Clear();
    }
    if (has_gear_and_breakpedal_59b()) {
      GOOGLE_DCHECK(gear_and_breakpedal_59b_ != NULL);
      gear_and_breakpedal_59b_->::apollo::canbus::Gear_and_breakpedal_59b::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Twizy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.canbus.Twizy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.canbus.Steeringangle_0c0h_c0 steeringangle_0c0h_c0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_steeringangle_0c0h_c0()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Currentspeed_599 currentspeed_599 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_currentspeed_599()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.canbus.Gear_and_breakpedal_59b gear_and_breakpedal_59b = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gear_and_breakpedal_59b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.canbus.Twizy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.canbus.Twizy)
  return false;
#undef DO_
}

void Twizy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.canbus.Twizy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steeringangle_0c0h_c0 steeringangle_0c0h_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->steeringangle_0c0h_c0_, output);
  }

  // optional .apollo.canbus.Currentspeed_599 currentspeed_599 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->currentspeed_599_, output);
  }

  // optional .apollo.canbus.Gear_and_breakpedal_59b gear_and_breakpedal_59b = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->gear_and_breakpedal_59b_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.canbus.Twizy)
}

::google::protobuf::uint8* Twizy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Twizy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Steeringangle_0c0h_c0 steeringangle_0c0h_c0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->steeringangle_0c0h_c0_, deterministic, target);
  }

  // optional .apollo.canbus.Currentspeed_599 currentspeed_599 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->currentspeed_599_, deterministic, target);
  }

  // optional .apollo.canbus.Gear_and_breakpedal_59b gear_and_breakpedal_59b = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->gear_and_breakpedal_59b_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Twizy)
  return target;
}

size_t Twizy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Twizy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .apollo.canbus.Steeringangle_0c0h_c0 steeringangle_0c0h_c0 = 1;
    if (has_steeringangle_0c0h_c0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->steeringangle_0c0h_c0_);
    }

    // optional .apollo.canbus.Currentspeed_599 currentspeed_599 = 2;
    if (has_currentspeed_599()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->currentspeed_599_);
    }

    // optional .apollo.canbus.Gear_and_breakpedal_59b gear_and_breakpedal_59b = 3;
    if (has_gear_and_breakpedal_59b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gear_and_breakpedal_59b_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Twizy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Twizy)
  GOOGLE_DCHECK_NE(&from, this);
  const Twizy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Twizy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Twizy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Twizy)
    MergeFrom(*source);
  }
}

void Twizy::MergeFrom(const Twizy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Twizy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_steeringangle_0c0h_c0()->::apollo::canbus::Steeringangle_0c0h_c0::MergeFrom(from.steeringangle_0c0h_c0());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_currentspeed_599()->::apollo::canbus::Currentspeed_599::MergeFrom(from.currentspeed_599());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_gear_and_breakpedal_59b()->::apollo::canbus::Gear_and_breakpedal_59b::MergeFrom(from.gear_and_breakpedal_59b());
    }
  }
}

void Twizy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Twizy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Twizy::CopyFrom(const Twizy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Twizy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Twizy::IsInitialized() const {
  return true;
}

void Twizy::Swap(Twizy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Twizy::InternalSwap(Twizy* other) {
  std::swap(steeringangle_0c0h_c0_, other->steeringangle_0c0h_c0_);
  std::swap(currentspeed_599_, other->currentspeed_599_);
  std::swap(gear_and_breakpedal_59b_, other->gear_and_breakpedal_59b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Twizy::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2ftwizy_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Twizy

// optional .apollo.canbus.Steeringangle_0c0h_c0 steeringangle_0c0h_c0 = 1;
bool Twizy::has_steeringangle_0c0h_c0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Twizy::set_has_steeringangle_0c0h_c0() {
  _has_bits_[0] |= 0x00000001u;
}
void Twizy::clear_has_steeringangle_0c0h_c0() {
  _has_bits_[0] &= ~0x00000001u;
}
void Twizy::clear_steeringangle_0c0h_c0() {
  if (steeringangle_0c0h_c0_ != NULL) steeringangle_0c0h_c0_->::apollo::canbus::Steeringangle_0c0h_c0::Clear();
  clear_has_steeringangle_0c0h_c0();
}
const ::apollo::canbus::Steeringangle_0c0h_c0& Twizy::steeringangle_0c0h_c0() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Twizy.steeringangle_0c0h_c0)
  return steeringangle_0c0h_c0_ != NULL ? *steeringangle_0c0h_c0_
                         : *::apollo::canbus::Steeringangle_0c0h_c0::internal_default_instance();
}
::apollo::canbus::Steeringangle_0c0h_c0* Twizy::mutable_steeringangle_0c0h_c0() {
  set_has_steeringangle_0c0h_c0();
  if (steeringangle_0c0h_c0_ == NULL) {
    steeringangle_0c0h_c0_ = new ::apollo::canbus::Steeringangle_0c0h_c0;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Twizy.steeringangle_0c0h_c0)
  return steeringangle_0c0h_c0_;
}
::apollo::canbus::Steeringangle_0c0h_c0* Twizy::release_steeringangle_0c0h_c0() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Twizy.steeringangle_0c0h_c0)
  clear_has_steeringangle_0c0h_c0();
  ::apollo::canbus::Steeringangle_0c0h_c0* temp = steeringangle_0c0h_c0_;
  steeringangle_0c0h_c0_ = NULL;
  return temp;
}
void Twizy::set_allocated_steeringangle_0c0h_c0(::apollo::canbus::Steeringangle_0c0h_c0* steeringangle_0c0h_c0) {
  delete steeringangle_0c0h_c0_;
  steeringangle_0c0h_c0_ = steeringangle_0c0h_c0;
  if (steeringangle_0c0h_c0) {
    set_has_steeringangle_0c0h_c0();
  } else {
    clear_has_steeringangle_0c0h_c0();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Twizy.steeringangle_0c0h_c0)
}

// optional .apollo.canbus.Currentspeed_599 currentspeed_599 = 2;
bool Twizy::has_currentspeed_599() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Twizy::set_has_currentspeed_599() {
  _has_bits_[0] |= 0x00000002u;
}
void Twizy::clear_has_currentspeed_599() {
  _has_bits_[0] &= ~0x00000002u;
}
void Twizy::clear_currentspeed_599() {
  if (currentspeed_599_ != NULL) currentspeed_599_->::apollo::canbus::Currentspeed_599::Clear();
  clear_has_currentspeed_599();
}
const ::apollo::canbus::Currentspeed_599& Twizy::currentspeed_599() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Twizy.currentspeed_599)
  return currentspeed_599_ != NULL ? *currentspeed_599_
                         : *::apollo::canbus::Currentspeed_599::internal_default_instance();
}
::apollo::canbus::Currentspeed_599* Twizy::mutable_currentspeed_599() {
  set_has_currentspeed_599();
  if (currentspeed_599_ == NULL) {
    currentspeed_599_ = new ::apollo::canbus::Currentspeed_599;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Twizy.currentspeed_599)
  return currentspeed_599_;
}
::apollo::canbus::Currentspeed_599* Twizy::release_currentspeed_599() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Twizy.currentspeed_599)
  clear_has_currentspeed_599();
  ::apollo::canbus::Currentspeed_599* temp = currentspeed_599_;
  currentspeed_599_ = NULL;
  return temp;
}
void Twizy::set_allocated_currentspeed_599(::apollo::canbus::Currentspeed_599* currentspeed_599) {
  delete currentspeed_599_;
  currentspeed_599_ = currentspeed_599;
  if (currentspeed_599) {
    set_has_currentspeed_599();
  } else {
    clear_has_currentspeed_599();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Twizy.currentspeed_599)
}

// optional .apollo.canbus.Gear_and_breakpedal_59b gear_and_breakpedal_59b = 3;
bool Twizy::has_gear_and_breakpedal_59b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Twizy::set_has_gear_and_breakpedal_59b() {
  _has_bits_[0] |= 0x00000004u;
}
void Twizy::clear_has_gear_and_breakpedal_59b() {
  _has_bits_[0] &= ~0x00000004u;
}
void Twizy::clear_gear_and_breakpedal_59b() {
  if (gear_and_breakpedal_59b_ != NULL) gear_and_breakpedal_59b_->::apollo::canbus::Gear_and_breakpedal_59b::Clear();
  clear_has_gear_and_breakpedal_59b();
}
const ::apollo::canbus::Gear_and_breakpedal_59b& Twizy::gear_and_breakpedal_59b() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.Twizy.gear_and_breakpedal_59b)
  return gear_and_breakpedal_59b_ != NULL ? *gear_and_breakpedal_59b_
                         : *::apollo::canbus::Gear_and_breakpedal_59b::internal_default_instance();
}
::apollo::canbus::Gear_and_breakpedal_59b* Twizy::mutable_gear_and_breakpedal_59b() {
  set_has_gear_and_breakpedal_59b();
  if (gear_and_breakpedal_59b_ == NULL) {
    gear_and_breakpedal_59b_ = new ::apollo::canbus::Gear_and_breakpedal_59b;
  }
  // @@protoc_insertion_point(field_mutable:apollo.canbus.Twizy.gear_and_breakpedal_59b)
  return gear_and_breakpedal_59b_;
}
::apollo::canbus::Gear_and_breakpedal_59b* Twizy::release_gear_and_breakpedal_59b() {
  // @@protoc_insertion_point(field_release:apollo.canbus.Twizy.gear_and_breakpedal_59b)
  clear_has_gear_and_breakpedal_59b();
  ::apollo::canbus::Gear_and_breakpedal_59b* temp = gear_and_breakpedal_59b_;
  gear_and_breakpedal_59b_ = NULL;
  return temp;
}
void Twizy::set_allocated_gear_and_breakpedal_59b(::apollo::canbus::Gear_and_breakpedal_59b* gear_and_breakpedal_59b) {
  delete gear_and_breakpedal_59b_;
  gear_and_breakpedal_59b_ = gear_and_breakpedal_59b;
  if (gear_and_breakpedal_59b) {
    set_has_gear_and_breakpedal_59b();
  } else {
    clear_has_gear_and_breakpedal_59b();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.Twizy.gear_and_breakpedal_59b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
