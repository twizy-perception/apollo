// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/adapters/proto/adapter_config.proto

#ifndef PROTOBUF_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto__INCLUDED
#define PROTOBUF_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace apollo {
namespace common {
namespace adapter {
class AdapterConfig;
class AdapterConfigDefaultTypeInternal;
extern AdapterConfigDefaultTypeInternal _AdapterConfig_default_instance_;
class AdapterManagerConfig;
class AdapterManagerConfigDefaultTypeInternal;
extern AdapterManagerConfigDefaultTypeInternal _AdapterManagerConfig_default_instance_;
}  // namespace adapter
}  // namespace common
}  // namespace apollo

namespace apollo {
namespace common {
namespace adapter {

namespace protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto

enum AdapterConfig_MessageType {
  AdapterConfig_MessageType_POINT_CLOUD = 1,
  AdapterConfig_MessageType_GPS = 2,
  AdapterConfig_MessageType_IMU = 3,
  AdapterConfig_MessageType_CHASSIS = 4,
  AdapterConfig_MessageType_LOCALIZATION = 5,
  AdapterConfig_MessageType_PLANNING_TRAJECTORY = 6,
  AdapterConfig_MessageType_MONITOR = 7,
  AdapterConfig_MessageType_PAD = 8,
  AdapterConfig_MessageType_CONTROL_COMMAND = 9,
  AdapterConfig_MessageType_PREDICTION = 10,
  AdapterConfig_MessageType_PERCEPTION_OBSTACLES = 11,
  AdapterConfig_MessageType_TRAFFIC_LIGHT_DETECTION = 12,
  AdapterConfig_MessageType_CHASSIS_DETAIL = 13,
  AdapterConfig_MessageType_DECISION PROTOBUF_DEPRECATED = 14,
  AdapterConfig_MessageType_CANBUS = 15,
  AdapterConfig_MessageType_ROUTING_REQUEST = 16,
  AdapterConfig_MessageType_ROUTING_RESPONSE = 17,
  AdapterConfig_MessageType_RELATIVE_ODOMETRY = 18,
  AdapterConfig_MessageType_INS_STAT = 19,
  AdapterConfig_MessageType_HMI_COMMAND PROTOBUF_DEPRECATED = 20,
  AdapterConfig_MessageType_MOBILEYE = 21,
  AdapterConfig_MessageType_DELPHIESR = 22,
  AdapterConfig_MessageType_COMPRESSED_IMAGE = 23,
  AdapterConfig_MessageType_SYSTEM_STATUS = 24,
  AdapterConfig_MessageType_INS_STATUS = 25,
  AdapterConfig_MessageType_GNSS_STATUS = 26,
  AdapterConfig_MessageType_CONTI_RADAR = 27,
  AdapterConfig_MessageType_IMAGE_SHORT = 28,
  AdapterConfig_MessageType_IMAGE_LONG = 29,
  AdapterConfig_MessageType_DRIVE_EVENT = 30,
  AdapterConfig_MessageType_GNSS_RTK_OBS = 31,
  AdapterConfig_MessageType_GNSS_RTK_EPH = 32,
  AdapterConfig_MessageType_GNSS_BEST_POSE = 33,
  AdapterConfig_MessageType_LOCALIZATION_MSF_GNSS = 34,
  AdapterConfig_MessageType_LOCALIZATION_MSF_LIDAR = 35,
  AdapterConfig_MessageType_LOCALIZATION_MSF_SINS_PVA = 36,
  AdapterConfig_MessageType_RAW_IMU = 37,
  AdapterConfig_MessageType_LOCALIZATION_MSF_STATUS = 38,
  AdapterConfig_MessageType_STATIC_INFO = 39
};
bool AdapterConfig_MessageType_IsValid(int value);
const AdapterConfig_MessageType AdapterConfig_MessageType_MessageType_MIN = AdapterConfig_MessageType_POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig_MessageType_MessageType_MAX = AdapterConfig_MessageType_STATIC_INFO;
const int AdapterConfig_MessageType_MessageType_ARRAYSIZE = AdapterConfig_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor();
inline const ::std::string& AdapterConfig_MessageType_Name(AdapterConfig_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdapterConfig_MessageType_descriptor(), value);
}
inline bool AdapterConfig_MessageType_Parse(
    const ::std::string& name, AdapterConfig_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdapterConfig_MessageType>(
    AdapterConfig_MessageType_descriptor(), name, value);
}
enum AdapterConfig_Mode {
  AdapterConfig_Mode_RECEIVE_ONLY = 0,
  AdapterConfig_Mode_PUBLISH_ONLY = 1,
  AdapterConfig_Mode_DUPLEX = 2
};
bool AdapterConfig_Mode_IsValid(int value);
const AdapterConfig_Mode AdapterConfig_Mode_Mode_MIN = AdapterConfig_Mode_RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig_Mode_Mode_MAX = AdapterConfig_Mode_DUPLEX;
const int AdapterConfig_Mode_Mode_ARRAYSIZE = AdapterConfig_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor();
inline const ::std::string& AdapterConfig_Mode_Name(AdapterConfig_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdapterConfig_Mode_descriptor(), value);
}
inline bool AdapterConfig_Mode_Parse(
    const ::std::string& name, AdapterConfig_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdapterConfig_Mode>(
    AdapterConfig_Mode_descriptor(), name, value);
}
// ===================================================================

class AdapterConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.adapter.AdapterConfig) */ {
 public:
  AdapterConfig();
  virtual ~AdapterConfig();

  AdapterConfig(const AdapterConfig& from);

  inline AdapterConfig& operator=(const AdapterConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdapterConfig& default_instance();

  static inline const AdapterConfig* internal_default_instance() {
    return reinterpret_cast<const AdapterConfig*>(
               &_AdapterConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AdapterConfig* other);

  // implements Message ----------------------------------------------

  inline AdapterConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  AdapterConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdapterConfig& from);
  void MergeFrom(const AdapterConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdapterConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AdapterConfig_MessageType MessageType;
  static const MessageType POINT_CLOUD =
    AdapterConfig_MessageType_POINT_CLOUD;
  static const MessageType GPS =
    AdapterConfig_MessageType_GPS;
  static const MessageType IMU =
    AdapterConfig_MessageType_IMU;
  static const MessageType CHASSIS =
    AdapterConfig_MessageType_CHASSIS;
  static const MessageType LOCALIZATION =
    AdapterConfig_MessageType_LOCALIZATION;
  static const MessageType PLANNING_TRAJECTORY =
    AdapterConfig_MessageType_PLANNING_TRAJECTORY;
  static const MessageType MONITOR =
    AdapterConfig_MessageType_MONITOR;
  static const MessageType PAD =
    AdapterConfig_MessageType_PAD;
  static const MessageType CONTROL_COMMAND =
    AdapterConfig_MessageType_CONTROL_COMMAND;
  static const MessageType PREDICTION =
    AdapterConfig_MessageType_PREDICTION;
  static const MessageType PERCEPTION_OBSTACLES =
    AdapterConfig_MessageType_PERCEPTION_OBSTACLES;
  static const MessageType TRAFFIC_LIGHT_DETECTION =
    AdapterConfig_MessageType_TRAFFIC_LIGHT_DETECTION;
  static const MessageType CHASSIS_DETAIL =
    AdapterConfig_MessageType_CHASSIS_DETAIL;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const MessageType DECISION =
    AdapterConfig_MessageType_DECISION;
  static const MessageType CANBUS =
    AdapterConfig_MessageType_CANBUS;
  static const MessageType ROUTING_REQUEST =
    AdapterConfig_MessageType_ROUTING_REQUEST;
  static const MessageType ROUTING_RESPONSE =
    AdapterConfig_MessageType_ROUTING_RESPONSE;
  static const MessageType RELATIVE_ODOMETRY =
    AdapterConfig_MessageType_RELATIVE_ODOMETRY;
  static const MessageType INS_STAT =
    AdapterConfig_MessageType_INS_STAT;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const MessageType HMI_COMMAND =
    AdapterConfig_MessageType_HMI_COMMAND;
  static const MessageType MOBILEYE =
    AdapterConfig_MessageType_MOBILEYE;
  static const MessageType DELPHIESR =
    AdapterConfig_MessageType_DELPHIESR;
  static const MessageType COMPRESSED_IMAGE =
    AdapterConfig_MessageType_COMPRESSED_IMAGE;
  static const MessageType SYSTEM_STATUS =
    AdapterConfig_MessageType_SYSTEM_STATUS;
  static const MessageType INS_STATUS =
    AdapterConfig_MessageType_INS_STATUS;
  static const MessageType GNSS_STATUS =
    AdapterConfig_MessageType_GNSS_STATUS;
  static const MessageType CONTI_RADAR =
    AdapterConfig_MessageType_CONTI_RADAR;
  static const MessageType IMAGE_SHORT =
    AdapterConfig_MessageType_IMAGE_SHORT;
  static const MessageType IMAGE_LONG =
    AdapterConfig_MessageType_IMAGE_LONG;
  static const MessageType DRIVE_EVENT =
    AdapterConfig_MessageType_DRIVE_EVENT;
  static const MessageType GNSS_RTK_OBS =
    AdapterConfig_MessageType_GNSS_RTK_OBS;
  static const MessageType GNSS_RTK_EPH =
    AdapterConfig_MessageType_GNSS_RTK_EPH;
  static const MessageType GNSS_BEST_POSE =
    AdapterConfig_MessageType_GNSS_BEST_POSE;
  static const MessageType LOCALIZATION_MSF_GNSS =
    AdapterConfig_MessageType_LOCALIZATION_MSF_GNSS;
  static const MessageType LOCALIZATION_MSF_LIDAR =
    AdapterConfig_MessageType_LOCALIZATION_MSF_LIDAR;
  static const MessageType LOCALIZATION_MSF_SINS_PVA =
    AdapterConfig_MessageType_LOCALIZATION_MSF_SINS_PVA;
  static const MessageType RAW_IMU =
    AdapterConfig_MessageType_RAW_IMU;
  static const MessageType LOCALIZATION_MSF_STATUS =
    AdapterConfig_MessageType_LOCALIZATION_MSF_STATUS;
  static const MessageType STATIC_INFO =
    AdapterConfig_MessageType_STATIC_INFO;
  static inline bool MessageType_IsValid(int value) {
    return AdapterConfig_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    AdapterConfig_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    AdapterConfig_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    AdapterConfig_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return AdapterConfig_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return AdapterConfig_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return AdapterConfig_MessageType_Parse(name, value);
  }

  typedef AdapterConfig_Mode Mode;
  static const Mode RECEIVE_ONLY =
    AdapterConfig_Mode_RECEIVE_ONLY;
  static const Mode PUBLISH_ONLY =
    AdapterConfig_Mode_PUBLISH_ONLY;
  static const Mode DUPLEX =
    AdapterConfig_Mode_DUPLEX;
  static inline bool Mode_IsValid(int value) {
    return AdapterConfig_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    AdapterConfig_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    AdapterConfig_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    AdapterConfig_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return AdapterConfig_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return AdapterConfig_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return AdapterConfig_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::apollo::common::adapter::AdapterConfig_Mode mode() const;
  void set_mode(::apollo::common::adapter::AdapterConfig_Mode value);

  // optional bool latch = 4 [default = false];
  bool has_latch() const;
  void clear_latch();
  static const int kLatchFieldNumber = 4;
  bool latch() const;
  void set_latch(bool value);

  // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::apollo::common::adapter::AdapterConfig_MessageType type() const;
  void set_type(::apollo::common::adapter::AdapterConfig_MessageType value);

  // optional int32 message_history_limit = 3 [default = 10];
  bool has_message_history_limit() const;
  void clear_message_history_limit();
  static const int kMessageHistoryLimitFieldNumber = 3;
  ::google::protobuf::int32 message_history_limit() const;
  void set_message_history_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.common.adapter.AdapterConfig)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_mode();
  void clear_has_mode();
  void set_has_message_history_limit();
  void clear_has_message_history_limit();
  void set_has_latch();
  void clear_has_latch();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int mode_;
  bool latch_;
  int type_;
  ::google::protobuf::int32 message_history_limit_;
  friend struct protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdapterManagerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.adapter.AdapterManagerConfig) */ {
 public:
  AdapterManagerConfig();
  virtual ~AdapterManagerConfig();

  AdapterManagerConfig(const AdapterManagerConfig& from);

  inline AdapterManagerConfig& operator=(const AdapterManagerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdapterManagerConfig& default_instance();

  static inline const AdapterManagerConfig* internal_default_instance() {
    return reinterpret_cast<const AdapterManagerConfig*>(
               &_AdapterManagerConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AdapterManagerConfig* other);

  // implements Message ----------------------------------------------

  inline AdapterManagerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  AdapterManagerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdapterManagerConfig& from);
  void MergeFrom(const AdapterManagerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdapterManagerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::apollo::common::adapter::AdapterConfig& config(int index) const;
  ::apollo::common::adapter::AdapterConfig* mutable_config(int index);
  ::apollo::common::adapter::AdapterConfig* add_config();
  ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
      config() const;

  // required bool is_ros = 2;
  bool has_is_ros() const;
  void clear_is_ros();
  static const int kIsRosFieldNumber = 2;
  bool is_ros() const;
  void set_is_ros(bool value);

  // @@protoc_insertion_point(class_scope:apollo.common.adapter.AdapterManagerConfig)
 private:
  void set_has_is_ros();
  void clear_has_is_ros();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig > config_;
  bool is_ros_;
  friend struct protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterConfig

// required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
inline bool AdapterConfig::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdapterConfig::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdapterConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdapterConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::apollo::common::adapter::AdapterConfig_MessageType AdapterConfig::type() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.type)
  return static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(type_);
}
inline void AdapterConfig::set_type(::apollo::common::adapter::AdapterConfig_MessageType value) {
  assert(::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.type)
}

// required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
inline bool AdapterConfig::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdapterConfig::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdapterConfig::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdapterConfig::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::apollo::common::adapter::AdapterConfig_Mode AdapterConfig::mode() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.mode)
  return static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(mode_);
}
inline void AdapterConfig::set_mode(::apollo::common::adapter::AdapterConfig_Mode value) {
  assert(::apollo::common::adapter::AdapterConfig_Mode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.mode)
}

// optional int32 message_history_limit = 3 [default = 10];
inline bool AdapterConfig::has_message_history_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdapterConfig::set_has_message_history_limit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdapterConfig::clear_has_message_history_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdapterConfig::clear_message_history_limit() {
  message_history_limit_ = 10;
  clear_has_message_history_limit();
}
inline ::google::protobuf::int32 AdapterConfig::message_history_limit() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.message_history_limit)
  return message_history_limit_;
}
inline void AdapterConfig::set_message_history_limit(::google::protobuf::int32 value) {
  set_has_message_history_limit();
  message_history_limit_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.message_history_limit)
}

// optional bool latch = 4 [default = false];
inline bool AdapterConfig::has_latch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdapterConfig::set_has_latch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdapterConfig::clear_has_latch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdapterConfig::clear_latch() {
  latch_ = false;
  clear_has_latch();
}
inline bool AdapterConfig::latch() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.latch)
  return latch_;
}
inline void AdapterConfig::set_latch(bool value) {
  set_has_latch();
  latch_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.latch)
}

// -------------------------------------------------------------------

// AdapterManagerConfig

// repeated .apollo.common.adapter.AdapterConfig config = 1;
inline int AdapterManagerConfig::config_size() const {
  return config_.size();
}
inline void AdapterManagerConfig::clear_config() {
  config_.Clear();
}
inline const ::apollo::common::adapter::AdapterConfig& AdapterManagerConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Get(index);
}
inline ::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Mutable(index);
}
inline ::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::add_config() {
  // @@protoc_insertion_point(field_add:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
AdapterManagerConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.adapter.AdapterManagerConfig.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
AdapterManagerConfig::config() const {
  // @@protoc_insertion_point(field_list:apollo.common.adapter.AdapterManagerConfig.config)
  return config_;
}

// required bool is_ros = 2;
inline bool AdapterManagerConfig::has_is_ros() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdapterManagerConfig::set_has_is_ros() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdapterManagerConfig::clear_has_is_ros() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdapterManagerConfig::clear_is_ros() {
  is_ros_ = false;
  clear_has_is_ros();
}
inline bool AdapterManagerConfig::is_ros() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.is_ros)
  return is_ros_;
}
inline void AdapterManagerConfig::set_is_ros(bool value) {
  set_has_is_ros();
  is_ros_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterManagerConfig.is_ros)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace adapter
}  // namespace common
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::common::adapter::AdapterConfig_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::common::adapter::AdapterConfig_MessageType>() {
  return ::apollo::common::adapter::AdapterConfig_MessageType_descriptor();
}
template <> struct is_proto_enum< ::apollo::common::adapter::AdapterConfig_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::common::adapter::AdapterConfig_Mode>() {
  return ::apollo::common::adapter::AdapterConfig_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto__INCLUDED
