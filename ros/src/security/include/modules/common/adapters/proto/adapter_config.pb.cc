// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/adapters/proto/adapter_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/common/adapters/proto/adapter_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace common {
namespace adapter {
class AdapterConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdapterConfig> {
} _AdapterConfig_default_instance_;
class AdapterManagerConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdapterManagerConfig> {
} _AdapterManagerConfig_default_instance_;

namespace protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, message_history_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, latch_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, is_ros_),
  ~0u,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(AdapterConfig)},
  { 13, 20, sizeof(AdapterManagerConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdapterConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdapterManagerConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/common/adapters/proto/adapter_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _AdapterConfig_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AdapterManagerConfig_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AdapterConfig_default_instance_.DefaultConstruct();
  _AdapterManagerConfig_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n2modules/common/adapters/proto/adapter_"
      "config.proto\022\025apollo.common.adapter\"\340\007\n\r"
      "AdapterConfig\022>\n\004type\030\001 \002(\01620.apollo.com"
      "mon.adapter.AdapterConfig.MessageType\0227\n"
      "\004mode\030\002 \002(\0162).apollo.common.adapter.Adap"
      "terConfig.Mode\022!\n\025message_history_limit\030"
      "\003 \001(\005:\00210\022\024\n\005latch\030\004 \001(\010:\005false\"\344\005\n\013Mess"
      "ageType\022\017\n\013POINT_CLOUD\020\001\022\007\n\003GPS\020\002\022\007\n\003IMU"
      "\020\003\022\013\n\007CHASSIS\020\004\022\020\n\014LOCALIZATION\020\005\022\027\n\023PLA"
      "NNING_TRAJECTORY\020\006\022\013\n\007MONITOR\020\007\022\007\n\003PAD\020\010"
      "\022\023\n\017CONTROL_COMMAND\020\t\022\016\n\nPREDICTION\020\n\022\030\n"
      "\024PERCEPTION_OBSTACLES\020\013\022\033\n\027TRAFFIC_LIGHT"
      "_DETECTION\020\014\022\022\n\016CHASSIS_DETAIL\020\r\022\020\n\010DECI"
      "SION\020\016\032\002\010\001\022\n\n\006CANBUS\020\017\022\023\n\017ROUTING_REQUES"
      "T\020\020\022\024\n\020ROUTING_RESPONSE\020\021\022\025\n\021RELATIVE_OD"
      "OMETRY\020\022\022\014\n\010INS_STAT\020\023\022\023\n\013HMI_COMMAND\020\024\032"
      "\002\010\001\022\014\n\010MOBILEYE\020\025\022\r\n\tDELPHIESR\020\026\022\024\n\020COMP"
      "RESSED_IMAGE\020\027\022\021\n\rSYSTEM_STATUS\020\030\022\016\n\nINS"
      "_STATUS\020\031\022\017\n\013GNSS_STATUS\020\032\022\017\n\013CONTI_RADA"
      "R\020\033\022\017\n\013IMAGE_SHORT\020\034\022\016\n\nIMAGE_LONG\020\035\022\017\n\013"
      "DRIVE_EVENT\020\036\022\020\n\014GNSS_RTK_OBS\020\037\022\020\n\014GNSS_"
      "RTK_EPH\020 \022\022\n\016GNSS_BEST_POSE\020!\022\031\n\025LOCALIZ"
      "ATION_MSF_GNSS\020\"\022\032\n\026LOCALIZATION_MSF_LID"
      "AR\020#\022\035\n\031LOCALIZATION_MSF_SINS_PVA\020$\022\013\n\007R"
      "AW_IMU\020%\022\033\n\027LOCALIZATION_MSF_STATUS\020&\022\017\n"
      "\013STATIC_INFO\020\'\"6\n\004Mode\022\020\n\014RECEIVE_ONLY\020\000"
      "\022\020\n\014PUBLISH_ONLY\020\001\022\n\n\006DUPLEX\020\002\"\\\n\024Adapte"
      "rManagerConfig\0224\n\006config\030\001 \003(\0132$.apollo."
      "common.adapter.AdapterConfig\022\016\n\006is_ros\030\002"
      " \002(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1164);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/common/adapters/proto/adapter_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto

const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool AdapterConfig_MessageType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig::GPS;
const AdapterConfig_MessageType AdapterConfig::IMU;
const AdapterConfig_MessageType AdapterConfig::CHASSIS;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION;
const AdapterConfig_MessageType AdapterConfig::PLANNING_TRAJECTORY;
const AdapterConfig_MessageType AdapterConfig::MONITOR;
const AdapterConfig_MessageType AdapterConfig::PAD;
const AdapterConfig_MessageType AdapterConfig::CONTROL_COMMAND;
const AdapterConfig_MessageType AdapterConfig::PREDICTION;
const AdapterConfig_MessageType AdapterConfig::PERCEPTION_OBSTACLES;
const AdapterConfig_MessageType AdapterConfig::TRAFFIC_LIGHT_DETECTION;
const AdapterConfig_MessageType AdapterConfig::CHASSIS_DETAIL;
const AdapterConfig_MessageType AdapterConfig::DECISION;
const AdapterConfig_MessageType AdapterConfig::CANBUS;
const AdapterConfig_MessageType AdapterConfig::ROUTING_REQUEST;
const AdapterConfig_MessageType AdapterConfig::ROUTING_RESPONSE;
const AdapterConfig_MessageType AdapterConfig::RELATIVE_ODOMETRY;
const AdapterConfig_MessageType AdapterConfig::INS_STAT;
const AdapterConfig_MessageType AdapterConfig::HMI_COMMAND;
const AdapterConfig_MessageType AdapterConfig::MOBILEYE;
const AdapterConfig_MessageType AdapterConfig::DELPHIESR;
const AdapterConfig_MessageType AdapterConfig::COMPRESSED_IMAGE;
const AdapterConfig_MessageType AdapterConfig::SYSTEM_STATUS;
const AdapterConfig_MessageType AdapterConfig::INS_STATUS;
const AdapterConfig_MessageType AdapterConfig::GNSS_STATUS;
const AdapterConfig_MessageType AdapterConfig::CONTI_RADAR;
const AdapterConfig_MessageType AdapterConfig::IMAGE_SHORT;
const AdapterConfig_MessageType AdapterConfig::IMAGE_LONG;
const AdapterConfig_MessageType AdapterConfig::DRIVE_EVENT;
const AdapterConfig_MessageType AdapterConfig::GNSS_RTK_OBS;
const AdapterConfig_MessageType AdapterConfig::GNSS_RTK_EPH;
const AdapterConfig_MessageType AdapterConfig::GNSS_BEST_POSE;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_GNSS;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_LIDAR;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_SINS_PVA;
const AdapterConfig_MessageType AdapterConfig::RAW_IMU;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION_MSF_STATUS;
const AdapterConfig_MessageType AdapterConfig::STATIC_INFO;
const AdapterConfig_MessageType AdapterConfig::MessageType_MIN;
const AdapterConfig_MessageType AdapterConfig::MessageType_MAX;
const int AdapterConfig::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_enum_descriptors[1];
}
bool AdapterConfig_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_Mode AdapterConfig::RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig::PUBLISH_ONLY;
const AdapterConfig_Mode AdapterConfig::DUPLEX;
const AdapterConfig_Mode AdapterConfig::Mode_MIN;
const AdapterConfig_Mode AdapterConfig::Mode_MAX;
const int AdapterConfig::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterConfig::kTypeFieldNumber;
const int AdapterConfig::kModeFieldNumber;
const int AdapterConfig::kMessageHistoryLimitFieldNumber;
const int AdapterConfig::kLatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterConfig::AdapterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterConfig)
}
AdapterConfig::AdapterConfig(const AdapterConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mode_, &from.mode_,
    reinterpret_cast<char*>(&message_history_limit_) -
    reinterpret_cast<char*>(&mode_) + sizeof(message_history_limit_));
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterConfig)
}

void AdapterConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mode_, 0, reinterpret_cast<char*>(&latch_) -
    reinterpret_cast<char*>(&mode_) + sizeof(latch_));
  type_ = 1;
  message_history_limit_ = 10;
}

AdapterConfig::~AdapterConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterConfig)
  SharedDtor();
}

void AdapterConfig::SharedDtor() {
}

void AdapterConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdapterConfig::descriptor() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterConfig& AdapterConfig::default_instance() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdapterConfig* AdapterConfig::New(::google::protobuf::Arena* arena) const {
  AdapterConfig* n = new AdapterConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdapterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterConfig)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&mode_, 0, reinterpret_cast<char*>(&latch_) -
      reinterpret_cast<char*>(&mode_) + sizeof(latch_));
    type_ = 1;
    message_history_limit_ = 10;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdapterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value)) {
            set_type(static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::adapter::AdapterConfig_Mode_IsValid(value)) {
            set_mode(static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 message_history_limit = 3 [default = 10];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_message_history_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_history_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool latch = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_latch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &latch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterConfig)
  return false;
#undef DO_
}

void AdapterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // optional int32 message_history_limit = 3 [default = 10];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->message_history_limit(), output);
  }

  // optional bool latch = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->latch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterConfig)
}

::google::protobuf::uint8* AdapterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // optional int32 message_history_limit = 3 [default = 10];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->message_history_limit(), target);
  }

  // optional bool latch = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->latch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterConfig)
  return target;
}

size_t AdapterConfig::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.common.adapter.AdapterConfig)
  size_t total_size = 0;

  if (has_mode()) {
    // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  if (has_type()) {
    // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t AdapterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());

    // required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional bool latch = 4 [default = false];
  if (has_latch()) {
    total_size += 1 + 1;
  }

  // optional int32 message_history_limit = 3 [default = 10];
  if (has_message_history_limit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->message_history_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdapterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterConfig)
    MergeFrom(*source);
  }
}

void AdapterConfig::MergeFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      latch_ = from.latch_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      message_history_limit_ = from.message_history_limit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AdapterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterConfig::CopyFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void AdapterConfig::Swap(AdapterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterConfig::InternalSwap(AdapterConfig* other) {
  std::swap(mode_, other->mode_);
  std::swap(latch_, other->latch_);
  std::swap(type_, other->type_);
  std::swap(message_history_limit_, other->message_history_limit_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdapterConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterConfig

// required .apollo.common.adapter.AdapterConfig.MessageType type = 1;
bool AdapterConfig::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AdapterConfig::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void AdapterConfig::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void AdapterConfig::clear_type() {
  type_ = 1;
  clear_has_type();
}
::apollo::common::adapter::AdapterConfig_MessageType AdapterConfig::type() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.type)
  return static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(type_);
}
void AdapterConfig::set_type(::apollo::common::adapter::AdapterConfig_MessageType value) {
  assert(::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.type)
}

// required .apollo.common.adapter.AdapterConfig.Mode mode = 2;
bool AdapterConfig::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdapterConfig::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
void AdapterConfig::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdapterConfig::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
::apollo::common::adapter::AdapterConfig_Mode AdapterConfig::mode() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.mode)
  return static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(mode_);
}
void AdapterConfig::set_mode(::apollo::common::adapter::AdapterConfig_Mode value) {
  assert(::apollo::common::adapter::AdapterConfig_Mode_IsValid(value));
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.mode)
}

// optional int32 message_history_limit = 3 [default = 10];
bool AdapterConfig::has_message_history_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AdapterConfig::set_has_message_history_limit() {
  _has_bits_[0] |= 0x00000008u;
}
void AdapterConfig::clear_has_message_history_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
void AdapterConfig::clear_message_history_limit() {
  message_history_limit_ = 10;
  clear_has_message_history_limit();
}
::google::protobuf::int32 AdapterConfig::message_history_limit() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.message_history_limit)
  return message_history_limit_;
}
void AdapterConfig::set_message_history_limit(::google::protobuf::int32 value) {
  set_has_message_history_limit();
  message_history_limit_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.message_history_limit)
}

// optional bool latch = 4 [default = false];
bool AdapterConfig::has_latch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AdapterConfig::set_has_latch() {
  _has_bits_[0] |= 0x00000002u;
}
void AdapterConfig::clear_has_latch() {
  _has_bits_[0] &= ~0x00000002u;
}
void AdapterConfig::clear_latch() {
  latch_ = false;
  clear_has_latch();
}
bool AdapterConfig::latch() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.latch)
  return latch_;
}
void AdapterConfig::set_latch(bool value) {
  set_has_latch();
  latch_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.latch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterManagerConfig::kConfigFieldNumber;
const int AdapterManagerConfig::kIsRosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterManagerConfig::AdapterManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterManagerConfig)
}
AdapterManagerConfig::AdapterManagerConfig(const AdapterManagerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      config_(from.config_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_ros_ = from.is_ros_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterManagerConfig)
}

void AdapterManagerConfig::SharedCtor() {
  _cached_size_ = 0;
  is_ros_ = false;
}

AdapterManagerConfig::~AdapterManagerConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterManagerConfig)
  SharedDtor();
}

void AdapterManagerConfig::SharedDtor() {
}

void AdapterManagerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdapterManagerConfig::descriptor() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdapterManagerConfig& AdapterManagerConfig::default_instance() {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdapterManagerConfig* AdapterManagerConfig::New(::google::protobuf::Arena* arena) const {
  AdapterManagerConfig* n = new AdapterManagerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdapterManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterManagerConfig)
  config_.Clear();
  is_ros_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdapterManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterManagerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.adapter.AdapterConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_ros = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_ros();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterManagerConfig)
  return false;
#undef DO_
}

void AdapterManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0, n = this->config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required bool is_ros = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ros(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterManagerConfig)
}

::google::protobuf::uint8* AdapterManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterManagerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0, n = this->config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->config(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required bool is_ros = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ros(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterManagerConfig)
  return target;
}

size_t AdapterManagerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterManagerConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required bool is_ros = 2;
  if (has_is_ros()) {
    total_size += 1 + 1;
  }
  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  {
    unsigned int count = this->config_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->config(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdapterManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AdapterManagerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterManagerConfig)
    MergeFrom(*source);
  }
}

void AdapterManagerConfig::MergeFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_is_ros()) {
    set_is_ros(from.is_ros());
  }
}

void AdapterManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterManagerConfig::CopyFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterManagerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->config())) return false;
  return true;
}

void AdapterManagerConfig::Swap(AdapterManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterManagerConfig::InternalSwap(AdapterManagerConfig* other) {
  config_.InternalSwap(&other->config_);
  std::swap(is_ros_, other->is_ros_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdapterManagerConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterManagerConfig

// repeated .apollo.common.adapter.AdapterConfig config = 1;
int AdapterManagerConfig::config_size() const {
  return config_.size();
}
void AdapterManagerConfig::clear_config() {
  config_.Clear();
}
const ::apollo::common::adapter::AdapterConfig& AdapterManagerConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Get(index);
}
::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Mutable(index);
}
::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::add_config() {
  // @@protoc_insertion_point(field_add:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
AdapterManagerConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.adapter.AdapterManagerConfig.config)
  return &config_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
AdapterManagerConfig::config() const {
  // @@protoc_insertion_point(field_list:apollo.common.adapter.AdapterManagerConfig.config)
  return config_;
}

// required bool is_ros = 2;
bool AdapterManagerConfig::has_is_ros() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdapterManagerConfig::set_has_is_ros() {
  _has_bits_[0] |= 0x00000001u;
}
void AdapterManagerConfig::clear_has_is_ros() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdapterManagerConfig::clear_is_ros() {
  is_ros_ = false;
  clear_has_is_ros();
}
bool AdapterManagerConfig::is_ros() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.is_ros)
  return is_ros_;
}
void AdapterManagerConfig::set_is_ros(bool value) {
  set_has_is_ros();
  is_ros_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterManagerConfig.is_ros)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace adapter
}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
