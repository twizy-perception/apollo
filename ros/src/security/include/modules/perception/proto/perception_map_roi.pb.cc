// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_map_roi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/perception/proto/perception_map_roi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
class PerceptionMapROI_RegionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PerceptionMapROI_Region> {
} _PerceptionMapROI_Region_default_instance_;
class PerceptionMapROIDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PerceptionMapROI> {
} _PerceptionMapROI_default_instance_;

namespace protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, start_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, end_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, start_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, end_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI_Region, extension_distance_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, hdmap_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, grid_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, num_rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, num_columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerceptionMapROI, region_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(PerceptionMapROI_Region)},
  { 15, 28, sizeof(PerceptionMapROI)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PerceptionMapROI_Region_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PerceptionMapROI_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/perception/proto/perception_map_roi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _PerceptionMapROI_Region_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PerceptionMapROI_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::common::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::InitDefaults();
  ::apollo::hdmap::protobuf_modules_2fmap_2fproto_2fmap_2eproto::InitDefaults();
  _PerceptionMapROI_Region_default_instance_.DefaultConstruct();
  _PerceptionMapROI_default_instance_.DefaultConstruct();
  _PerceptionMapROI_default_instance_.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  _PerceptionMapROI_default_instance_.get_mutable()->hdmap_header_ = const_cast< ::apollo::hdmap::Header*>(
      ::apollo::hdmap::Header::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n1modules/perception/proto/perception_ma"
      "p_roi.proto\022\021apollo.perception\032!modules/"
      "common/proto/header.proto\032\033modules/map/p"
      "roto/map.proto\"\345\002\n\020PerceptionMapROI\022%\n\006h"
      "eader\030\001 \001(\0132\025.apollo.common.Header\022*\n\014hd"
      "map_header\030\010 \001(\0132\024.apollo.hdmap.Header\022\020"
      "\n\010origin_x\030\002 \001(\001\022\020\n\010origin_y\030\003 \001(\001\022\021\n\tgr"
      "id_size\030\004 \001(\001\022\020\n\010num_rows\030\005 \001(\005\022\023\n\013num_c"
      "olumns\030\006 \001(\005\022:\n\006region\030\007 \003(\0132*.apollo.pe"
      "rception.PerceptionMapROI.Region\032d\n\006Regi"
      "on\022\017\n\007start_x\030\001 \001(\005\022\r\n\005end_x\030\002 \001(\005\022\017\n\007st"
      "art_y\030\003 \001(\005\022\r\n\005end_y\030\004 \001(\005\022\032\n\022extension_"
      "distance\030\005 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/perception/proto/perception_map_roi.proto", &protobuf_RegisterTypes);
  ::apollo::common::protobuf_modules_2fcommon_2fproto_2fheader_2eproto::AddDescriptors();
  ::apollo::hdmap::protobuf_modules_2fmap_2fproto_2fmap_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionMapROI_Region::kStartXFieldNumber;
const int PerceptionMapROI_Region::kEndXFieldNumber;
const int PerceptionMapROI_Region::kStartYFieldNumber;
const int PerceptionMapROI_Region::kEndYFieldNumber;
const int PerceptionMapROI_Region::kExtensionDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionMapROI_Region::PerceptionMapROI_Region()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.PerceptionMapROI.Region)
}
PerceptionMapROI_Region::PerceptionMapROI_Region(const PerceptionMapROI_Region& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_x_, &from.start_x_,
    reinterpret_cast<char*>(&extension_distance_) -
    reinterpret_cast<char*>(&start_x_) + sizeof(extension_distance_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.PerceptionMapROI.Region)
}

void PerceptionMapROI_Region::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&start_x_, 0, reinterpret_cast<char*>(&extension_distance_) -
    reinterpret_cast<char*>(&start_x_) + sizeof(extension_distance_));
}

PerceptionMapROI_Region::~PerceptionMapROI_Region() {
  // @@protoc_insertion_point(destructor:apollo.perception.PerceptionMapROI.Region)
  SharedDtor();
}

void PerceptionMapROI_Region::SharedDtor() {
}

void PerceptionMapROI_Region::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerceptionMapROI_Region::descriptor() {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionMapROI_Region& PerceptionMapROI_Region::default_instance() {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::InitDefaults();
  return *internal_default_instance();
}

PerceptionMapROI_Region* PerceptionMapROI_Region::New(::google::protobuf::Arena* arena) const {
  PerceptionMapROI_Region* n = new PerceptionMapROI_Region;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerceptionMapROI_Region::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.PerceptionMapROI.Region)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&start_x_, 0, reinterpret_cast<char*>(&extension_distance_) -
      reinterpret_cast<char*>(&start_x_) + sizeof(extension_distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerceptionMapROI_Region::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.PerceptionMapROI.Region)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 start_x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_start_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_end_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 start_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_start_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 end_y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_end_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 extension_distance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_extension_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extension_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.PerceptionMapROI.Region)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.PerceptionMapROI.Region)
  return false;
#undef DO_
}

void PerceptionMapROI_Region::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.PerceptionMapROI.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start_x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start_x(), output);
  }

  // optional int32 end_x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end_x(), output);
  }

  // optional int32 start_y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->start_y(), output);
  }

  // optional int32 end_y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->end_y(), output);
  }

  // optional int32 extension_distance = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->extension_distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.PerceptionMapROI.Region)
}

::google::protobuf::uint8* PerceptionMapROI_Region::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.PerceptionMapROI.Region)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 start_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start_x(), target);
  }

  // optional int32 end_x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end_x(), target);
  }

  // optional int32 start_y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->start_y(), target);
  }

  // optional int32 end_y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->end_y(), target);
  }

  // optional int32 extension_distance = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->extension_distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.PerceptionMapROI.Region)
  return target;
}

size_t PerceptionMapROI_Region::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.PerceptionMapROI.Region)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 start_x = 1;
    if (has_start_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_x());
    }

    // optional int32 end_x = 2;
    if (has_end_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_x());
    }

    // optional int32 start_y = 3;
    if (has_start_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_y());
    }

    // optional int32 end_y = 4;
    if (has_end_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_y());
    }

    // optional int32 extension_distance = 5;
    if (has_extension_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extension_distance());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerceptionMapROI_Region::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.PerceptionMapROI.Region)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionMapROI_Region* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionMapROI_Region>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.PerceptionMapROI.Region)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.PerceptionMapROI.Region)
    MergeFrom(*source);
  }
}

void PerceptionMapROI_Region::MergeFrom(const PerceptionMapROI_Region& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.PerceptionMapROI.Region)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      start_x_ = from.start_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_x_ = from.end_x_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_y_ = from.start_y_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_y_ = from.end_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      extension_distance_ = from.extension_distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PerceptionMapROI_Region::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.PerceptionMapROI.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionMapROI_Region::CopyFrom(const PerceptionMapROI_Region& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.PerceptionMapROI.Region)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionMapROI_Region::IsInitialized() const {
  return true;
}

void PerceptionMapROI_Region::Swap(PerceptionMapROI_Region* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionMapROI_Region::InternalSwap(PerceptionMapROI_Region* other) {
  std::swap(start_x_, other->start_x_);
  std::swap(end_x_, other->end_x_);
  std::swap(start_y_, other->start_y_);
  std::swap(end_y_, other->end_y_);
  std::swap(extension_distance_, other->extension_distance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerceptionMapROI_Region::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerceptionMapROI_Region

// optional int32 start_x = 1;
bool PerceptionMapROI_Region::has_start_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerceptionMapROI_Region::set_has_start_x() {
  _has_bits_[0] |= 0x00000001u;
}
void PerceptionMapROI_Region::clear_has_start_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerceptionMapROI_Region::clear_start_x() {
  start_x_ = 0;
  clear_has_start_x();
}
::google::protobuf::int32 PerceptionMapROI_Region::start_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_x)
  return start_x_;
}
void PerceptionMapROI_Region::set_start_x(::google::protobuf::int32 value) {
  set_has_start_x();
  start_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_x)
}

// optional int32 end_x = 2;
bool PerceptionMapROI_Region::has_end_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerceptionMapROI_Region::set_has_end_x() {
  _has_bits_[0] |= 0x00000002u;
}
void PerceptionMapROI_Region::clear_has_end_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerceptionMapROI_Region::clear_end_x() {
  end_x_ = 0;
  clear_has_end_x();
}
::google::protobuf::int32 PerceptionMapROI_Region::end_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_x)
  return end_x_;
}
void PerceptionMapROI_Region::set_end_x(::google::protobuf::int32 value) {
  set_has_end_x();
  end_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_x)
}

// optional int32 start_y = 3;
bool PerceptionMapROI_Region::has_start_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerceptionMapROI_Region::set_has_start_y() {
  _has_bits_[0] |= 0x00000004u;
}
void PerceptionMapROI_Region::clear_has_start_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerceptionMapROI_Region::clear_start_y() {
  start_y_ = 0;
  clear_has_start_y();
}
::google::protobuf::int32 PerceptionMapROI_Region::start_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.start_y)
  return start_y_;
}
void PerceptionMapROI_Region::set_start_y(::google::protobuf::int32 value) {
  set_has_start_y();
  start_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.start_y)
}

// optional int32 end_y = 4;
bool PerceptionMapROI_Region::has_end_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PerceptionMapROI_Region::set_has_end_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PerceptionMapROI_Region::clear_has_end_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PerceptionMapROI_Region::clear_end_y() {
  end_y_ = 0;
  clear_has_end_y();
}
::google::protobuf::int32 PerceptionMapROI_Region::end_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.end_y)
  return end_y_;
}
void PerceptionMapROI_Region::set_end_y(::google::protobuf::int32 value) {
  set_has_end_y();
  end_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.end_y)
}

// optional int32 extension_distance = 5;
bool PerceptionMapROI_Region::has_extension_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PerceptionMapROI_Region::set_has_extension_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void PerceptionMapROI_Region::clear_has_extension_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void PerceptionMapROI_Region::clear_extension_distance() {
  extension_distance_ = 0;
  clear_has_extension_distance();
}
::google::protobuf::int32 PerceptionMapROI_Region::extension_distance() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.Region.extension_distance)
  return extension_distance_;
}
void PerceptionMapROI_Region::set_extension_distance(::google::protobuf::int32 value) {
  set_has_extension_distance();
  extension_distance_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.Region.extension_distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionMapROI::kHeaderFieldNumber;
const int PerceptionMapROI::kHdmapHeaderFieldNumber;
const int PerceptionMapROI::kOriginXFieldNumber;
const int PerceptionMapROI::kOriginYFieldNumber;
const int PerceptionMapROI::kGridSizeFieldNumber;
const int PerceptionMapROI::kNumRowsFieldNumber;
const int PerceptionMapROI::kNumColumnsFieldNumber;
const int PerceptionMapROI::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionMapROI::PerceptionMapROI()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.PerceptionMapROI)
}
PerceptionMapROI::PerceptionMapROI(const PerceptionMapROI& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      region_(from.region_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_hdmap_header()) {
    hdmap_header_ = new ::apollo::hdmap::Header(*from.hdmap_header_);
  } else {
    hdmap_header_ = NULL;
  }
  ::memcpy(&origin_x_, &from.origin_x_,
    reinterpret_cast<char*>(&num_columns_) -
    reinterpret_cast<char*>(&origin_x_) + sizeof(num_columns_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.PerceptionMapROI)
}

void PerceptionMapROI::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&header_, 0, reinterpret_cast<char*>(&num_columns_) -
    reinterpret_cast<char*>(&header_) + sizeof(num_columns_));
}

PerceptionMapROI::~PerceptionMapROI() {
  // @@protoc_insertion_point(destructor:apollo.perception.PerceptionMapROI)
  SharedDtor();
}

void PerceptionMapROI::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_;
  }
  if (this != internal_default_instance()) {
    delete hdmap_header_;
  }
}

void PerceptionMapROI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerceptionMapROI::descriptor() {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionMapROI& PerceptionMapROI::default_instance() {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::InitDefaults();
  return *internal_default_instance();
}

PerceptionMapROI* PerceptionMapROI::New(::google::protobuf::Arena* arena) const {
  PerceptionMapROI* n = new PerceptionMapROI;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerceptionMapROI::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.PerceptionMapROI)
  region_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_header()) {
      GOOGLE_DCHECK(header_ != NULL);
      header_->::apollo::common::Header::Clear();
    }
    if (has_hdmap_header()) {
      GOOGLE_DCHECK(hdmap_header_ != NULL);
      hdmap_header_->::apollo::hdmap::Header::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 124u) {
    ::memset(&origin_x_, 0, reinterpret_cast<char*>(&num_columns_) -
      reinterpret_cast<char*>(&origin_x_) + sizeof(num_columns_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PerceptionMapROI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.PerceptionMapROI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double origin_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double origin_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double grid_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_grid_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &grid_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_rows = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_num_rows();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_columns = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_num_columns();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_columns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.hdmap.Header hdmap_header = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hdmap_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.PerceptionMapROI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.PerceptionMapROI)
  return false;
#undef DO_
}

void PerceptionMapROI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.PerceptionMapROI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional double origin_x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->origin_x(), output);
  }

  // optional double origin_y = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->origin_y(), output);
  }

  // optional double grid_size = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->grid_size(), output);
  }

  // optional int32 num_rows = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_rows(), output);
  }

  // optional int32 num_columns = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->num_columns(), output);
  }

  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->region(i), output);
  }

  // optional .apollo.hdmap.Header hdmap_header = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hdmap_header_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.PerceptionMapROI)
}

::google::protobuf::uint8* PerceptionMapROI::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.PerceptionMapROI)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // optional double origin_x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->origin_x(), target);
  }

  // optional double origin_y = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->origin_y(), target);
  }

  // optional double grid_size = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->grid_size(), target);
  }

  // optional int32 num_rows = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->num_rows(), target);
  }

  // optional int32 num_columns = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->num_columns(), target);
  }

  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  for (unsigned int i = 0, n = this->region_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->region(i), deterministic, target);
  }

  // optional .apollo.hdmap.Header hdmap_header = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hdmap_header_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.PerceptionMapROI)
  return target;
}

size_t PerceptionMapROI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.PerceptionMapROI)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.perception.PerceptionMapROI.Region region = 7;
  {
    unsigned int count = this->region_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->region(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional .apollo.common.Header header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .apollo.hdmap.Header hdmap_header = 8;
    if (has_hdmap_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hdmap_header_);
    }

    // optional double origin_x = 2;
    if (has_origin_x()) {
      total_size += 1 + 8;
    }

    // optional double origin_y = 3;
    if (has_origin_y()) {
      total_size += 1 + 8;
    }

    // optional double grid_size = 4;
    if (has_grid_size()) {
      total_size += 1 + 8;
    }

    // optional int32 num_rows = 5;
    if (has_num_rows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_rows());
    }

    // optional int32 num_columns = 6;
    if (has_num_columns()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_columns());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerceptionMapROI::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.PerceptionMapROI)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionMapROI* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionMapROI>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.PerceptionMapROI)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.PerceptionMapROI)
    MergeFrom(*source);
  }
}

void PerceptionMapROI::MergeFrom(const PerceptionMapROI& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.PerceptionMapROI)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  region_.MergeFrom(from.region_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_header()->::apollo::common::Header::MergeFrom(from.header());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_hdmap_header()->::apollo::hdmap::Header::MergeFrom(from.hdmap_header());
    }
    if (cached_has_bits & 0x00000004u) {
      origin_x_ = from.origin_x_;
    }
    if (cached_has_bits & 0x00000008u) {
      origin_y_ = from.origin_y_;
    }
    if (cached_has_bits & 0x00000010u) {
      grid_size_ = from.grid_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_rows_ = from.num_rows_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_columns_ = from.num_columns_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PerceptionMapROI::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.PerceptionMapROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionMapROI::CopyFrom(const PerceptionMapROI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.PerceptionMapROI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionMapROI::IsInitialized() const {
  return true;
}

void PerceptionMapROI::Swap(PerceptionMapROI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionMapROI::InternalSwap(PerceptionMapROI* other) {
  region_.InternalSwap(&other->region_);
  std::swap(header_, other->header_);
  std::swap(hdmap_header_, other->hdmap_header_);
  std::swap(origin_x_, other->origin_x_);
  std::swap(origin_y_, other->origin_y_);
  std::swap(grid_size_, other->grid_size_);
  std::swap(num_rows_, other->num_rows_);
  std::swap(num_columns_, other->num_columns_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerceptionMapROI::GetMetadata() const {
  protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fperception_2fproto_2fperception_5fmap_5froi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PerceptionMapROI

// optional .apollo.common.Header header = 1;
bool PerceptionMapROI::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PerceptionMapROI::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void PerceptionMapROI::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void PerceptionMapROI::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
const ::apollo::common::Header& PerceptionMapROI::header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.header)
  return header_ != NULL ? *header_
                         : *::apollo::common::Header::internal_default_instance();
}
::apollo::common::Header* PerceptionMapROI::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.header)
  return header_;
}
::apollo::common::Header* PerceptionMapROI::release_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void PerceptionMapROI::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.header)
}

// optional .apollo.hdmap.Header hdmap_header = 8;
bool PerceptionMapROI::has_hdmap_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PerceptionMapROI::set_has_hdmap_header() {
  _has_bits_[0] |= 0x00000002u;
}
void PerceptionMapROI::clear_has_hdmap_header() {
  _has_bits_[0] &= ~0x00000002u;
}
void PerceptionMapROI::clear_hdmap_header() {
  if (hdmap_header_ != NULL) hdmap_header_->::apollo::hdmap::Header::Clear();
  clear_has_hdmap_header();
}
const ::apollo::hdmap::Header& PerceptionMapROI::hdmap_header() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_ != NULL ? *hdmap_header_
                         : *::apollo::hdmap::Header::internal_default_instance();
}
::apollo::hdmap::Header* PerceptionMapROI::mutable_hdmap_header() {
  set_has_hdmap_header();
  if (hdmap_header_ == NULL) {
    hdmap_header_ = new ::apollo::hdmap::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.hdmap_header)
  return hdmap_header_;
}
::apollo::hdmap::Header* PerceptionMapROI::release_hdmap_header() {
  // @@protoc_insertion_point(field_release:apollo.perception.PerceptionMapROI.hdmap_header)
  clear_has_hdmap_header();
  ::apollo::hdmap::Header* temp = hdmap_header_;
  hdmap_header_ = NULL;
  return temp;
}
void PerceptionMapROI::set_allocated_hdmap_header(::apollo::hdmap::Header* hdmap_header) {
  delete hdmap_header_;
  hdmap_header_ = hdmap_header;
  if (hdmap_header) {
    set_has_hdmap_header();
  } else {
    clear_has_hdmap_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.PerceptionMapROI.hdmap_header)
}

// optional double origin_x = 2;
bool PerceptionMapROI::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PerceptionMapROI::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
void PerceptionMapROI::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
void PerceptionMapROI::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
double PerceptionMapROI::origin_x() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_x)
  return origin_x_;
}
void PerceptionMapROI::set_origin_x(double value) {
  set_has_origin_x();
  origin_x_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_x)
}

// optional double origin_y = 3;
bool PerceptionMapROI::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PerceptionMapROI::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
void PerceptionMapROI::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
void PerceptionMapROI::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
double PerceptionMapROI::origin_y() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.origin_y)
  return origin_y_;
}
void PerceptionMapROI::set_origin_y(double value) {
  set_has_origin_y();
  origin_y_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.origin_y)
}

// optional double grid_size = 4;
bool PerceptionMapROI::has_grid_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PerceptionMapROI::set_has_grid_size() {
  _has_bits_[0] |= 0x00000010u;
}
void PerceptionMapROI::clear_has_grid_size() {
  _has_bits_[0] &= ~0x00000010u;
}
void PerceptionMapROI::clear_grid_size() {
  grid_size_ = 0;
  clear_has_grid_size();
}
double PerceptionMapROI::grid_size() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.grid_size)
  return grid_size_;
}
void PerceptionMapROI::set_grid_size(double value) {
  set_has_grid_size();
  grid_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.grid_size)
}

// optional int32 num_rows = 5;
bool PerceptionMapROI::has_num_rows() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PerceptionMapROI::set_has_num_rows() {
  _has_bits_[0] |= 0x00000020u;
}
void PerceptionMapROI::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000020u;
}
void PerceptionMapROI::clear_num_rows() {
  num_rows_ = 0;
  clear_has_num_rows();
}
::google::protobuf::int32 PerceptionMapROI::num_rows() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_rows)
  return num_rows_;
}
void PerceptionMapROI::set_num_rows(::google::protobuf::int32 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_rows)
}

// optional int32 num_columns = 6;
bool PerceptionMapROI::has_num_columns() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PerceptionMapROI::set_has_num_columns() {
  _has_bits_[0] |= 0x00000040u;
}
void PerceptionMapROI::clear_has_num_columns() {
  _has_bits_[0] &= ~0x00000040u;
}
void PerceptionMapROI::clear_num_columns() {
  num_columns_ = 0;
  clear_has_num_columns();
}
::google::protobuf::int32 PerceptionMapROI::num_columns() const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.num_columns)
  return num_columns_;
}
void PerceptionMapROI::set_num_columns(::google::protobuf::int32 value) {
  set_has_num_columns();
  num_columns_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.PerceptionMapROI.num_columns)
}

// repeated .apollo.perception.PerceptionMapROI.Region region = 7;
int PerceptionMapROI::region_size() const {
  return region_.size();
}
void PerceptionMapROI::clear_region() {
  region_.Clear();
}
const ::apollo::perception::PerceptionMapROI_Region& PerceptionMapROI::region(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.PerceptionMapROI.region)
  return region_.Get(index);
}
::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.PerceptionMapROI.region)
  return region_.Mutable(index);
}
::apollo::perception::PerceptionMapROI_Region* PerceptionMapROI::add_region() {
  // @@protoc_insertion_point(field_add:apollo.perception.PerceptionMapROI.region)
  return region_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >*
PerceptionMapROI::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.PerceptionMapROI.region)
  return &region_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::PerceptionMapROI_Region >&
PerceptionMapROI::region() const {
  // @@protoc_insertion_point(field_list:apollo.perception.PerceptionMapROI.region)
  return region_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
