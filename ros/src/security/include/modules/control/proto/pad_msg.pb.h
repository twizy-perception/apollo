// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/control/proto/pad_msg.proto

#ifndef PROTOBUF_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto__INCLUDED
#define PROTOBUF_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/header.pb.h"
#include "modules/canbus/proto/chassis.pb.h"
// @@protoc_insertion_point(includes)
namespace apollo {
namespace canbus {
class Chassis;
class ChassisDefaultTypeInternal;
extern ChassisDefaultTypeInternal _Chassis_default_instance_;
class ChassisGPS;
class ChassisGPSDefaultTypeInternal;
extern ChassisGPSDefaultTypeInternal _ChassisGPS_default_instance_;
}  // namespace canbus
namespace common {
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
}  // namespace common
namespace control {
class PadMessage;
class PadMessageDefaultTypeInternal;
extern PadMessageDefaultTypeInternal _PadMessage_default_instance_;
}  // namespace control
}  // namespace apollo

namespace apollo {
namespace control {

namespace protobuf_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto

enum DrivingAction {
  STOP = 0,
  START = 1,
  RESET = 2
};
bool DrivingAction_IsValid(int value);
const DrivingAction DrivingAction_MIN = STOP;
const DrivingAction DrivingAction_MAX = RESET;
const int DrivingAction_ARRAYSIZE = DrivingAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* DrivingAction_descriptor();
inline const ::std::string& DrivingAction_Name(DrivingAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    DrivingAction_descriptor(), value);
}
inline bool DrivingAction_Parse(
    const ::std::string& name, DrivingAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DrivingAction>(
    DrivingAction_descriptor(), name, value);
}
// ===================================================================

class PadMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.control.PadMessage) */ {
 public:
  PadMessage();
  virtual ~PadMessage();

  PadMessage(const PadMessage& from);

  inline PadMessage& operator=(const PadMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PadMessage& default_instance();

  static inline const PadMessage* internal_default_instance() {
    return reinterpret_cast<const PadMessage*>(
               &_PadMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PadMessage* other);

  // implements Message ----------------------------------------------

  inline PadMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  PadMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PadMessage& from);
  void MergeFrom(const PadMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PadMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* mutable_header();
  ::apollo::common::Header* release_header();
  void set_allocated_header(::apollo::common::Header* header);

  // optional .apollo.canbus.Chassis.DrivingMode driving_mode = 2;
  bool has_driving_mode() const;
  void clear_driving_mode();
  static const int kDrivingModeFieldNumber = 2;
  ::apollo::canbus::Chassis_DrivingMode driving_mode() const;
  void set_driving_mode(::apollo::canbus::Chassis_DrivingMode value);

  // optional .apollo.control.DrivingAction action = 3;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 3;
  ::apollo::control::DrivingAction action() const;
  void set_action(::apollo::control::DrivingAction value);

  // @@protoc_insertion_point(class_scope:apollo.control.PadMessage)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_driving_mode();
  void clear_has_driving_mode();
  void set_has_action();
  void clear_has_action();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::apollo::common::Header* header_;
  int driving_mode_;
  int action_;
  friend struct protobuf_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PadMessage

// optional .apollo.common.Header header = 1;
inline bool PadMessage::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PadMessage::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PadMessage::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PadMessage::clear_header() {
  if (header_ != NULL) header_->::apollo::common::Header::Clear();
  clear_has_header();
}
inline const ::apollo::common::Header& PadMessage::header() const {
  // @@protoc_insertion_point(field_get:apollo.control.PadMessage.header)
  return header_ != NULL ? *header_
                         : *::apollo::common::Header::internal_default_instance();
}
inline ::apollo::common::Header* PadMessage::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.control.PadMessage.header)
  return header_;
}
inline ::apollo::common::Header* PadMessage::release_header() {
  // @@protoc_insertion_point(field_release:apollo.control.PadMessage.header)
  clear_has_header();
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void PadMessage::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.control.PadMessage.header)
}

// optional .apollo.canbus.Chassis.DrivingMode driving_mode = 2;
inline bool PadMessage::has_driving_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PadMessage::set_has_driving_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PadMessage::clear_has_driving_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PadMessage::clear_driving_mode() {
  driving_mode_ = 0;
  clear_has_driving_mode();
}
inline ::apollo::canbus::Chassis_DrivingMode PadMessage::driving_mode() const {
  // @@protoc_insertion_point(field_get:apollo.control.PadMessage.driving_mode)
  return static_cast< ::apollo::canbus::Chassis_DrivingMode >(driving_mode_);
}
inline void PadMessage::set_driving_mode(::apollo::canbus::Chassis_DrivingMode value) {
  assert(::apollo::canbus::Chassis_DrivingMode_IsValid(value));
  set_has_driving_mode();
  driving_mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PadMessage.driving_mode)
}

// optional .apollo.control.DrivingAction action = 3;
inline bool PadMessage::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PadMessage::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PadMessage::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PadMessage::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::apollo::control::DrivingAction PadMessage::action() const {
  // @@protoc_insertion_point(field_get:apollo.control.PadMessage.action)
  return static_cast< ::apollo::control::DrivingAction >(action_);
}
inline void PadMessage::set_action(::apollo::control::DrivingAction value) {
  assert(::apollo::control::DrivingAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PadMessage.action)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace control
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::control::DrivingAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::control::DrivingAction>() {
  return ::apollo::control::DrivingAction_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcontrol_2fproto_2fpad_5fmsg_2eproto__INCLUDED
