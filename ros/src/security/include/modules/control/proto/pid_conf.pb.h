// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/control/proto/pid_conf.proto

#ifndef PROTOBUF_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto__INCLUDED
#define PROTOBUF_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace apollo {
namespace control {
class PidConf;
class PidConfDefaultTypeInternal;
extern PidConfDefaultTypeInternal _PidConf_default_instance_;
}  // namespace control
}  // namespace apollo

namespace apollo {
namespace control {

namespace protobuf_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto

// ===================================================================

class PidConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.control.PidConf) */ {
 public:
  PidConf();
  virtual ~PidConf();

  PidConf(const PidConf& from);

  inline PidConf& operator=(const PidConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PidConf& default_instance();

  static inline const PidConf* internal_default_instance() {
    return reinterpret_cast<const PidConf*>(
               &_PidConf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PidConf* other);

  // implements Message ----------------------------------------------

  inline PidConf* New() const PROTOBUF_FINAL { return New(NULL); }

  PidConf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PidConf& from);
  void MergeFrom(const PidConf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PidConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double integrator_saturation_level = 2;
  bool has_integrator_saturation_level() const;
  void clear_integrator_saturation_level();
  static const int kIntegratorSaturationLevelFieldNumber = 2;
  double integrator_saturation_level() const;
  void set_integrator_saturation_level(double value);

  // optional double kp = 3;
  bool has_kp() const;
  void clear_kp();
  static const int kKpFieldNumber = 3;
  double kp() const;
  void set_kp(double value);

  // optional double ki = 4;
  bool has_ki() const;
  void clear_ki();
  static const int kKiFieldNumber = 4;
  double ki() const;
  void set_ki(double value);

  // optional double kd = 5;
  bool has_kd() const;
  void clear_kd();
  static const int kKdFieldNumber = 5;
  double kd() const;
  void set_kd(double value);

  // optional double kaw = 6 [default = 0];
  bool has_kaw() const;
  void clear_kaw();
  static const int kKawFieldNumber = 6;
  double kaw() const;
  void set_kaw(double value);

  // optional double output_saturation_level = 7;
  bool has_output_saturation_level() const;
  void clear_output_saturation_level();
  static const int kOutputSaturationLevelFieldNumber = 7;
  double output_saturation_level() const;
  void set_output_saturation_level(double value);

  // optional bool integrator_enable = 1;
  bool has_integrator_enable() const;
  void clear_integrator_enable();
  static const int kIntegratorEnableFieldNumber = 1;
  bool integrator_enable() const;
  void set_integrator_enable(bool value);

  // @@protoc_insertion_point(class_scope:apollo.control.PidConf)
 private:
  void set_has_integrator_enable();
  void clear_has_integrator_enable();
  void set_has_integrator_saturation_level();
  void clear_has_integrator_saturation_level();
  void set_has_kp();
  void clear_has_kp();
  void set_has_ki();
  void clear_has_ki();
  void set_has_kd();
  void clear_has_kd();
  void set_has_kaw();
  void clear_has_kaw();
  void set_has_output_saturation_level();
  void clear_has_output_saturation_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double integrator_saturation_level_;
  double kp_;
  double ki_;
  double kd_;
  double kaw_;
  double output_saturation_level_;
  bool integrator_enable_;
  friend struct protobuf_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PidConf

// optional bool integrator_enable = 1;
inline bool PidConf::has_integrator_enable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PidConf::set_has_integrator_enable() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PidConf::clear_has_integrator_enable() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PidConf::clear_integrator_enable() {
  integrator_enable_ = false;
  clear_has_integrator_enable();
}
inline bool PidConf::integrator_enable() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.integrator_enable)
  return integrator_enable_;
}
inline void PidConf::set_integrator_enable(bool value) {
  set_has_integrator_enable();
  integrator_enable_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.integrator_enable)
}

// optional double integrator_saturation_level = 2;
inline bool PidConf::has_integrator_saturation_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PidConf::set_has_integrator_saturation_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PidConf::clear_has_integrator_saturation_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PidConf::clear_integrator_saturation_level() {
  integrator_saturation_level_ = 0;
  clear_has_integrator_saturation_level();
}
inline double PidConf::integrator_saturation_level() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.integrator_saturation_level)
  return integrator_saturation_level_;
}
inline void PidConf::set_integrator_saturation_level(double value) {
  set_has_integrator_saturation_level();
  integrator_saturation_level_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.integrator_saturation_level)
}

// optional double kp = 3;
inline bool PidConf::has_kp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PidConf::set_has_kp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PidConf::clear_has_kp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PidConf::clear_kp() {
  kp_ = 0;
  clear_has_kp();
}
inline double PidConf::kp() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.kp)
  return kp_;
}
inline void PidConf::set_kp(double value) {
  set_has_kp();
  kp_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.kp)
}

// optional double ki = 4;
inline bool PidConf::has_ki() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PidConf::set_has_ki() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PidConf::clear_has_ki() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PidConf::clear_ki() {
  ki_ = 0;
  clear_has_ki();
}
inline double PidConf::ki() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.ki)
  return ki_;
}
inline void PidConf::set_ki(double value) {
  set_has_ki();
  ki_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.ki)
}

// optional double kd = 5;
inline bool PidConf::has_kd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PidConf::set_has_kd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PidConf::clear_has_kd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PidConf::clear_kd() {
  kd_ = 0;
  clear_has_kd();
}
inline double PidConf::kd() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.kd)
  return kd_;
}
inline void PidConf::set_kd(double value) {
  set_has_kd();
  kd_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.kd)
}

// optional double kaw = 6 [default = 0];
inline bool PidConf::has_kaw() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PidConf::set_has_kaw() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PidConf::clear_has_kaw() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PidConf::clear_kaw() {
  kaw_ = 0;
  clear_has_kaw();
}
inline double PidConf::kaw() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.kaw)
  return kaw_;
}
inline void PidConf::set_kaw(double value) {
  set_has_kaw();
  kaw_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.kaw)
}

// optional double output_saturation_level = 7;
inline bool PidConf::has_output_saturation_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PidConf::set_has_output_saturation_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PidConf::clear_has_output_saturation_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PidConf::clear_output_saturation_level() {
  output_saturation_level_ = 0;
  clear_has_output_saturation_level();
}
inline double PidConf::output_saturation_level() const {
  // @@protoc_insertion_point(field_get:apollo.control.PidConf.output_saturation_level)
  return output_saturation_level_;
}
inline void PidConf::set_output_saturation_level(double value) {
  set_has_output_saturation_level();
  output_saturation_level_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.PidConf.output_saturation_level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace control
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcontrol_2fproto_2fpid_5fconf_2eproto__INCLUDED
