// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/monitor/proto/monitor_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/monitor/proto/monitor_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace monitor {
class ProcessConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProcessConf> {
} _ProcessConf_default_instance_;
class ProcessStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProcessStatus> {
} _ProcessStatus_default_instance_;
class TopicConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TopicConf> {
} _TopicConf_default_instance_;
class TopicStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TopicStatus> {
} _TopicStatus_default_instance_;
class MonitorConf_ModuleConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MonitorConf_ModuleConf> {
} _MonitorConf_ModuleConf_default_instance_;
class MonitorConf_HardwareConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MonitorConf_HardwareConf> {
} _MonitorConf_HardwareConf_default_instance_;
class MonitorConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MonitorConf> {
} _MonitorConf_default_instance_;

namespace protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessConf, process_cmd_keywords_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStatus, running_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConf, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicConf, acceptable_delay_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopicStatus, message_delay_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_ModuleConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_ModuleConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_ModuleConf, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_ModuleConf, process_conf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_ModuleConf, topic_conf_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_HardwareConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_HardwareConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_HardwareConf, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf_HardwareConf, topic_conf_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf, modules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf, hardware_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonitorConf, online_report_endpoint_),
  ~0u,
  ~0u,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(ProcessConf)},
  { 7, 13, sizeof(ProcessStatus)},
  { 14, 21, sizeof(TopicConf)},
  { 23, 29, sizeof(TopicStatus)},
  { 30, 38, sizeof(MonitorConf_ModuleConf)},
  { 41, 48, sizeof(MonitorConf_HardwareConf)},
  { 50, 58, sizeof(MonitorConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProcessConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProcessStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopicConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopicStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonitorConf_ModuleConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonitorConf_HardwareConf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonitorConf_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/monitor/proto/monitor_conf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _ProcessConf_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ProcessStatus_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TopicConf_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _TopicStatus_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MonitorConf_ModuleConf_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MonitorConf_HardwareConf_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MonitorConf_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::common::adapter::protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::InitDefaults();
  _ProcessConf_default_instance_.DefaultConstruct();
  _ProcessStatus_default_instance_.DefaultConstruct();
  _TopicConf_default_instance_.DefaultConstruct();
  _TopicStatus_default_instance_.DefaultConstruct();
  _MonitorConf_ModuleConf_default_instance_.DefaultConstruct();
  _MonitorConf_HardwareConf_default_instance_.DefaultConstruct();
  _MonitorConf_default_instance_.DefaultConstruct();
  _MonitorConf_ModuleConf_default_instance_.get_mutable()->process_conf_ = const_cast< ::apollo::monitor::ProcessConf*>(
      ::apollo::monitor::ProcessConf::internal_default_instance());
  _MonitorConf_ModuleConf_default_instance_.get_mutable()->topic_conf_ = const_cast< ::apollo::monitor::TopicConf*>(
      ::apollo::monitor::TopicConf::internal_default_instance());
  _MonitorConf_HardwareConf_default_instance_.get_mutable()->topic_conf_ = const_cast< ::apollo::monitor::TopicConf*>(
      ::apollo::monitor::TopicConf::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n(modules/monitor/proto/monitor_conf.pro"
      "to\022\016apollo.monitor\0322modules/common/adapt"
      "ers/proto/adapter_config.proto\"+\n\013Proces"
      "sConf\022\034\n\024process_cmd_keywords\030\001 \003(\t\" \n\rP"
      "rocessStatus\022\017\n\007running\030\001 \001(\010\"h\n\tTopicCo"
      "nf\022>\n\004type\030\001 \001(\01620.apollo.common.adapter"
      ".AdapterConfig.MessageType\022\033\n\020acceptable"
      "_delay\030\002 \001(\001:\0011\"$\n\013TopicStatus\022\025\n\rmessag"
      "e_delay\030\001 \001(\001\"\355\002\n\013MonitorConf\0227\n\007modules"
      "\030\001 \003(\0132&.apollo.monitor.MonitorConf.Modu"
      "leConf\022:\n\010hardware\030\002 \003(\0132(.apollo.monito"
      "r.MonitorConf.HardwareConf\022\036\n\026online_rep"
      "ort_endpoint\030\003 \001(\t\032|\n\nModuleConf\022\014\n\004name"
      "\030\001 \001(\t\0221\n\014process_conf\030\002 \001(\0132\033.apollo.mo"
      "nitor.ProcessConf\022-\n\ntopic_conf\030\003 \001(\0132\031."
      "apollo.monitor.TopicConf\032K\n\014HardwareConf"
      "\022\014\n\004name\030\001 \001(\t\022-\n\ntopic_conf\030\002 \001(\0132\031.apo"
      "llo.monitor.TopicConf"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 701);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/monitor/proto/monitor_conf.proto", &protobuf_RegisterTypes);
  ::apollo::common::adapter::protobuf_modules_2fcommon_2fadapters_2fproto_2fadapter_5fconfig_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessConf::kProcessCmdKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessConf::ProcessConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.ProcessConf)
}
ProcessConf::ProcessConf(const ProcessConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      process_cmd_keywords_(from.process_cmd_keywords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.ProcessConf)
}

void ProcessConf::SharedCtor() {
  _cached_size_ = 0;
}

ProcessConf::~ProcessConf() {
  // @@protoc_insertion_point(destructor:apollo.monitor.ProcessConf)
  SharedDtor();
}

void ProcessConf::SharedDtor() {
}

void ProcessConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessConf::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessConf& ProcessConf::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProcessConf* ProcessConf::New(::google::protobuf::Arena* arena) const {
  ProcessConf* n = new ProcessConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.ProcessConf)
  process_cmd_keywords_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.ProcessConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string process_cmd_keywords = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_process_cmd_keywords()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->process_cmd_keywords(this->process_cmd_keywords_size() - 1).data(),
            this->process_cmd_keywords(this->process_cmd_keywords_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.ProcessConf.process_cmd_keywords");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.ProcessConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.ProcessConf)
  return false;
#undef DO_
}

void ProcessConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.ProcessConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string process_cmd_keywords = 1;
  for (int i = 0, n = this->process_cmd_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_cmd_keywords(i).data(), this->process_cmd_keywords(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.ProcessConf.process_cmd_keywords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->process_cmd_keywords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.ProcessConf)
}

::google::protobuf::uint8* ProcessConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.ProcessConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string process_cmd_keywords = 1;
  for (int i = 0, n = this->process_cmd_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->process_cmd_keywords(i).data(), this->process_cmd_keywords(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.ProcessConf.process_cmd_keywords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->process_cmd_keywords(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.ProcessConf)
  return target;
}

size_t ProcessConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.ProcessConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string process_cmd_keywords = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->process_cmd_keywords_size());
  for (int i = 0, n = this->process_cmd_keywords_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->process_cmd_keywords(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.ProcessConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.ProcessConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.ProcessConf)
    MergeFrom(*source);
  }
}

void ProcessConf::MergeFrom(const ProcessConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.ProcessConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  process_cmd_keywords_.MergeFrom(from.process_cmd_keywords_);
}

void ProcessConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.ProcessConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessConf::CopyFrom(const ProcessConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.ProcessConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessConf::IsInitialized() const {
  return true;
}

void ProcessConf::Swap(ProcessConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessConf::InternalSwap(ProcessConf* other) {
  process_cmd_keywords_.InternalSwap(&other->process_cmd_keywords_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessConf::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProcessConf

// repeated string process_cmd_keywords = 1;
int ProcessConf::process_cmd_keywords_size() const {
  return process_cmd_keywords_.size();
}
void ProcessConf::clear_process_cmd_keywords() {
  process_cmd_keywords_.Clear();
}
const ::std::string& ProcessConf::process_cmd_keywords(int index) const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ProcessConf.process_cmd_keywords)
  return process_cmd_keywords_.Get(index);
}
::std::string* ProcessConf::mutable_process_cmd_keywords(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.monitor.ProcessConf.process_cmd_keywords)
  return process_cmd_keywords_.Mutable(index);
}
void ProcessConf::set_process_cmd_keywords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.monitor.ProcessConf.process_cmd_keywords)
  process_cmd_keywords_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ProcessConf::set_process_cmd_keywords(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.monitor.ProcessConf.process_cmd_keywords)
  process_cmd_keywords_.Mutable(index)->assign(std::move(value));
}
#endif
void ProcessConf::set_process_cmd_keywords(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  process_cmd_keywords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:apollo.monitor.ProcessConf.process_cmd_keywords)
}
void ProcessConf::set_process_cmd_keywords(int index, const char* value, size_t size) {
  process_cmd_keywords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.ProcessConf.process_cmd_keywords)
}
::std::string* ProcessConf::add_process_cmd_keywords() {
  // @@protoc_insertion_point(field_add_mutable:apollo.monitor.ProcessConf.process_cmd_keywords)
  return process_cmd_keywords_.Add();
}
void ProcessConf::add_process_cmd_keywords(const ::std::string& value) {
  process_cmd_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:apollo.monitor.ProcessConf.process_cmd_keywords)
}
#if LANG_CXX11
void ProcessConf::add_process_cmd_keywords(::std::string&& value) {
  process_cmd_keywords_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:apollo.monitor.ProcessConf.process_cmd_keywords)
}
#endif
void ProcessConf::add_process_cmd_keywords(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  process_cmd_keywords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:apollo.monitor.ProcessConf.process_cmd_keywords)
}
void ProcessConf::add_process_cmd_keywords(const char* value, size_t size) {
  process_cmd_keywords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:apollo.monitor.ProcessConf.process_cmd_keywords)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProcessConf::process_cmd_keywords() const {
  // @@protoc_insertion_point(field_list:apollo.monitor.ProcessConf.process_cmd_keywords)
  return process_cmd_keywords_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ProcessConf::mutable_process_cmd_keywords() {
  // @@protoc_insertion_point(field_mutable_list:apollo.monitor.ProcessConf.process_cmd_keywords)
  return &process_cmd_keywords_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessStatus::kRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessStatus::ProcessStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.ProcessStatus)
}
ProcessStatus::ProcessStatus(const ProcessStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  running_ = from.running_;
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.ProcessStatus)
}

void ProcessStatus::SharedCtor() {
  _cached_size_ = 0;
  running_ = false;
}

ProcessStatus::~ProcessStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.ProcessStatus)
  SharedDtor();
}

void ProcessStatus::SharedDtor() {
}

void ProcessStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessStatus::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessStatus& ProcessStatus::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProcessStatus* ProcessStatus::New(::google::protobuf::Arena* arena) const {
  ProcessStatus* n = new ProcessStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProcessStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.ProcessStatus)
  running_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.ProcessStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool running = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_running();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.ProcessStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.ProcessStatus)
  return false;
#undef DO_
}

void ProcessStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.ProcessStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool running = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->running(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.ProcessStatus)
}

::google::protobuf::uint8* ProcessStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.ProcessStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool running = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->running(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.ProcessStatus)
  return target;
}

size_t ProcessStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.ProcessStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool running = 1;
  if (has_running()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.ProcessStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.ProcessStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.ProcessStatus)
    MergeFrom(*source);
  }
}

void ProcessStatus::MergeFrom(const ProcessStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.ProcessStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_running()) {
    set_running(from.running());
  }
}

void ProcessStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.ProcessStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessStatus::CopyFrom(const ProcessStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.ProcessStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessStatus::IsInitialized() const {
  return true;
}

void ProcessStatus::Swap(ProcessStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessStatus::InternalSwap(ProcessStatus* other) {
  std::swap(running_, other->running_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProcessStatus::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProcessStatus

// optional bool running = 1;
bool ProcessStatus::has_running() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProcessStatus::set_has_running() {
  _has_bits_[0] |= 0x00000001u;
}
void ProcessStatus::clear_has_running() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProcessStatus::clear_running() {
  running_ = false;
  clear_has_running();
}
bool ProcessStatus::running() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.ProcessStatus.running)
  return running_;
}
void ProcessStatus::set_running(bool value) {
  set_has_running();
  running_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.ProcessStatus.running)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicConf::kTypeFieldNumber;
const int TopicConf::kAcceptableDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicConf::TopicConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.TopicConf)
}
TopicConf::TopicConf(const TopicConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&acceptable_delay_) -
    reinterpret_cast<char*>(&type_) + sizeof(acceptable_delay_));
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.TopicConf)
}

void TopicConf::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  acceptable_delay_ = 1;
}

TopicConf::~TopicConf() {
  // @@protoc_insertion_point(destructor:apollo.monitor.TopicConf)
  SharedDtor();
}

void TopicConf::SharedDtor() {
}

void TopicConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicConf::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicConf& TopicConf::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopicConf* TopicConf::New(::google::protobuf::Arena* arena) const {
  TopicConf* n = new TopicConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.TopicConf)
  if (_has_bits_[0 / 32] & 3u) {
    type_ = 1;
    acceptable_delay_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopicConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.TopicConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value)) {
            set_type(static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double acceptable_delay = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_acceptable_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &acceptable_delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.TopicConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.TopicConf)
  return false;
#undef DO_
}

void TopicConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.TopicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional double acceptable_delay = 2 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->acceptable_delay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.TopicConf)
}

::google::protobuf::uint8* TopicConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.TopicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional double acceptable_delay = 2 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->acceptable_delay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.TopicConf)
  return target;
}

size_t TopicConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.TopicConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional double acceptable_delay = 2 [default = 1];
    if (has_acceptable_delay()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.TopicConf)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.TopicConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.TopicConf)
    MergeFrom(*source);
  }
}

void TopicConf::MergeFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.TopicConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      acceptable_delay_ = from.acceptable_delay_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TopicConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.TopicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicConf::CopyFrom(const TopicConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.TopicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicConf::IsInitialized() const {
  return true;
}

void TopicConf::Swap(TopicConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicConf::InternalSwap(TopicConf* other) {
  std::swap(type_, other->type_);
  std::swap(acceptable_delay_, other->acceptable_delay_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicConf::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicConf

// optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
bool TopicConf::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicConf::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicConf::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicConf::clear_type() {
  type_ = 1;
  clear_has_type();
}
::apollo::common::adapter::AdapterConfig_MessageType TopicConf::type() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.TopicConf.type)
  return static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(type_);
}
void TopicConf::set_type(::apollo::common::adapter::AdapterConfig_MessageType value) {
  assert(::apollo::common::adapter::AdapterConfig_MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.TopicConf.type)
}

// optional double acceptable_delay = 2 [default = 1];
bool TopicConf::has_acceptable_delay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopicConf::set_has_acceptable_delay() {
  _has_bits_[0] |= 0x00000002u;
}
void TopicConf::clear_has_acceptable_delay() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopicConf::clear_acceptable_delay() {
  acceptable_delay_ = 1;
  clear_has_acceptable_delay();
}
double TopicConf::acceptable_delay() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.TopicConf.acceptable_delay)
  return acceptable_delay_;
}
void TopicConf::set_acceptable_delay(double value) {
  set_has_acceptable_delay();
  acceptable_delay_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.TopicConf.acceptable_delay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopicStatus::kMessageDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopicStatus::TopicStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.TopicStatus)
}
TopicStatus::TopicStatus(const TopicStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_delay_ = from.message_delay_;
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.TopicStatus)
}

void TopicStatus::SharedCtor() {
  _cached_size_ = 0;
  message_delay_ = 0;
}

TopicStatus::~TopicStatus() {
  // @@protoc_insertion_point(destructor:apollo.monitor.TopicStatus)
  SharedDtor();
}

void TopicStatus::SharedDtor() {
}

void TopicStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopicStatus::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopicStatus& TopicStatus::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopicStatus* TopicStatus::New(::google::protobuf::Arena* arena) const {
  TopicStatus* n = new TopicStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopicStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.TopicStatus)
  message_delay_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopicStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.TopicStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double message_delay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_message_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &message_delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.TopicStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.TopicStatus)
  return false;
#undef DO_
}

void TopicStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.TopicStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double message_delay = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->message_delay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.TopicStatus)
}

::google::protobuf::uint8* TopicStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.TopicStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double message_delay = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->message_delay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.TopicStatus)
  return target;
}

size_t TopicStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.TopicStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double message_delay = 1;
  if (has_message_delay()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopicStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.TopicStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TopicStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopicStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.TopicStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.TopicStatus)
    MergeFrom(*source);
  }
}

void TopicStatus::MergeFrom(const TopicStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.TopicStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message_delay()) {
    set_message_delay(from.message_delay());
  }
}

void TopicStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.TopicStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopicStatus::CopyFrom(const TopicStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.TopicStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopicStatus::IsInitialized() const {
  return true;
}

void TopicStatus::Swap(TopicStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopicStatus::InternalSwap(TopicStatus* other) {
  std::swap(message_delay_, other->message_delay_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopicStatus::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopicStatus

// optional double message_delay = 1;
bool TopicStatus::has_message_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopicStatus::set_has_message_delay() {
  _has_bits_[0] |= 0x00000001u;
}
void TopicStatus::clear_has_message_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopicStatus::clear_message_delay() {
  message_delay_ = 0;
  clear_has_message_delay();
}
double TopicStatus::message_delay() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.TopicStatus.message_delay)
  return message_delay_;
}
void TopicStatus::set_message_delay(double value) {
  set_has_message_delay();
  message_delay_ = value;
  // @@protoc_insertion_point(field_set:apollo.monitor.TopicStatus.message_delay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorConf_ModuleConf::kNameFieldNumber;
const int MonitorConf_ModuleConf::kProcessConfFieldNumber;
const int MonitorConf_ModuleConf::kTopicConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorConf_ModuleConf::MonitorConf_ModuleConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.MonitorConf.ModuleConf)
}
MonitorConf_ModuleConf::MonitorConf_ModuleConf(const MonitorConf_ModuleConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_process_conf()) {
    process_conf_ = new ::apollo::monitor::ProcessConf(*from.process_conf_);
  } else {
    process_conf_ = NULL;
  }
  if (from.has_topic_conf()) {
    topic_conf_ = new ::apollo::monitor::TopicConf(*from.topic_conf_);
  } else {
    topic_conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.MonitorConf.ModuleConf)
}

void MonitorConf_ModuleConf::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&process_conf_, 0, reinterpret_cast<char*>(&topic_conf_) -
    reinterpret_cast<char*>(&process_conf_) + sizeof(topic_conf_));
}

MonitorConf_ModuleConf::~MonitorConf_ModuleConf() {
  // @@protoc_insertion_point(destructor:apollo.monitor.MonitorConf.ModuleConf)
  SharedDtor();
}

void MonitorConf_ModuleConf::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete process_conf_;
  }
  if (this != internal_default_instance()) {
    delete topic_conf_;
  }
}

void MonitorConf_ModuleConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorConf_ModuleConf::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorConf_ModuleConf& MonitorConf_ModuleConf::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonitorConf_ModuleConf* MonitorConf_ModuleConf::New(::google::protobuf::Arena* arena) const {
  MonitorConf_ModuleConf* n = new MonitorConf_ModuleConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorConf_ModuleConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.MonitorConf.ModuleConf)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_process_conf()) {
      GOOGLE_DCHECK(process_conf_ != NULL);
      process_conf_->::apollo::monitor::ProcessConf::Clear();
    }
    if (has_topic_conf()) {
      GOOGLE_DCHECK(topic_conf_ != NULL);
      topic_conf_->::apollo::monitor::TopicConf::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorConf_ModuleConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.MonitorConf.ModuleConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.MonitorConf.ModuleConf.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.monitor.ProcessConf process_conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_process_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.monitor.TopicConf topic_conf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.MonitorConf.ModuleConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.MonitorConf.ModuleConf)
  return false;
#undef DO_
}

void MonitorConf_ModuleConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.MonitorConf.ModuleConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.ModuleConf.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .apollo.monitor.ProcessConf process_conf = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->process_conf_, output);
  }

  // optional .apollo.monitor.TopicConf topic_conf = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->topic_conf_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.MonitorConf.ModuleConf)
}

::google::protobuf::uint8* MonitorConf_ModuleConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.MonitorConf.ModuleConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.ModuleConf.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .apollo.monitor.ProcessConf process_conf = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->process_conf_, deterministic, target);
  }

  // optional .apollo.monitor.TopicConf topic_conf = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->topic_conf_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.MonitorConf.ModuleConf)
  return target;
}

size_t MonitorConf_ModuleConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.MonitorConf.ModuleConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.monitor.ProcessConf process_conf = 2;
    if (has_process_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->process_conf_);
    }

    // optional .apollo.monitor.TopicConf topic_conf = 3;
    if (has_topic_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->topic_conf_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorConf_ModuleConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.MonitorConf.ModuleConf)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorConf_ModuleConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorConf_ModuleConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.MonitorConf.ModuleConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.MonitorConf.ModuleConf)
    MergeFrom(*source);
  }
}

void MonitorConf_ModuleConf::MergeFrom(const MonitorConf_ModuleConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.MonitorConf.ModuleConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_process_conf()->::apollo::monitor::ProcessConf::MergeFrom(from.process_conf());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_topic_conf()->::apollo::monitor::TopicConf::MergeFrom(from.topic_conf());
    }
  }
}

void MonitorConf_ModuleConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.MonitorConf.ModuleConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorConf_ModuleConf::CopyFrom(const MonitorConf_ModuleConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.MonitorConf.ModuleConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorConf_ModuleConf::IsInitialized() const {
  return true;
}

void MonitorConf_ModuleConf::Swap(MonitorConf_ModuleConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorConf_ModuleConf::InternalSwap(MonitorConf_ModuleConf* other) {
  name_.Swap(&other->name_);
  std::swap(process_conf_, other->process_conf_);
  std::swap(topic_conf_, other->topic_conf_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorConf_ModuleConf::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitorConf_ModuleConf

// optional string name = 1;
bool MonitorConf_ModuleConf::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MonitorConf_ModuleConf::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MonitorConf_ModuleConf::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MonitorConf_ModuleConf::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MonitorConf_ModuleConf::name() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.ModuleConf.name)
  return name_.GetNoArena();
}
void MonitorConf_ModuleConf::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.MonitorConf.ModuleConf.name)
}
#if LANG_CXX11
void MonitorConf_ModuleConf::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.monitor.MonitorConf.ModuleConf.name)
}
#endif
void MonitorConf_ModuleConf::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.MonitorConf.ModuleConf.name)
}
void MonitorConf_ModuleConf::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.MonitorConf.ModuleConf.name)
}
::std::string* MonitorConf_ModuleConf::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.ModuleConf.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MonitorConf_ModuleConf::release_name() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.ModuleConf.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitorConf_ModuleConf::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.ModuleConf.name)
}

// optional .apollo.monitor.ProcessConf process_conf = 2;
bool MonitorConf_ModuleConf::has_process_conf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MonitorConf_ModuleConf::set_has_process_conf() {
  _has_bits_[0] |= 0x00000002u;
}
void MonitorConf_ModuleConf::clear_has_process_conf() {
  _has_bits_[0] &= ~0x00000002u;
}
void MonitorConf_ModuleConf::clear_process_conf() {
  if (process_conf_ != NULL) process_conf_->::apollo::monitor::ProcessConf::Clear();
  clear_has_process_conf();
}
const ::apollo::monitor::ProcessConf& MonitorConf_ModuleConf::process_conf() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.ModuleConf.process_conf)
  return process_conf_ != NULL ? *process_conf_
                         : *::apollo::monitor::ProcessConf::internal_default_instance();
}
::apollo::monitor::ProcessConf* MonitorConf_ModuleConf::mutable_process_conf() {
  set_has_process_conf();
  if (process_conf_ == NULL) {
    process_conf_ = new ::apollo::monitor::ProcessConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.ModuleConf.process_conf)
  return process_conf_;
}
::apollo::monitor::ProcessConf* MonitorConf_ModuleConf::release_process_conf() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.ModuleConf.process_conf)
  clear_has_process_conf();
  ::apollo::monitor::ProcessConf* temp = process_conf_;
  process_conf_ = NULL;
  return temp;
}
void MonitorConf_ModuleConf::set_allocated_process_conf(::apollo::monitor::ProcessConf* process_conf) {
  delete process_conf_;
  process_conf_ = process_conf;
  if (process_conf) {
    set_has_process_conf();
  } else {
    clear_has_process_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.ModuleConf.process_conf)
}

// optional .apollo.monitor.TopicConf topic_conf = 3;
bool MonitorConf_ModuleConf::has_topic_conf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MonitorConf_ModuleConf::set_has_topic_conf() {
  _has_bits_[0] |= 0x00000004u;
}
void MonitorConf_ModuleConf::clear_has_topic_conf() {
  _has_bits_[0] &= ~0x00000004u;
}
void MonitorConf_ModuleConf::clear_topic_conf() {
  if (topic_conf_ != NULL) topic_conf_->::apollo::monitor::TopicConf::Clear();
  clear_has_topic_conf();
}
const ::apollo::monitor::TopicConf& MonitorConf_ModuleConf::topic_conf() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.ModuleConf.topic_conf)
  return topic_conf_ != NULL ? *topic_conf_
                         : *::apollo::monitor::TopicConf::internal_default_instance();
}
::apollo::monitor::TopicConf* MonitorConf_ModuleConf::mutable_topic_conf() {
  set_has_topic_conf();
  if (topic_conf_ == NULL) {
    topic_conf_ = new ::apollo::monitor::TopicConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.ModuleConf.topic_conf)
  return topic_conf_;
}
::apollo::monitor::TopicConf* MonitorConf_ModuleConf::release_topic_conf() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.ModuleConf.topic_conf)
  clear_has_topic_conf();
  ::apollo::monitor::TopicConf* temp = topic_conf_;
  topic_conf_ = NULL;
  return temp;
}
void MonitorConf_ModuleConf::set_allocated_topic_conf(::apollo::monitor::TopicConf* topic_conf) {
  delete topic_conf_;
  topic_conf_ = topic_conf;
  if (topic_conf) {
    set_has_topic_conf();
  } else {
    clear_has_topic_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.ModuleConf.topic_conf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorConf_HardwareConf::kNameFieldNumber;
const int MonitorConf_HardwareConf::kTopicConfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorConf_HardwareConf::MonitorConf_HardwareConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.MonitorConf.HardwareConf)
}
MonitorConf_HardwareConf::MonitorConf_HardwareConf(const MonitorConf_HardwareConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_topic_conf()) {
    topic_conf_ = new ::apollo::monitor::TopicConf(*from.topic_conf_);
  } else {
    topic_conf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.MonitorConf.HardwareConf)
}

void MonitorConf_HardwareConf::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_conf_ = NULL;
}

MonitorConf_HardwareConf::~MonitorConf_HardwareConf() {
  // @@protoc_insertion_point(destructor:apollo.monitor.MonitorConf.HardwareConf)
  SharedDtor();
}

void MonitorConf_HardwareConf::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete topic_conf_;
  }
}

void MonitorConf_HardwareConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorConf_HardwareConf::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorConf_HardwareConf& MonitorConf_HardwareConf::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonitorConf_HardwareConf* MonitorConf_HardwareConf::New(::google::protobuf::Arena* arena) const {
  MonitorConf_HardwareConf* n = new MonitorConf_HardwareConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorConf_HardwareConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.MonitorConf.HardwareConf)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_topic_conf()) {
      GOOGLE_DCHECK(topic_conf_ != NULL);
      topic_conf_->::apollo::monitor::TopicConf::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorConf_HardwareConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.MonitorConf.HardwareConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.MonitorConf.HardwareConf.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.monitor.TopicConf topic_conf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_topic_conf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.MonitorConf.HardwareConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.MonitorConf.HardwareConf)
  return false;
#undef DO_
}

void MonitorConf_HardwareConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.MonitorConf.HardwareConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.HardwareConf.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .apollo.monitor.TopicConf topic_conf = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->topic_conf_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.MonitorConf.HardwareConf)
}

::google::protobuf::uint8* MonitorConf_HardwareConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.MonitorConf.HardwareConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.HardwareConf.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .apollo.monitor.TopicConf topic_conf = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->topic_conf_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.MonitorConf.HardwareConf)
  return target;
}

size_t MonitorConf_HardwareConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.MonitorConf.HardwareConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.monitor.TopicConf topic_conf = 2;
    if (has_topic_conf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->topic_conf_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorConf_HardwareConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.MonitorConf.HardwareConf)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorConf_HardwareConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorConf_HardwareConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.MonitorConf.HardwareConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.MonitorConf.HardwareConf)
    MergeFrom(*source);
  }
}

void MonitorConf_HardwareConf::MergeFrom(const MonitorConf_HardwareConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.MonitorConf.HardwareConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_topic_conf()->::apollo::monitor::TopicConf::MergeFrom(from.topic_conf());
    }
  }
}

void MonitorConf_HardwareConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.MonitorConf.HardwareConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorConf_HardwareConf::CopyFrom(const MonitorConf_HardwareConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.MonitorConf.HardwareConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorConf_HardwareConf::IsInitialized() const {
  return true;
}

void MonitorConf_HardwareConf::Swap(MonitorConf_HardwareConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorConf_HardwareConf::InternalSwap(MonitorConf_HardwareConf* other) {
  name_.Swap(&other->name_);
  std::swap(topic_conf_, other->topic_conf_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorConf_HardwareConf::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitorConf_HardwareConf

// optional string name = 1;
bool MonitorConf_HardwareConf::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MonitorConf_HardwareConf::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MonitorConf_HardwareConf::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MonitorConf_HardwareConf::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MonitorConf_HardwareConf::name() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.HardwareConf.name)
  return name_.GetNoArena();
}
void MonitorConf_HardwareConf::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.MonitorConf.HardwareConf.name)
}
#if LANG_CXX11
void MonitorConf_HardwareConf::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.monitor.MonitorConf.HardwareConf.name)
}
#endif
void MonitorConf_HardwareConf::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.MonitorConf.HardwareConf.name)
}
void MonitorConf_HardwareConf::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.MonitorConf.HardwareConf.name)
}
::std::string* MonitorConf_HardwareConf::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.HardwareConf.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MonitorConf_HardwareConf::release_name() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.HardwareConf.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitorConf_HardwareConf::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.HardwareConf.name)
}

// optional .apollo.monitor.TopicConf topic_conf = 2;
bool MonitorConf_HardwareConf::has_topic_conf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MonitorConf_HardwareConf::set_has_topic_conf() {
  _has_bits_[0] |= 0x00000002u;
}
void MonitorConf_HardwareConf::clear_has_topic_conf() {
  _has_bits_[0] &= ~0x00000002u;
}
void MonitorConf_HardwareConf::clear_topic_conf() {
  if (topic_conf_ != NULL) topic_conf_->::apollo::monitor::TopicConf::Clear();
  clear_has_topic_conf();
}
const ::apollo::monitor::TopicConf& MonitorConf_HardwareConf::topic_conf() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.HardwareConf.topic_conf)
  return topic_conf_ != NULL ? *topic_conf_
                         : *::apollo::monitor::TopicConf::internal_default_instance();
}
::apollo::monitor::TopicConf* MonitorConf_HardwareConf::mutable_topic_conf() {
  set_has_topic_conf();
  if (topic_conf_ == NULL) {
    topic_conf_ = new ::apollo::monitor::TopicConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.HardwareConf.topic_conf)
  return topic_conf_;
}
::apollo::monitor::TopicConf* MonitorConf_HardwareConf::release_topic_conf() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.HardwareConf.topic_conf)
  clear_has_topic_conf();
  ::apollo::monitor::TopicConf* temp = topic_conf_;
  topic_conf_ = NULL;
  return temp;
}
void MonitorConf_HardwareConf::set_allocated_topic_conf(::apollo::monitor::TopicConf* topic_conf) {
  delete topic_conf_;
  topic_conf_ = topic_conf;
  if (topic_conf) {
    set_has_topic_conf();
  } else {
    clear_has_topic_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.HardwareConf.topic_conf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorConf::kModulesFieldNumber;
const int MonitorConf::kHardwareFieldNumber;
const int MonitorConf::kOnlineReportEndpointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorConf::MonitorConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.monitor.MonitorConf)
}
MonitorConf::MonitorConf(const MonitorConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      modules_(from.modules_),
      hardware_(from.hardware_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  online_report_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_online_report_endpoint()) {
    online_report_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_report_endpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.monitor.MonitorConf)
}

void MonitorConf::SharedCtor() {
  _cached_size_ = 0;
  online_report_endpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MonitorConf::~MonitorConf() {
  // @@protoc_insertion_point(destructor:apollo.monitor.MonitorConf)
  SharedDtor();
}

void MonitorConf::SharedDtor() {
  online_report_endpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonitorConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorConf::descriptor() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorConf& MonitorConf::default_instance() {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonitorConf* MonitorConf::New(::google::protobuf::Arena* arena) const {
  MonitorConf* n = new MonitorConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.monitor.MonitorConf)
  modules_.Clear();
  hardware_.Clear();
  if (has_online_report_endpoint()) {
    GOOGLE_DCHECK(!online_report_endpoint_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*online_report_endpoint_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.monitor.MonitorConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.monitor.MonitorConf.ModuleConf modules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_modules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.monitor.MonitorConf.HardwareConf hardware = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hardware()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string online_report_endpoint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_online_report_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->online_report_endpoint().data(), this->online_report_endpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.monitor.MonitorConf.online_report_endpoint");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.monitor.MonitorConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.monitor.MonitorConf)
  return false;
#undef DO_
}

void MonitorConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.monitor.MonitorConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.monitor.MonitorConf.ModuleConf modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->modules(i), output);
  }

  // repeated .apollo.monitor.MonitorConf.HardwareConf hardware = 2;
  for (unsigned int i = 0, n = this->hardware_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hardware(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string online_report_endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->online_report_endpoint().data(), this->online_report_endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.online_report_endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->online_report_endpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.monitor.MonitorConf)
}

::google::protobuf::uint8* MonitorConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.monitor.MonitorConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.monitor.MonitorConf.ModuleConf modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->modules(i), deterministic, target);
  }

  // repeated .apollo.monitor.MonitorConf.HardwareConf hardware = 2;
  for (unsigned int i = 0, n = this->hardware_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->hardware(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string online_report_endpoint = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->online_report_endpoint().data(), this->online_report_endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.monitor.MonitorConf.online_report_endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->online_report_endpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.monitor.MonitorConf)
  return target;
}

size_t MonitorConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.monitor.MonitorConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.monitor.MonitorConf.ModuleConf modules = 1;
  {
    unsigned int count = this->modules_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->modules(i));
    }
  }

  // repeated .apollo.monitor.MonitorConf.HardwareConf hardware = 2;
  {
    unsigned int count = this->hardware_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hardware(i));
    }
  }

  // optional string online_report_endpoint = 3;
  if (has_online_report_endpoint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->online_report_endpoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.monitor.MonitorConf)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.monitor.MonitorConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.monitor.MonitorConf)
    MergeFrom(*source);
  }
}

void MonitorConf::MergeFrom(const MonitorConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.monitor.MonitorConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  modules_.MergeFrom(from.modules_);
  hardware_.MergeFrom(from.hardware_);
  if (from.has_online_report_endpoint()) {
    set_has_online_report_endpoint();
    online_report_endpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_report_endpoint_);
  }
}

void MonitorConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.monitor.MonitorConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorConf::CopyFrom(const MonitorConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.monitor.MonitorConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorConf::IsInitialized() const {
  return true;
}

void MonitorConf::Swap(MonitorConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorConf::InternalSwap(MonitorConf* other) {
  modules_.InternalSwap(&other->modules_);
  hardware_.InternalSwap(&other->hardware_);
  online_report_endpoint_.Swap(&other->online_report_endpoint_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorConf::GetMetadata() const {
  protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fmonitor_2fproto_2fmonitor_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonitorConf

// repeated .apollo.monitor.MonitorConf.ModuleConf modules = 1;
int MonitorConf::modules_size() const {
  return modules_.size();
}
void MonitorConf::clear_modules() {
  modules_.Clear();
}
const ::apollo::monitor::MonitorConf_ModuleConf& MonitorConf::modules(int index) const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.modules)
  return modules_.Get(index);
}
::apollo::monitor::MonitorConf_ModuleConf* MonitorConf::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.modules)
  return modules_.Mutable(index);
}
::apollo::monitor::MonitorConf_ModuleConf* MonitorConf::add_modules() {
  // @@protoc_insertion_point(field_add:apollo.monitor.MonitorConf.modules)
  return modules_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::monitor::MonitorConf_ModuleConf >*
MonitorConf::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:apollo.monitor.MonitorConf.modules)
  return &modules_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::monitor::MonitorConf_ModuleConf >&
MonitorConf::modules() const {
  // @@protoc_insertion_point(field_list:apollo.monitor.MonitorConf.modules)
  return modules_;
}

// repeated .apollo.monitor.MonitorConf.HardwareConf hardware = 2;
int MonitorConf::hardware_size() const {
  return hardware_.size();
}
void MonitorConf::clear_hardware() {
  hardware_.Clear();
}
const ::apollo::monitor::MonitorConf_HardwareConf& MonitorConf::hardware(int index) const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.hardware)
  return hardware_.Get(index);
}
::apollo::monitor::MonitorConf_HardwareConf* MonitorConf::mutable_hardware(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.hardware)
  return hardware_.Mutable(index);
}
::apollo::monitor::MonitorConf_HardwareConf* MonitorConf::add_hardware() {
  // @@protoc_insertion_point(field_add:apollo.monitor.MonitorConf.hardware)
  return hardware_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::monitor::MonitorConf_HardwareConf >*
MonitorConf::mutable_hardware() {
  // @@protoc_insertion_point(field_mutable_list:apollo.monitor.MonitorConf.hardware)
  return &hardware_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::monitor::MonitorConf_HardwareConf >&
MonitorConf::hardware() const {
  // @@protoc_insertion_point(field_list:apollo.monitor.MonitorConf.hardware)
  return hardware_;
}

// optional string online_report_endpoint = 3;
bool MonitorConf::has_online_report_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MonitorConf::set_has_online_report_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
void MonitorConf::clear_has_online_report_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
void MonitorConf::clear_online_report_endpoint() {
  online_report_endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_online_report_endpoint();
}
const ::std::string& MonitorConf::online_report_endpoint() const {
  // @@protoc_insertion_point(field_get:apollo.monitor.MonitorConf.online_report_endpoint)
  return online_report_endpoint_.GetNoArena();
}
void MonitorConf::set_online_report_endpoint(const ::std::string& value) {
  set_has_online_report_endpoint();
  online_report_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.monitor.MonitorConf.online_report_endpoint)
}
#if LANG_CXX11
void MonitorConf::set_online_report_endpoint(::std::string&& value) {
  set_has_online_report_endpoint();
  online_report_endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.monitor.MonitorConf.online_report_endpoint)
}
#endif
void MonitorConf::set_online_report_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_online_report_endpoint();
  online_report_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.monitor.MonitorConf.online_report_endpoint)
}
void MonitorConf::set_online_report_endpoint(const char* value, size_t size) {
  set_has_online_report_endpoint();
  online_report_endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.monitor.MonitorConf.online_report_endpoint)
}
::std::string* MonitorConf::mutable_online_report_endpoint() {
  set_has_online_report_endpoint();
  // @@protoc_insertion_point(field_mutable:apollo.monitor.MonitorConf.online_report_endpoint)
  return online_report_endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MonitorConf::release_online_report_endpoint() {
  // @@protoc_insertion_point(field_release:apollo.monitor.MonitorConf.online_report_endpoint)
  clear_has_online_report_endpoint();
  return online_report_endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MonitorConf::set_allocated_online_report_endpoint(::std::string* online_report_endpoint) {
  if (online_report_endpoint != NULL) {
    set_has_online_report_endpoint();
  } else {
    clear_has_online_report_endpoint();
  }
  online_report_endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_report_endpoint);
  // @@protoc_insertion_point(field_set_allocated:apollo.monitor.MonitorConf.online_report_endpoint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace monitor
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
