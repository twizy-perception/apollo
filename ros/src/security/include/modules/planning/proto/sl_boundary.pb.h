// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/sl_boundary.proto

#ifndef PROTOBUF_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto__INCLUDED
#define PROTOBUF_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace apollo {
namespace planning {
class SLBoundary;
class SLBoundaryDefaultTypeInternal;
extern SLBoundaryDefaultTypeInternal _SLBoundary_default_instance_;
}  // namespace planning
}  // namespace apollo

namespace apollo {
namespace planning {

namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto

// ===================================================================

class SLBoundary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.planning.SLBoundary) */ {
 public:
  SLBoundary();
  virtual ~SLBoundary();

  SLBoundary(const SLBoundary& from);

  inline SLBoundary& operator=(const SLBoundary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBoundary& default_instance();

  static inline const SLBoundary* internal_default_instance() {
    return reinterpret_cast<const SLBoundary*>(
               &_SLBoundary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SLBoundary* other);

  // implements Message ----------------------------------------------

  inline SLBoundary* New() const PROTOBUF_FINAL { return New(NULL); }

  SLBoundary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLBoundary& from);
  void MergeFrom(const SLBoundary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLBoundary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double start_s = 1;
  bool has_start_s() const;
  void clear_start_s();
  static const int kStartSFieldNumber = 1;
  double start_s() const;
  void set_start_s(double value);

  // optional double end_s = 2;
  bool has_end_s() const;
  void clear_end_s();
  static const int kEndSFieldNumber = 2;
  double end_s() const;
  void set_end_s(double value);

  // optional double start_l = 3;
  bool has_start_l() const;
  void clear_start_l();
  static const int kStartLFieldNumber = 3;
  double start_l() const;
  void set_start_l(double value);

  // optional double end_l = 4;
  bool has_end_l() const;
  void clear_end_l();
  static const int kEndLFieldNumber = 4;
  double end_l() const;
  void set_end_l(double value);

  // @@protoc_insertion_point(class_scope:apollo.planning.SLBoundary)
 private:
  void set_has_start_s();
  void clear_has_start_s();
  void set_has_end_s();
  void clear_has_end_s();
  void set_has_start_l();
  void clear_has_start_l();
  void set_has_end_l();
  void clear_has_end_l();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double start_s_;
  double end_s_;
  double start_l_;
  double end_l_;
  friend struct protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SLBoundary

// optional double start_s = 1;
inline bool SLBoundary::has_start_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SLBoundary::set_has_start_s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SLBoundary::clear_has_start_s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SLBoundary::clear_start_s() {
  start_s_ = 0;
  clear_has_start_s();
}
inline double SLBoundary::start_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_s)
  return start_s_;
}
inline void SLBoundary::set_start_s(double value) {
  set_has_start_s();
  start_s_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_s)
}

// optional double end_s = 2;
inline bool SLBoundary::has_end_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SLBoundary::set_has_end_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SLBoundary::clear_has_end_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SLBoundary::clear_end_s() {
  end_s_ = 0;
  clear_has_end_s();
}
inline double SLBoundary::end_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_s)
  return end_s_;
}
inline void SLBoundary::set_end_s(double value) {
  set_has_end_s();
  end_s_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_s)
}

// optional double start_l = 3;
inline bool SLBoundary::has_start_l() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SLBoundary::set_has_start_l() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SLBoundary::clear_has_start_l() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SLBoundary::clear_start_l() {
  start_l_ = 0;
  clear_has_start_l();
}
inline double SLBoundary::start_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_l)
  return start_l_;
}
inline void SLBoundary::set_start_l(double value) {
  set_has_start_l();
  start_l_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_l)
}

// optional double end_l = 4;
inline bool SLBoundary::has_end_l() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SLBoundary::set_has_end_l() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SLBoundary::clear_has_end_l() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SLBoundary::clear_end_l() {
  end_l_ = 0;
  clear_has_end_l();
}
inline double SLBoundary::end_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_l)
  return end_l_;
}
inline void SLBoundary::set_end_l(double value) {
  set_has_end_l();
  end_l_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_l)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto__INCLUDED
