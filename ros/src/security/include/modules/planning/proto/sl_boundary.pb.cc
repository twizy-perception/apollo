// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/sl_boundary.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/planning/proto/sl_boundary.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace planning {
class SLBoundaryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLBoundary> {
} _SLBoundary_default_instance_;

namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, start_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, end_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, start_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLBoundary, end_l_),
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(SLBoundary)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLBoundary_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/planning/proto/sl_boundary.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _SLBoundary_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SLBoundary_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n(modules/planning/proto/sl_boundary.pro"
      "to\022\017apollo.planning\"L\n\nSLBoundary\022\017\n\007sta"
      "rt_s\030\001 \001(\001\022\r\n\005end_s\030\002 \001(\001\022\017\n\007start_l\030\003 \001"
      "(\001\022\r\n\005end_l\030\004 \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 137);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/planning/proto/sl_boundary.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBoundary::kStartSFieldNumber;
const int SLBoundary::kEndSFieldNumber;
const int SLBoundary::kStartLFieldNumber;
const int SLBoundary::kEndLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBoundary::SLBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning.SLBoundary)
}
SLBoundary::SLBoundary(const SLBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_s_, &from.start_s_,
    reinterpret_cast<char*>(&end_l_) -
    reinterpret_cast<char*>(&start_s_) + sizeof(end_l_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning.SLBoundary)
}

void SLBoundary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&start_s_, 0, reinterpret_cast<char*>(&end_l_) -
    reinterpret_cast<char*>(&start_s_) + sizeof(end_l_));
}

SLBoundary::~SLBoundary() {
  // @@protoc_insertion_point(destructor:apollo.planning.SLBoundary)
  SharedDtor();
}

void SLBoundary::SharedDtor() {
}

void SLBoundary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBoundary::descriptor() {
  protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBoundary& SLBoundary::default_instance() {
  protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLBoundary* SLBoundary::New(::google::protobuf::Arena* arena) const {
  SLBoundary* n = new SLBoundary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning.SLBoundary)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&start_s_, 0, reinterpret_cast<char*>(&end_l_) -
      reinterpret_cast<char*>(&start_s_) + sizeof(end_l_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SLBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning.SLBoundary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double start_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_start_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_end_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double start_l = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_start_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double end_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_end_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning.SLBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning.SLBoundary)
  return false;
#undef DO_
}

void SLBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning.SLBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start_s(), output);
  }

  // optional double end_s = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end_s(), output);
  }

  // optional double start_l = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->start_l(), output);
  }

  // optional double end_l = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->end_l(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning.SLBoundary)
}

::google::protobuf::uint8* SLBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning.SLBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double start_s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start_s(), target);
  }

  // optional double end_s = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end_s(), target);
  }

  // optional double start_l = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->start_l(), target);
  }

  // optional double end_l = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->end_l(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning.SLBoundary)
  return target;
}

size_t SLBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning.SLBoundary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double start_s = 1;
    if (has_start_s()) {
      total_size += 1 + 8;
    }

    // optional double end_s = 2;
    if (has_end_s()) {
      total_size += 1 + 8;
    }

    // optional double start_l = 3;
    if (has_start_l()) {
      total_size += 1 + 8;
    }

    // optional double end_l = 4;
    if (has_end_l()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning.SLBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning.SLBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning.SLBoundary)
    MergeFrom(*source);
  }
}

void SLBoundary::MergeFrom(const SLBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning.SLBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      start_s_ = from.start_s_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_s_ = from.end_s_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_l_ = from.start_l_;
    }
    if (cached_has_bits & 0x00000008u) {
      end_l_ = from.end_l_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SLBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning.SLBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBoundary::CopyFrom(const SLBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning.SLBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBoundary::IsInitialized() const {
  return true;
}

void SLBoundary::Swap(SLBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBoundary::InternalSwap(SLBoundary* other) {
  std::swap(start_s_, other->start_s_);
  std::swap(end_s_, other->end_s_);
  std::swap(start_l_, other->start_l_);
  std::swap(end_l_, other->end_l_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBoundary::GetMetadata() const {
  protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLBoundary

// optional double start_s = 1;
bool SLBoundary::has_start_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SLBoundary::set_has_start_s() {
  _has_bits_[0] |= 0x00000001u;
}
void SLBoundary::clear_has_start_s() {
  _has_bits_[0] &= ~0x00000001u;
}
void SLBoundary::clear_start_s() {
  start_s_ = 0;
  clear_has_start_s();
}
double SLBoundary::start_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_s)
  return start_s_;
}
void SLBoundary::set_start_s(double value) {
  set_has_start_s();
  start_s_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_s)
}

// optional double end_s = 2;
bool SLBoundary::has_end_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SLBoundary::set_has_end_s() {
  _has_bits_[0] |= 0x00000002u;
}
void SLBoundary::clear_has_end_s() {
  _has_bits_[0] &= ~0x00000002u;
}
void SLBoundary::clear_end_s() {
  end_s_ = 0;
  clear_has_end_s();
}
double SLBoundary::end_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_s)
  return end_s_;
}
void SLBoundary::set_end_s(double value) {
  set_has_end_s();
  end_s_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_s)
}

// optional double start_l = 3;
bool SLBoundary::has_start_l() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SLBoundary::set_has_start_l() {
  _has_bits_[0] |= 0x00000004u;
}
void SLBoundary::clear_has_start_l() {
  _has_bits_[0] &= ~0x00000004u;
}
void SLBoundary::clear_start_l() {
  start_l_ = 0;
  clear_has_start_l();
}
double SLBoundary::start_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_l)
  return start_l_;
}
void SLBoundary::set_start_l(double value) {
  set_has_start_l();
  start_l_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_l)
}

// optional double end_l = 4;
bool SLBoundary::has_end_l() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SLBoundary::set_has_end_l() {
  _has_bits_[0] |= 0x00000008u;
}
void SLBoundary::clear_has_end_l() {
  _has_bits_[0] &= ~0x00000008u;
}
void SLBoundary::clear_end_l() {
  end_l_ = 0;
  clear_has_end_l();
}
double SLBoundary::end_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_l)
  return end_l_;
}
void SLBoundary::set_end_l(double value) {
  set_has_end_l();
  end_l_ = value;
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_l)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
