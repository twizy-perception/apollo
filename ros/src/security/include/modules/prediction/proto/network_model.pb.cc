// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/network_model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/prediction/proto/network_model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {
class VerificationSampleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerificationSample> {
} _VerificationSample_default_instance_;
class PerformanceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Performance> {
} _Performance_default_instance_;
class NetParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NetParameter> {
} _NetParameter_default_instance_;

namespace protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerificationSample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerificationSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerificationSample, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerificationSample, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerificationSample, distance_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Performance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Performance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Performance, accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Performance, recall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Performance, precision_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, verification_samples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, performance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetParameter, time_dumped_),
  2,
  0,
  ~0u,
  ~0u,
  1,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(VerificationSample)},
  { 11, 19, sizeof(Performance)},
  { 22, 33, sizeof(NetParameter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerificationSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Performance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NetParameter_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/prediction/proto/network_model.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _VerificationSample_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Performance_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _NetParameter_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::prediction::protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  _VerificationSample_default_instance_.DefaultConstruct();
  _Performance_default_instance_.DefaultConstruct();
  _NetParameter_default_instance_.DefaultConstruct();
  _NetParameter_default_instance_.get_mutable()->performance_ = const_cast< ::apollo::prediction::Performance*>(
      ::apollo::prediction::Performance::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n,modules/prediction/proto/network_model"
      ".proto\022\021apollo.prediction\032-modules/predi"
      "ction/proto/network_layers.proto\"q\n\022Veri"
      "ficationSample\0224\n\010features\030\001 \003(\0132\".apoll"
      "o.prediction.TensorParameter\022\023\n\013probabil"
      "ity\030\002 \001(\002\022\020\n\010distance\030\003 \001(\002\"B\n\013Performan"
      "ce\022\020\n\010accuracy\030\001 \003(\002\022\016\n\006recall\030\002 \003(\002\022\021\n\t"
      "precision\030\003 \003(\002\"\352\001\n\014NetParameter\022\n\n\002id\030\001"
      " \001(\005\022\014\n\004name\030\002 \001(\t\0221\n\006layers\030\003 \003(\0132!.apo"
      "llo.prediction.LayerParameter\022C\n\024verific"
      "ation_samples\030\004 \003(\0132%.apollo.prediction."
      "VerificationSample\0223\n\013performance\030\005 \001(\0132"
      "\036.apollo.prediction.Performance\022\023\n\013time_"
      "dumped\030\006 \001(\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 532);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/prediction/proto/network_model.proto", &protobuf_RegisterTypes);
  ::apollo::prediction::protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerificationSample::kFeaturesFieldNumber;
const int VerificationSample::kProbabilityFieldNumber;
const int VerificationSample::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerificationSample::VerificationSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.VerificationSample)
}
VerificationSample::VerificationSample(const VerificationSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&probability_, &from.probability_,
    reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&probability_) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.VerificationSample)
}

void VerificationSample::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&probability_, 0, reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&probability_) + sizeof(distance_));
}

VerificationSample::~VerificationSample() {
  // @@protoc_insertion_point(destructor:apollo.prediction.VerificationSample)
  SharedDtor();
}

void VerificationSample::SharedDtor() {
}

void VerificationSample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerificationSample::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerificationSample& VerificationSample::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerificationSample* VerificationSample::New(::google::protobuf::Arena* arena) const {
  VerificationSample* n = new VerificationSample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerificationSample::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.VerificationSample)
  features_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&probability_, 0, reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&probability_) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerificationSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.VerificationSample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.prediction.TensorParameter features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float probability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_probability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.VerificationSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.VerificationSample)
  return false;
#undef DO_
}

void VerificationSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.VerificationSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.prediction.TensorParameter features = 1;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->features(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional float probability = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->probability(), output);
  }

  // optional float distance = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.VerificationSample)
}

::google::protobuf::uint8* VerificationSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.VerificationSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.prediction.TensorParameter features = 1;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->features(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional float probability = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->probability(), target);
  }

  // optional float distance = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.VerificationSample)
  return target;
}

size_t VerificationSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.VerificationSample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.prediction.TensorParameter features = 1;
  {
    unsigned int count = this->features_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->features(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional float probability = 2;
    if (has_probability()) {
      total_size += 1 + 4;
    }

    // optional float distance = 3;
    if (has_distance()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerificationSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.VerificationSample)
  GOOGLE_DCHECK_NE(&from, this);
  const VerificationSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerificationSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.VerificationSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.VerificationSample)
    MergeFrom(*source);
  }
}

void VerificationSample::MergeFrom(const VerificationSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.VerificationSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      probability_ = from.probability_;
    }
    if (cached_has_bits & 0x00000002u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerificationSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.VerificationSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerificationSample::CopyFrom(const VerificationSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.VerificationSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerificationSample::IsInitialized() const {
  return true;
}

void VerificationSample::Swap(VerificationSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerificationSample::InternalSwap(VerificationSample* other) {
  features_.InternalSwap(&other->features_);
  std::swap(probability_, other->probability_);
  std::swap(distance_, other->distance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerificationSample::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerificationSample

// repeated .apollo.prediction.TensorParameter features = 1;
int VerificationSample::features_size() const {
  return features_.size();
}
void VerificationSample::clear_features() {
  features_.Clear();
}
const ::apollo::prediction::TensorParameter& VerificationSample::features(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.features)
  return features_.Get(index);
}
::apollo::prediction::TensorParameter* VerificationSample::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.VerificationSample.features)
  return features_.Mutable(index);
}
::apollo::prediction::TensorParameter* VerificationSample::add_features() {
  // @@protoc_insertion_point(field_add:apollo.prediction.VerificationSample.features)
  return features_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >*
VerificationSample::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.VerificationSample.features)
  return &features_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TensorParameter >&
VerificationSample::features() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.VerificationSample.features)
  return features_;
}

// optional float probability = 2;
bool VerificationSample::has_probability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerificationSample::set_has_probability() {
  _has_bits_[0] |= 0x00000001u;
}
void VerificationSample::clear_has_probability() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerificationSample::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
float VerificationSample::probability() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.probability)
  return probability_;
}
void VerificationSample::set_probability(float value) {
  set_has_probability();
  probability_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.VerificationSample.probability)
}

// optional float distance = 3;
bool VerificationSample::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerificationSample::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
void VerificationSample::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerificationSample::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
float VerificationSample::distance() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.VerificationSample.distance)
  return distance_;
}
void VerificationSample::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.VerificationSample.distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Performance::kAccuracyFieldNumber;
const int Performance::kRecallFieldNumber;
const int Performance::kPrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Performance::Performance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Performance)
}
Performance::Performance(const Performance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      accuracy_(from.accuracy_),
      recall_(from.recall_),
      precision_(from.precision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Performance)
}

void Performance::SharedCtor() {
  _cached_size_ = 0;
}

Performance::~Performance() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Performance)
  SharedDtor();
}

void Performance::SharedDtor() {
}

void Performance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Performance::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Performance& Performance::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

Performance* Performance::New(::google::protobuf::Arena* arena) const {
  Performance* n = new Performance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Performance::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Performance)
  accuracy_.Clear();
  recall_.Clear();
  precision_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Performance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Performance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float accuracy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_accuracy())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_accuracy())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float recall = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_recall())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_recall())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float precision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_precision())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_precision())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Performance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Performance)
  return false;
#undef DO_
}

void Performance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Performance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float accuracy = 1;
  for (int i = 0, n = this->accuracy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->accuracy(i), output);
  }

  // repeated float recall = 2;
  for (int i = 0, n = this->recall_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->recall(i), output);
  }

  // repeated float precision = 3;
  for (int i = 0, n = this->precision_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->precision(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.Performance)
}

::google::protobuf::uint8* Performance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Performance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float accuracy = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->accuracy_, target);

  // repeated float recall = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->recall_, target);

  // repeated float precision = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->precision_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Performance)
  return target;
}

size_t Performance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Performance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated float accuracy = 1;
  {
    unsigned int count = this->accuracy_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->accuracy_size());
    total_size += data_size;
  }

  // repeated float recall = 2;
  {
    unsigned int count = this->recall_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->recall_size());
    total_size += data_size;
  }

  // repeated float precision = 3;
  {
    unsigned int count = this->precision_size();
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->precision_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Performance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Performance)
  GOOGLE_DCHECK_NE(&from, this);
  const Performance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Performance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Performance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Performance)
    MergeFrom(*source);
  }
}

void Performance::MergeFrom(const Performance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Performance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accuracy_.MergeFrom(from.accuracy_);
  recall_.MergeFrom(from.recall_);
  precision_.MergeFrom(from.precision_);
}

void Performance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Performance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Performance::CopyFrom(const Performance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Performance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Performance::IsInitialized() const {
  return true;
}

void Performance::Swap(Performance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Performance::InternalSwap(Performance* other) {
  accuracy_.InternalSwap(&other->accuracy_);
  recall_.InternalSwap(&other->recall_);
  precision_.InternalSwap(&other->precision_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Performance::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Performance

// repeated float accuracy = 1;
int Performance::accuracy_size() const {
  return accuracy_.size();
}
void Performance::clear_accuracy() {
  accuracy_.Clear();
}
float Performance::accuracy(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.accuracy)
  return accuracy_.Get(index);
}
void Performance::set_accuracy(int index, float value) {
  accuracy_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.accuracy)
}
void Performance::add_accuracy(float value) {
  accuracy_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.accuracy)
}
const ::google::protobuf::RepeatedField< float >&
Performance::accuracy() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.accuracy)
  return accuracy_;
}
::google::protobuf::RepeatedField< float >*
Performance::mutable_accuracy() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.accuracy)
  return &accuracy_;
}

// repeated float recall = 2;
int Performance::recall_size() const {
  return recall_.size();
}
void Performance::clear_recall() {
  recall_.Clear();
}
float Performance::recall(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.recall)
  return recall_.Get(index);
}
void Performance::set_recall(int index, float value) {
  recall_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.recall)
}
void Performance::add_recall(float value) {
  recall_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.recall)
}
const ::google::protobuf::RepeatedField< float >&
Performance::recall() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.recall)
  return recall_;
}
::google::protobuf::RepeatedField< float >*
Performance::mutable_recall() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.recall)
  return &recall_;
}

// repeated float precision = 3;
int Performance::precision_size() const {
  return precision_.size();
}
void Performance::clear_precision() {
  precision_.Clear();
}
float Performance::precision(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Performance.precision)
  return precision_.Get(index);
}
void Performance::set_precision(int index, float value) {
  precision_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.Performance.precision)
}
void Performance::add_precision(float value) {
  precision_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.Performance.precision)
}
const ::google::protobuf::RepeatedField< float >&
Performance::precision() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Performance.precision)
  return precision_;
}
::google::protobuf::RepeatedField< float >*
Performance::mutable_precision() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Performance.precision)
  return &precision_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetParameter::kIdFieldNumber;
const int NetParameter::kNameFieldNumber;
const int NetParameter::kLayersFieldNumber;
const int NetParameter::kVerificationSamplesFieldNumber;
const int NetParameter::kPerformanceFieldNumber;
const int NetParameter::kTimeDumpedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetParameter::NetParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.NetParameter)
}
NetParameter::NetParameter(const NetParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      layers_(from.layers_),
      verification_samples_(from.verification_samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_performance()) {
    performance_ = new ::apollo::prediction::Performance(*from.performance_);
  } else {
    performance_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&time_dumped_) -
    reinterpret_cast<char*>(&id_) + sizeof(time_dumped_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.NetParameter)
}

void NetParameter::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&performance_, 0, reinterpret_cast<char*>(&time_dumped_) -
    reinterpret_cast<char*>(&performance_) + sizeof(time_dumped_));
}

NetParameter::~NetParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.NetParameter)
  SharedDtor();
}

void NetParameter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete performance_;
  }
}

void NetParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetParameter& NetParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::InitDefaults();
  return *internal_default_instance();
}

NetParameter* NetParameter::New(::google::protobuf::Arena* arena) const {
  NetParameter* n = new NetParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.NetParameter)
  layers_.Clear();
  verification_samples_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_performance()) {
      GOOGLE_DCHECK(performance_ != NULL);
      performance_->::apollo::prediction::Performance::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&time_dumped_) -
      reinterpret_cast<char*>(&id_) + sizeof(time_dumped_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NetParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.NetParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.NetParameter.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.LayerParameter layers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_layers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.VerificationSample verification_samples = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_verification_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.Performance performance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_performance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float time_dumped = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u)) {
          set_has_time_dumped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_dumped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.NetParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.NetParameter)
  return false;
#undef DO_
}

void NetParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.NetParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.NetParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .apollo.prediction.LayerParameter layers = 3;
  for (unsigned int i = 0, n = this->layers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->layers(i), output);
  }

  // repeated .apollo.prediction.VerificationSample verification_samples = 4;
  for (unsigned int i = 0, n = this->verification_samples_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->verification_samples(i), output);
  }

  // optional .apollo.prediction.Performance performance = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->performance_, output);
  }

  // optional float time_dumped = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->time_dumped(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.NetParameter)
}

::google::protobuf::uint8* NetParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.NetParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.NetParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .apollo.prediction.LayerParameter layers = 3;
  for (unsigned int i = 0, n = this->layers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->layers(i), deterministic, target);
  }

  // repeated .apollo.prediction.VerificationSample verification_samples = 4;
  for (unsigned int i = 0, n = this->verification_samples_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->verification_samples(i), deterministic, target);
  }

  // optional .apollo.prediction.Performance performance = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->performance_, deterministic, target);
  }

  // optional float time_dumped = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->time_dumped(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.NetParameter)
  return target;
}

size_t NetParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.NetParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.prediction.LayerParameter layers = 3;
  {
    unsigned int count = this->layers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->layers(i));
    }
  }

  // repeated .apollo.prediction.VerificationSample verification_samples = 4;
  {
    unsigned int count = this->verification_samples_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->verification_samples(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .apollo.prediction.Performance performance = 5;
    if (has_performance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->performance_);
    }

    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional float time_dumped = 6;
    if (has_time_dumped()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.NetParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const NetParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.NetParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.NetParameter)
    MergeFrom(*source);
  }
}

void NetParameter::MergeFrom(const NetParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.NetParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layers_.MergeFrom(from.layers_);
  verification_samples_.MergeFrom(from.verification_samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_performance()->::apollo::prediction::Performance::MergeFrom(from.performance());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_dumped_ = from.time_dumped_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NetParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.NetParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetParameter::CopyFrom(const NetParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.NetParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetParameter::IsInitialized() const {
  return true;
}

void NetParameter::Swap(NetParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetParameter::InternalSwap(NetParameter* other) {
  layers_.InternalSwap(&other->layers_);
  verification_samples_.InternalSwap(&other->verification_samples_);
  name_.Swap(&other->name_);
  std::swap(performance_, other->performance_);
  std::swap(id_, other->id_);
  std::swap(time_dumped_, other->time_dumped_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5fmodel_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NetParameter

// optional int32 id = 1;
bool NetParameter::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NetParameter::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void NetParameter::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void NetParameter::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 NetParameter::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.id)
  return id_;
}
void NetParameter::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.id)
}

// optional string name = 2;
bool NetParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NetParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void NetParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void NetParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& NetParameter::name() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.name)
  return name_.GetNoArena();
}
void NetParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.name)
}
#if LANG_CXX11
void NetParameter::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.NetParameter.name)
}
#endif
void NetParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.NetParameter.name)
}
void NetParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.NetParameter.name)
}
::std::string* NetParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NetParameter::release_name() {
  // @@protoc_insertion_point(field_release:apollo.prediction.NetParameter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NetParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.NetParameter.name)
}

// repeated .apollo.prediction.LayerParameter layers = 3;
int NetParameter::layers_size() const {
  return layers_.size();
}
void NetParameter::clear_layers() {
  layers_.Clear();
}
const ::apollo::prediction::LayerParameter& NetParameter::layers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.layers)
  return layers_.Get(index);
}
::apollo::prediction::LayerParameter* NetParameter::mutable_layers(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.layers)
  return layers_.Mutable(index);
}
::apollo::prediction::LayerParameter* NetParameter::add_layers() {
  // @@protoc_insertion_point(field_add:apollo.prediction.NetParameter.layers)
  return layers_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >*
NetParameter::mutable_layers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.NetParameter.layers)
  return &layers_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::LayerParameter >&
NetParameter::layers() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.NetParameter.layers)
  return layers_;
}

// repeated .apollo.prediction.VerificationSample verification_samples = 4;
int NetParameter::verification_samples_size() const {
  return verification_samples_.size();
}
void NetParameter::clear_verification_samples() {
  verification_samples_.Clear();
}
const ::apollo::prediction::VerificationSample& NetParameter::verification_samples(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Get(index);
}
::apollo::prediction::VerificationSample* NetParameter::mutable_verification_samples(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Mutable(index);
}
::apollo::prediction::VerificationSample* NetParameter::add_verification_samples() {
  // @@protoc_insertion_point(field_add:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >*
NetParameter::mutable_verification_samples() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.NetParameter.verification_samples)
  return &verification_samples_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::VerificationSample >&
NetParameter::verification_samples() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.NetParameter.verification_samples)
  return verification_samples_;
}

// optional .apollo.prediction.Performance performance = 5;
bool NetParameter::has_performance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NetParameter::set_has_performance() {
  _has_bits_[0] |= 0x00000002u;
}
void NetParameter::clear_has_performance() {
  _has_bits_[0] &= ~0x00000002u;
}
void NetParameter::clear_performance() {
  if (performance_ != NULL) performance_->::apollo::prediction::Performance::Clear();
  clear_has_performance();
}
const ::apollo::prediction::Performance& NetParameter::performance() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.performance)
  return performance_ != NULL ? *performance_
                         : *::apollo::prediction::Performance::internal_default_instance();
}
::apollo::prediction::Performance* NetParameter::mutable_performance() {
  set_has_performance();
  if (performance_ == NULL) {
    performance_ = new ::apollo::prediction::Performance;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.NetParameter.performance)
  return performance_;
}
::apollo::prediction::Performance* NetParameter::release_performance() {
  // @@protoc_insertion_point(field_release:apollo.prediction.NetParameter.performance)
  clear_has_performance();
  ::apollo::prediction::Performance* temp = performance_;
  performance_ = NULL;
  return temp;
}
void NetParameter::set_allocated_performance(::apollo::prediction::Performance* performance) {
  delete performance_;
  performance_ = performance;
  if (performance) {
    set_has_performance();
  } else {
    clear_has_performance();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.NetParameter.performance)
}

// optional float time_dumped = 6;
bool NetParameter::has_time_dumped() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NetParameter::set_has_time_dumped() {
  _has_bits_[0] |= 0x00000008u;
}
void NetParameter::clear_has_time_dumped() {
  _has_bits_[0] &= ~0x00000008u;
}
void NetParameter::clear_time_dumped() {
  time_dumped_ = 0;
  clear_has_time_dumped();
}
float NetParameter::time_dumped() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.NetParameter.time_dumped)
  return time_dumped_;
}
void NetParameter::set_time_dumped(float value) {
  set_has_time_dumped();
  time_dumped_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.NetParameter.time_dumped)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
