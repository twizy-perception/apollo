// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/network_layers.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/prediction/proto/network_layers.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {
class TensorParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TensorParameter> {
} _TensorParameter_default_instance_;
class InputParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InputParameter> {
} _InputParameter_default_instance_;
class DenseParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DenseParameter> {
} _DenseParameter_default_instance_;
class BatchNormalizationParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchNormalizationParameter> {
} _BatchNormalizationParameter_default_instance_;
class LSTMParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LSTMParameter> {
} _LSTMParameter_default_instance_;
class ActivationParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActivationParameter> {
} _ActivationParameter_default_instance_;
class FlattenParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FlattenParameter> {
} _FlattenParameter_default_instance_;
class ConcatenateParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConcatenateParameter> {
} _ConcatenateParameter_default_instance_;
class LayerParameterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LayerParameter> {
  public:
  const ::apollo::prediction::InputParameter* input_;
  const ::apollo::prediction::ActivationParameter* activation_;
  const ::apollo::prediction::DenseParameter* dense_;
  const ::apollo::prediction::BatchNormalizationParameter* batch_normalization_;
  const ::apollo::prediction::LSTMParameter* lstm_;
  const ::apollo::prediction::FlattenParameter* flatten_;
  const ::apollo::prediction::ConcatenateParameter* concatenate_;
} _LayerParameter_default_instance_;

namespace protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorParameter, shape_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, input_shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputParameter, sparse_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, activation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, use_bias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, weights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseParameter, bias_),
  3,
  0,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, epsilon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, axis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, momentum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, mu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, sigma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, gamma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchNormalizationParameter, beta_),
  8,
  4,
  5,
  6,
  7,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, return_sequences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, stateful_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, activation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_activation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, use_bias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, unit_forget_bias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, go_backwards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, unroll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, implementation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_forget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_cell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, weights_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_forget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_cell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, bias_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_forget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_cell_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LSTMParameter, recurrent_weights_output_),
  14,
  15,
  16,
  0,
  1,
  17,
  21,
  18,
  19,
  20,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivationParameter, activation_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlattenParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlattenParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcatenateParameter, axis_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, order_number_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), input_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), activation_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), dense_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), batch_normalization_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), lstm_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), flatten_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LayerParameter_default_instance_), concatenate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LayerParameter, oneof_layers_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(TensorParameter)},
  { 9, 17, sizeof(InputParameter)},
  { 20, 30, sizeof(DenseParameter)},
  { 35, 49, sizeof(BatchNormalizationParameter)},
  { 58, 85, sizeof(LSTMParameter)},
  { 107, 113, sizeof(ActivationParameter)},
  { 114, 119, sizeof(FlattenParameter)},
  { 119, 125, sizeof(ConcatenateParameter)},
  { 126, 142, sizeof(LayerParameter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TensorParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InputParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DenseParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchNormalizationParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LSTMParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivationParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FlattenParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConcatenateParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LayerParameter_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/prediction/proto/network_layers.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _TensorParameter_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _InputParameter_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DenseParameter_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _BatchNormalizationParameter_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LSTMParameter_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ActivationParameter_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _FlattenParameter_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ConcatenateParameter_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _LayerParameter_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TensorParameter_default_instance_.DefaultConstruct();
  _InputParameter_default_instance_.DefaultConstruct();
  _DenseParameter_default_instance_.DefaultConstruct();
  _BatchNormalizationParameter_default_instance_.DefaultConstruct();
  _LSTMParameter_default_instance_.DefaultConstruct();
  _ActivationParameter_default_instance_.DefaultConstruct();
  _FlattenParameter_default_instance_.DefaultConstruct();
  _ConcatenateParameter_default_instance_.DefaultConstruct();
  _LayerParameter_default_instance_.DefaultConstruct();
  _DenseParameter_default_instance_.get_mutable()->weights_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _DenseParameter_default_instance_.get_mutable()->bias_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _BatchNormalizationParameter_default_instance_.get_mutable()->mu_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _BatchNormalizationParameter_default_instance_.get_mutable()->sigma_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _BatchNormalizationParameter_default_instance_.get_mutable()->gamma_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _BatchNormalizationParameter_default_instance_.get_mutable()->beta_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->weights_input_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->weights_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->weights_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->weights_output_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->bias_input_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->bias_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->bias_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->bias_output_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->recurrent_weights_input_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->recurrent_weights_forget_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->recurrent_weights_cell_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LSTMParameter_default_instance_.get_mutable()->recurrent_weights_output_ = const_cast< ::apollo::prediction::TensorParameter*>(
      ::apollo::prediction::TensorParameter::internal_default_instance());
  _LayerParameter_default_instance_.input_ = const_cast< ::apollo::prediction::InputParameter*>(
      ::apollo::prediction::InputParameter::internal_default_instance());
  _LayerParameter_default_instance_.activation_ = const_cast< ::apollo::prediction::ActivationParameter*>(
      ::apollo::prediction::ActivationParameter::internal_default_instance());
  _LayerParameter_default_instance_.dense_ = const_cast< ::apollo::prediction::DenseParameter*>(
      ::apollo::prediction::DenseParameter::internal_default_instance());
  _LayerParameter_default_instance_.batch_normalization_ = const_cast< ::apollo::prediction::BatchNormalizationParameter*>(
      ::apollo::prediction::BatchNormalizationParameter::internal_default_instance());
  _LayerParameter_default_instance_.lstm_ = const_cast< ::apollo::prediction::LSTMParameter*>(
      ::apollo::prediction::LSTMParameter::internal_default_instance());
  _LayerParameter_default_instance_.flatten_ = const_cast< ::apollo::prediction::FlattenParameter*>(
      ::apollo::prediction::FlattenParameter::internal_default_instance());
  _LayerParameter_default_instance_.concatenate_ = const_cast< ::apollo::prediction::ConcatenateParameter*>(
      ::apollo::prediction::ConcatenateParameter::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n-modules/prediction/proto/network_layer"
      "s.proto\022\021apollo.prediction\"2\n\017TensorPara"
      "meter\022\020\n\004data\030\001 \003(\002B\002\020\001\022\r\n\005shape\030\002 \003(\005\"D"
      "\n\016InputParameter\022\023\n\013input_shape\030\001 \003(\005\022\r\n"
      "\005dtype\030\002 \001(\t\022\016\n\006sparse\030\003 \001(\010\"\254\001\n\016DensePa"
      "rameter\022\r\n\005units\030\001 \001(\005\022\022\n\nactivation\030\002 \001"
      "(\t\022\020\n\010use_bias\030\003 \001(\010\0223\n\007weights\030\004 \001(\0132\"."
      "apollo.prediction.TensorParameter\0220\n\004bia"
      "s\030\005 \001(\0132\".apollo.prediction.TensorParame"
      "ter\"\274\002\n\033BatchNormalizationParameter\022\026\n\007e"
      "psilon\030\001 \001(\001:\0051e-05\022\014\n\004axis\030\002 \001(\005\022\016\n\006cen"
      "ter\030\003 \001(\010\022\r\n\005scale\030\004 \001(\010\022\020\n\010momentum\030\005 \001"
      "(\002\022.\n\002mu\030\006 \001(\0132\".apollo.prediction.Tenso"
      "rParameter\0221\n\005sigma\030\007 \001(\0132\".apollo.predi"
      "ction.TensorParameter\0221\n\005gamma\030\010 \001(\0132\".a"
      "pollo.prediction.TensorParameter\0220\n\004beta"
      "\030\t \001(\0132\".apollo.prediction.TensorParamet"
      "er\"\340\007\n\rLSTMParameter\022\r\n\005units\030\001 \001(\005\022\030\n\020r"
      "eturn_sequences\030\002 \001(\010\022\020\n\010stateful\030\003 \001(\010\022"
      "\022\n\nactivation\030\004 \001(\t\022\034\n\024recurrent_activat"
      "ion\030\005 \001(\t\022\020\n\010use_bias\030\006 \001(\010\022\036\n\020unit_forg"
      "et_bias\030\007 \001(\010:\004true\022\033\n\014go_backwards\030\010 \001("
      "\010:\005false\022\025\n\006unroll\030\t \001(\010:\005false\022\031\n\016imple"
      "mentation\030\n \001(\005:\0010\0229\n\rweights_input\030\017 \001("
      "\0132\".apollo.prediction.TensorParameter\022:\n"
      "\016weights_forget\030\020 \001(\0132\".apollo.predictio"
      "n.TensorParameter\0228\n\014weights_cell\030\021 \001(\0132"
      "\".apollo.prediction.TensorParameter\022:\n\016w"
      "eights_output\030\022 \001(\0132\".apollo.prediction."
      "TensorParameter\0226\n\nbias_input\030\023 \001(\0132\".ap"
      "ollo.prediction.TensorParameter\0227\n\013bias_"
      "forget\030\024 \001(\0132\".apollo.prediction.TensorP"
      "arameter\0225\n\tbias_cell\030\025 \001(\0132\".apollo.pre"
      "diction.TensorParameter\0227\n\013bias_output\030\026"
      " \001(\0132\".apollo.prediction.TensorParameter"
      "\022C\n\027recurrent_weights_input\030\031 \001(\0132\".apol"
      "lo.prediction.TensorParameter\022D\n\030recurre"
      "nt_weights_forget\030\032 \001(\0132\".apollo.predict"
      "ion.TensorParameter\022B\n\026recurrent_weights"
      "_cell\030\033 \001(\0132\".apollo.prediction.TensorPa"
      "rameter\022D\n\030recurrent_weights_output\030\034 \001("
      "\0132\".apollo.prediction.TensorParameter\")\n"
      "\023ActivationParameter\022\022\n\nactivation\030\001 \001(\t"
      "\"\022\n\020FlattenParameter\"$\n\024ConcatenateParam"
      "eter\022\014\n\004axis\030\001 \001(\005\"\361\003\n\016LayerParameter\022\014\n"
      "\004type\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\024\n\014order_numbe"
      "r\030\003 \001(\005\0222\n\005input\030\004 \001(\0132!.apollo.predicti"
      "on.InputParameterH\000\022<\n\nactivation\030\005 \001(\0132"
      "&.apollo.prediction.ActivationParameterH"
      "\000\0222\n\005dense\030\006 \001(\0132!.apollo.prediction.Den"
      "seParameterH\000\022M\n\023batch_normalization\030\007 \001"
      "(\0132..apollo.prediction.BatchNormalizatio"
      "nParameterH\000\0220\n\004lstm\030\010 \001(\0132 .apollo.pred"
      "iction.LSTMParameterH\000\0226\n\007flatten\030\t \001(\0132"
      "#.apollo.prediction.FlattenParameterH\000\022>"
      "\n\013concatenate\030\n \001(\0132\'.apollo.prediction."
      "ConcatenateParameterH\000B\016\n\014oneof_layers"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2278);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/prediction/proto/network_layers.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorParameter::kDataFieldNumber;
const int TensorParameter::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorParameter::TensorParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TensorParameter)
}
TensorParameter::TensorParameter(const TensorParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TensorParameter)
}

void TensorParameter::SharedCtor() {
  _cached_size_ = 0;
}

TensorParameter::~TensorParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TensorParameter)
  SharedDtor();
}

void TensorParameter::SharedDtor() {
}

void TensorParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorParameter& TensorParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorParameter* TensorParameter::New(::google::protobuf::Arena* arena) const {
  TensorParameter* n = new TensorParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TensorParameter)
  data_.Clear();
  shape_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TensorParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.TensorParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(13u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_shape())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.TensorParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.TensorParameter)
  return false;
#undef DO_
}

void TensorParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.TensorParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1 [packed = true];
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_data_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->data().data(), this->data_size(), output);
  }

  // repeated int32 shape = 2;
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->shape(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.TensorParameter)
}

::google::protobuf::uint8* TensorParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TensorParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1 [packed = true];
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _data_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->data_, target);
  }

  // repeated int32 shape = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->shape_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TensorParameter)
  return target;
}

size_t TensorParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TensorParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated float data = 1 [packed = true];
  {
    unsigned int count = this->data_size();
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 shape = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->shape_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TensorParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TensorParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TensorParameter)
    MergeFrom(*source);
  }
}

void TensorParameter::MergeFrom(const TensorParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TensorParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  shape_.MergeFrom(from.shape_);
}

void TensorParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TensorParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorParameter::CopyFrom(const TensorParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TensorParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorParameter::IsInitialized() const {
  return true;
}

void TensorParameter::Swap(TensorParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorParameter::InternalSwap(TensorParameter* other) {
  data_.InternalSwap(&other->data_);
  shape_.InternalSwap(&other->shape_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorParameter

// repeated float data = 1 [packed = true];
int TensorParameter::data_size() const {
  return data_.size();
}
void TensorParameter::clear_data() {
  data_.Clear();
}
float TensorParameter::data(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TensorParameter.data)
  return data_.Get(index);
}
void TensorParameter::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TensorParameter.data)
}
void TensorParameter::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.TensorParameter.data)
}
const ::google::protobuf::RepeatedField< float >&
TensorParameter::data() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.TensorParameter.data)
  return data_;
}
::google::protobuf::RepeatedField< float >*
TensorParameter::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.TensorParameter.data)
  return &data_;
}

// repeated int32 shape = 2;
int TensorParameter::shape_size() const {
  return shape_.size();
}
void TensorParameter::clear_shape() {
  shape_.Clear();
}
::google::protobuf::int32 TensorParameter::shape(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TensorParameter.shape)
  return shape_.Get(index);
}
void TensorParameter::set_shape(int index, ::google::protobuf::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TensorParameter.shape)
}
void TensorParameter::add_shape(::google::protobuf::int32 value) {
  shape_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.TensorParameter.shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorParameter::shape() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.TensorParameter.shape)
  return shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorParameter::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.TensorParameter.shape)
  return &shape_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputParameter::kInputShapeFieldNumber;
const int InputParameter::kDtypeFieldNumber;
const int InputParameter::kSparseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputParameter::InputParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.InputParameter)
}
InputParameter::InputParameter(const InputParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_shape_(from.input_shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dtype()) {
    dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  sparse_ = from.sparse_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.InputParameter)
}

void InputParameter::SharedCtor() {
  _cached_size_ = 0;
  dtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sparse_ = false;
}

InputParameter::~InputParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.InputParameter)
  SharedDtor();
}

void InputParameter::SharedDtor() {
  dtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputParameter& InputParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

InputParameter* InputParameter::New(::google::protobuf::Arena* arena) const {
  InputParameter* n = new InputParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.InputParameter)
  input_shape_.Clear();
  if (has_dtype()) {
    GOOGLE_DCHECK(!dtype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*dtype_.UnsafeRawStringPointer())->clear();
  }
  sparse_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.InputParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 input_shape = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_input_shape())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_input_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dtype().data(), this->dtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.InputParameter.dtype");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool sparse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sparse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sparse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.InputParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.InputParameter)
  return false;
#undef DO_
}

void InputParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.InputParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 input_shape = 1;
  for (int i = 0, n = this->input_shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->input_shape(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string dtype = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), this->dtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.InputParameter.dtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dtype(), output);
  }

  // optional bool sparse = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sparse(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.InputParameter)
}

::google::protobuf::uint8* InputParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.InputParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 input_shape = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->input_shape_, target);

  cached_has_bits = _has_bits_[0];
  // optional string dtype = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dtype().data(), this->dtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.InputParameter.dtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dtype(), target);
  }

  // optional bool sparse = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sparse(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.InputParameter)
  return target;
}

size_t InputParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.InputParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated int32 input_shape = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->input_shape_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->input_shape_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string dtype = 2;
    if (has_dtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dtype());
    }

    // optional bool sparse = 3;
    if (has_sparse()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.InputParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const InputParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.InputParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.InputParameter)
    MergeFrom(*source);
  }
}

void InputParameter::MergeFrom(const InputParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.InputParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_shape_.MergeFrom(from.input_shape_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dtype();
      dtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dtype_);
    }
    if (cached_has_bits & 0x00000002u) {
      sparse_ = from.sparse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.InputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputParameter::CopyFrom(const InputParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.InputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputParameter::IsInitialized() const {
  return true;
}

void InputParameter::Swap(InputParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputParameter::InternalSwap(InputParameter* other) {
  input_shape_.InternalSwap(&other->input_shape_);
  dtype_.Swap(&other->dtype_);
  std::swap(sparse_, other->sparse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputParameter

// repeated int32 input_shape = 1;
int InputParameter::input_shape_size() const {
  return input_shape_.size();
}
void InputParameter::clear_input_shape() {
  input_shape_.Clear();
}
::google::protobuf::int32 InputParameter::input_shape(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.input_shape)
  return input_shape_.Get(index);
}
void InputParameter::set_input_shape(int index, ::google::protobuf::int32 value) {
  input_shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.input_shape)
}
void InputParameter::add_input_shape(::google::protobuf::int32 value) {
  input_shape_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.InputParameter.input_shape)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
InputParameter::input_shape() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.InputParameter.input_shape)
  return input_shape_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
InputParameter::mutable_input_shape() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.InputParameter.input_shape)
  return &input_shape_;
}

// optional string dtype = 2;
bool InputParameter::has_dtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputParameter::set_has_dtype() {
  _has_bits_[0] |= 0x00000001u;
}
void InputParameter::clear_has_dtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputParameter::clear_dtype() {
  dtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dtype();
}
const ::std::string& InputParameter::dtype() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.dtype)
  return dtype_.GetNoArena();
}
void InputParameter::set_dtype(const ::std::string& value) {
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.dtype)
}
#if LANG_CXX11
void InputParameter::set_dtype(::std::string&& value) {
  set_has_dtype();
  dtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.InputParameter.dtype)
}
#endif
void InputParameter::set_dtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.InputParameter.dtype)
}
void InputParameter::set_dtype(const char* value, size_t size) {
  set_has_dtype();
  dtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.InputParameter.dtype)
}
::std::string* InputParameter::mutable_dtype() {
  set_has_dtype();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.InputParameter.dtype)
  return dtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InputParameter::release_dtype() {
  // @@protoc_insertion_point(field_release:apollo.prediction.InputParameter.dtype)
  clear_has_dtype();
  return dtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InputParameter::set_allocated_dtype(::std::string* dtype) {
  if (dtype != NULL) {
    set_has_dtype();
  } else {
    clear_has_dtype();
  }
  dtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dtype);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.InputParameter.dtype)
}

// optional bool sparse = 3;
bool InputParameter::has_sparse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputParameter::set_has_sparse() {
  _has_bits_[0] |= 0x00000002u;
}
void InputParameter::clear_has_sparse() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputParameter::clear_sparse() {
  sparse_ = false;
  clear_has_sparse();
}
bool InputParameter::sparse() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.InputParameter.sparse)
  return sparse_;
}
void InputParameter::set_sparse(bool value) {
  set_has_sparse();
  sparse_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.InputParameter.sparse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseParameter::kUnitsFieldNumber;
const int DenseParameter::kActivationFieldNumber;
const int DenseParameter::kUseBiasFieldNumber;
const int DenseParameter::kWeightsFieldNumber;
const int DenseParameter::kBiasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseParameter::DenseParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.DenseParameter)
}
DenseParameter::DenseParameter(const DenseParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_activation()) {
    activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
  }
  if (from.has_weights()) {
    weights_ = new ::apollo::prediction::TensorParameter(*from.weights_);
  } else {
    weights_ = NULL;
  }
  if (from.has_bias()) {
    bias_ = new ::apollo::prediction::TensorParameter(*from.bias_);
  } else {
    bias_ = NULL;
  }
  ::memcpy(&units_, &from.units_,
    reinterpret_cast<char*>(&use_bias_) -
    reinterpret_cast<char*>(&units_) + sizeof(use_bias_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.DenseParameter)
}

void DenseParameter::SharedCtor() {
  _cached_size_ = 0;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&weights_, 0, reinterpret_cast<char*>(&use_bias_) -
    reinterpret_cast<char*>(&weights_) + sizeof(use_bias_));
}

DenseParameter::~DenseParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.DenseParameter)
  SharedDtor();
}

void DenseParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete weights_;
  }
  if (this != internal_default_instance()) {
    delete bias_;
  }
}

void DenseParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DenseParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DenseParameter& DenseParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

DenseParameter* DenseParameter::New(::google::protobuf::Arena* arena) const {
  DenseParameter* n = new DenseParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DenseParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.DenseParameter)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_activation()) {
      GOOGLE_DCHECK(!activation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*activation_.UnsafeRawStringPointer())->clear();
    }
    if (has_weights()) {
      GOOGLE_DCHECK(weights_ != NULL);
      weights_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias()) {
      GOOGLE_DCHECK(bias_ != NULL);
      bias_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&units_, 0, reinterpret_cast<char*>(&use_bias_) -
      reinterpret_cast<char*>(&units_) + sizeof(use_bias_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DenseParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.DenseParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string activation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.DenseParameter.activation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_bias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_use_bias();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter weights = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter bias = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.DenseParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.DenseParameter)
  return false;
#undef DO_
}

void DenseParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.DenseParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 units = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->units(), output);
  }

  // optional string activation = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.DenseParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->activation(), output);
  }

  // optional bool use_bias = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_bias(), output);
  }

  // optional .apollo.prediction.TensorParameter weights = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->weights_, output);
  }

  // optional .apollo.prediction.TensorParameter bias = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->bias_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.DenseParameter)
}

::google::protobuf::uint8* DenseParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.DenseParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 units = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->units(), target);
  }

  // optional string activation = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.DenseParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->activation(), target);
  }

  // optional bool use_bias = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_bias(), target);
  }

  // optional .apollo.prediction.TensorParameter weights = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->weights_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter bias = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->bias_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.DenseParameter)
  return target;
}

size_t DenseParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.DenseParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string activation = 2;
    if (has_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activation());
    }

    // optional .apollo.prediction.TensorParameter weights = 4;
    if (has_weights()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_);
    }

    // optional .apollo.prediction.TensorParameter bias = 5;
    if (has_bias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_);
    }

    // optional int32 units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

    // optional bool use_bias = 3;
    if (has_use_bias()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DenseParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.DenseParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const DenseParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.DenseParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.DenseParameter)
    MergeFrom(*source);
  }
}

void DenseParameter::MergeFrom(const DenseParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.DenseParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_activation();
      activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_weights()->::apollo::prediction::TensorParameter::MergeFrom(from.weights());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_bias()->::apollo::prediction::TensorParameter::MergeFrom(from.bias());
    }
    if (cached_has_bits & 0x00000008u) {
      units_ = from.units_;
    }
    if (cached_has_bits & 0x00000010u) {
      use_bias_ = from.use_bias_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DenseParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.DenseParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseParameter::CopyFrom(const DenseParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.DenseParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseParameter::IsInitialized() const {
  return true;
}

void DenseParameter::Swap(DenseParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseParameter::InternalSwap(DenseParameter* other) {
  activation_.Swap(&other->activation_);
  std::swap(weights_, other->weights_);
  std::swap(bias_, other->bias_);
  std::swap(units_, other->units_);
  std::swap(use_bias_, other->use_bias_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DenseParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DenseParameter

// optional int32 units = 1;
bool DenseParameter::has_units() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DenseParameter::set_has_units() {
  _has_bits_[0] |= 0x00000008u;
}
void DenseParameter::clear_has_units() {
  _has_bits_[0] &= ~0x00000008u;
}
void DenseParameter::clear_units() {
  units_ = 0;
  clear_has_units();
}
::google::protobuf::int32 DenseParameter::units() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.units)
  return units_;
}
void DenseParameter::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.units)
}

// optional string activation = 2;
bool DenseParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DenseParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000001u;
}
void DenseParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000001u;
}
void DenseParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
const ::std::string& DenseParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.activation)
  return activation_.GetNoArena();
}
void DenseParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.activation)
}
#if LANG_CXX11
void DenseParameter::set_activation(::std::string&& value) {
  set_has_activation();
  activation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.DenseParameter.activation)
}
#endif
void DenseParameter::set_activation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DenseParameter.activation)
}
void DenseParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DenseParameter.activation)
}
::std::string* DenseParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DenseParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DenseParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.activation)
}

// optional bool use_bias = 3;
bool DenseParameter::has_use_bias() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DenseParameter::set_has_use_bias() {
  _has_bits_[0] |= 0x00000010u;
}
void DenseParameter::clear_has_use_bias() {
  _has_bits_[0] &= ~0x00000010u;
}
void DenseParameter::clear_use_bias() {
  use_bias_ = false;
  clear_has_use_bias();
}
bool DenseParameter::use_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.use_bias)
  return use_bias_;
}
void DenseParameter::set_use_bias(bool value) {
  set_has_use_bias();
  use_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.DenseParameter.use_bias)
}

// optional .apollo.prediction.TensorParameter weights = 4;
bool DenseParameter::has_weights() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DenseParameter::set_has_weights() {
  _has_bits_[0] |= 0x00000002u;
}
void DenseParameter::clear_has_weights() {
  _has_bits_[0] &= ~0x00000002u;
}
void DenseParameter::clear_weights() {
  if (weights_ != NULL) weights_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights();
}
const ::apollo::prediction::TensorParameter& DenseParameter::weights() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.weights)
  return weights_ != NULL ? *weights_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* DenseParameter::mutable_weights() {
  set_has_weights();
  if (weights_ == NULL) {
    weights_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.weights)
  return weights_;
}
::apollo::prediction::TensorParameter* DenseParameter::release_weights() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.weights)
  clear_has_weights();
  ::apollo::prediction::TensorParameter* temp = weights_;
  weights_ = NULL;
  return temp;
}
void DenseParameter::set_allocated_weights(::apollo::prediction::TensorParameter* weights) {
  delete weights_;
  weights_ = weights;
  if (weights) {
    set_has_weights();
  } else {
    clear_has_weights();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.weights)
}

// optional .apollo.prediction.TensorParameter bias = 5;
bool DenseParameter::has_bias() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DenseParameter::set_has_bias() {
  _has_bits_[0] |= 0x00000004u;
}
void DenseParameter::clear_has_bias() {
  _has_bits_[0] &= ~0x00000004u;
}
void DenseParameter::clear_bias() {
  if (bias_ != NULL) bias_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias();
}
const ::apollo::prediction::TensorParameter& DenseParameter::bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DenseParameter.bias)
  return bias_ != NULL ? *bias_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* DenseParameter::mutable_bias() {
  set_has_bias();
  if (bias_ == NULL) {
    bias_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DenseParameter.bias)
  return bias_;
}
::apollo::prediction::TensorParameter* DenseParameter::release_bias() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DenseParameter.bias)
  clear_has_bias();
  ::apollo::prediction::TensorParameter* temp = bias_;
  bias_ = NULL;
  return temp;
}
void DenseParameter::set_allocated_bias(::apollo::prediction::TensorParameter* bias) {
  delete bias_;
  bias_ = bias;
  if (bias) {
    set_has_bias();
  } else {
    clear_has_bias();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DenseParameter.bias)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchNormalizationParameter::kEpsilonFieldNumber;
const int BatchNormalizationParameter::kAxisFieldNumber;
const int BatchNormalizationParameter::kCenterFieldNumber;
const int BatchNormalizationParameter::kScaleFieldNumber;
const int BatchNormalizationParameter::kMomentumFieldNumber;
const int BatchNormalizationParameter::kMuFieldNumber;
const int BatchNormalizationParameter::kSigmaFieldNumber;
const int BatchNormalizationParameter::kGammaFieldNumber;
const int BatchNormalizationParameter::kBetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchNormalizationParameter::BatchNormalizationParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.BatchNormalizationParameter)
}
BatchNormalizationParameter::BatchNormalizationParameter(const BatchNormalizationParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mu()) {
    mu_ = new ::apollo::prediction::TensorParameter(*from.mu_);
  } else {
    mu_ = NULL;
  }
  if (from.has_sigma()) {
    sigma_ = new ::apollo::prediction::TensorParameter(*from.sigma_);
  } else {
    sigma_ = NULL;
  }
  if (from.has_gamma()) {
    gamma_ = new ::apollo::prediction::TensorParameter(*from.gamma_);
  } else {
    gamma_ = NULL;
  }
  if (from.has_beta()) {
    beta_ = new ::apollo::prediction::TensorParameter(*from.beta_);
  } else {
    beta_ = NULL;
  }
  ::memcpy(&axis_, &from.axis_,
    reinterpret_cast<char*>(&epsilon_) -
    reinterpret_cast<char*>(&axis_) + sizeof(epsilon_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.BatchNormalizationParameter)
}

void BatchNormalizationParameter::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mu_, 0, reinterpret_cast<char*>(&momentum_) -
    reinterpret_cast<char*>(&mu_) + sizeof(momentum_));
  epsilon_ = 1e-05;
}

BatchNormalizationParameter::~BatchNormalizationParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.BatchNormalizationParameter)
  SharedDtor();
}

void BatchNormalizationParameter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mu_;
  }
  if (this != internal_default_instance()) {
    delete sigma_;
  }
  if (this != internal_default_instance()) {
    delete gamma_;
  }
  if (this != internal_default_instance()) {
    delete beta_;
  }
}

void BatchNormalizationParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchNormalizationParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchNormalizationParameter& BatchNormalizationParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchNormalizationParameter* BatchNormalizationParameter::New(::google::protobuf::Arena* arena) const {
  BatchNormalizationParameter* n = new BatchNormalizationParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchNormalizationParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.BatchNormalizationParameter)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_mu()) {
      GOOGLE_DCHECK(mu_ != NULL);
      mu_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_sigma()) {
      GOOGLE_DCHECK(sigma_ != NULL);
      sigma_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_gamma()) {
      GOOGLE_DCHECK(gamma_ != NULL);
      gamma_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_beta()) {
      GOOGLE_DCHECK(beta_ != NULL);
      beta_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&axis_, 0, reinterpret_cast<char*>(&momentum_) -
      reinterpret_cast<char*>(&axis_) + sizeof(momentum_));
  }
  epsilon_ = 1e-05;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchNormalizationParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.BatchNormalizationParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double epsilon = 1 [default = 1e-05];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_epsilon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &epsilon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 axis = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_axis();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool center = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_center();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &center_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool scale = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float momentum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_momentum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &momentum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter mu = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter sigma = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sigma()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter gamma = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamma()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter beta = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_beta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.BatchNormalizationParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.BatchNormalizationParameter)
  return false;
#undef DO_
}

void BatchNormalizationParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.BatchNormalizationParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double epsilon = 1 [default = 1e-05];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->epsilon(), output);
  }

  // optional int32 axis = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->axis(), output);
  }

  // optional bool center = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->center(), output);
  }

  // optional bool scale = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->scale(), output);
  }

  // optional float momentum = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->momentum(), output);
  }

  // optional .apollo.prediction.TensorParameter mu = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->mu_, output);
  }

  // optional .apollo.prediction.TensorParameter sigma = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->sigma_, output);
  }

  // optional .apollo.prediction.TensorParameter gamma = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->gamma_, output);
  }

  // optional .apollo.prediction.TensorParameter beta = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->beta_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.BatchNormalizationParameter)
}

::google::protobuf::uint8* BatchNormalizationParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.BatchNormalizationParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double epsilon = 1 [default = 1e-05];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->epsilon(), target);
  }

  // optional int32 axis = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->axis(), target);
  }

  // optional bool center = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->center(), target);
  }

  // optional bool scale = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->scale(), target);
  }

  // optional float momentum = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->momentum(), target);
  }

  // optional .apollo.prediction.TensorParameter mu = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->mu_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter sigma = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->sigma_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter gamma = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->gamma_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter beta = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->beta_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.BatchNormalizationParameter)
  return target;
}

size_t BatchNormalizationParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.BatchNormalizationParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .apollo.prediction.TensorParameter mu = 6;
    if (has_mu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mu_);
    }

    // optional .apollo.prediction.TensorParameter sigma = 7;
    if (has_sigma()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sigma_);
    }

    // optional .apollo.prediction.TensorParameter gamma = 8;
    if (has_gamma()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamma_);
    }

    // optional .apollo.prediction.TensorParameter beta = 9;
    if (has_beta()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->beta_);
    }

    // optional int32 axis = 2;
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->axis());
    }

    // optional bool center = 3;
    if (has_center()) {
      total_size += 1 + 1;
    }

    // optional bool scale = 4;
    if (has_scale()) {
      total_size += 1 + 1;
    }

    // optional float momentum = 5;
    if (has_momentum()) {
      total_size += 1 + 4;
    }

  }
  // optional double epsilon = 1 [default = 1e-05];
  if (has_epsilon()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchNormalizationParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.BatchNormalizationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchNormalizationParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchNormalizationParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.BatchNormalizationParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.BatchNormalizationParameter)
    MergeFrom(*source);
  }
}

void BatchNormalizationParameter::MergeFrom(const BatchNormalizationParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.BatchNormalizationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mu()->::apollo::prediction::TensorParameter::MergeFrom(from.mu());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_sigma()->::apollo::prediction::TensorParameter::MergeFrom(from.sigma());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_gamma()->::apollo::prediction::TensorParameter::MergeFrom(from.gamma());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_beta()->::apollo::prediction::TensorParameter::MergeFrom(from.beta());
    }
    if (cached_has_bits & 0x00000010u) {
      axis_ = from.axis_;
    }
    if (cached_has_bits & 0x00000020u) {
      center_ = from.center_;
    }
    if (cached_has_bits & 0x00000040u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000080u) {
      momentum_ = from.momentum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_epsilon(from.epsilon());
  }
}

void BatchNormalizationParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.BatchNormalizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchNormalizationParameter::CopyFrom(const BatchNormalizationParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.BatchNormalizationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchNormalizationParameter::IsInitialized() const {
  return true;
}

void BatchNormalizationParameter::Swap(BatchNormalizationParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchNormalizationParameter::InternalSwap(BatchNormalizationParameter* other) {
  std::swap(mu_, other->mu_);
  std::swap(sigma_, other->sigma_);
  std::swap(gamma_, other->gamma_);
  std::swap(beta_, other->beta_);
  std::swap(axis_, other->axis_);
  std::swap(center_, other->center_);
  std::swap(scale_, other->scale_);
  std::swap(momentum_, other->momentum_);
  std::swap(epsilon_, other->epsilon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchNormalizationParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchNormalizationParameter

// optional double epsilon = 1 [default = 1e-05];
bool BatchNormalizationParameter::has_epsilon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BatchNormalizationParameter::set_has_epsilon() {
  _has_bits_[0] |= 0x00000100u;
}
void BatchNormalizationParameter::clear_has_epsilon() {
  _has_bits_[0] &= ~0x00000100u;
}
void BatchNormalizationParameter::clear_epsilon() {
  epsilon_ = 1e-05;
  clear_has_epsilon();
}
double BatchNormalizationParameter::epsilon() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.epsilon)
  return epsilon_;
}
void BatchNormalizationParameter::set_epsilon(double value) {
  set_has_epsilon();
  epsilon_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.epsilon)
}

// optional int32 axis = 2;
bool BatchNormalizationParameter::has_axis() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BatchNormalizationParameter::set_has_axis() {
  _has_bits_[0] |= 0x00000010u;
}
void BatchNormalizationParameter::clear_has_axis() {
  _has_bits_[0] &= ~0x00000010u;
}
void BatchNormalizationParameter::clear_axis() {
  axis_ = 0;
  clear_has_axis();
}
::google::protobuf::int32 BatchNormalizationParameter::axis() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.axis)
  return axis_;
}
void BatchNormalizationParameter::set_axis(::google::protobuf::int32 value) {
  set_has_axis();
  axis_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.axis)
}

// optional bool center = 3;
bool BatchNormalizationParameter::has_center() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BatchNormalizationParameter::set_has_center() {
  _has_bits_[0] |= 0x00000020u;
}
void BatchNormalizationParameter::clear_has_center() {
  _has_bits_[0] &= ~0x00000020u;
}
void BatchNormalizationParameter::clear_center() {
  center_ = false;
  clear_has_center();
}
bool BatchNormalizationParameter::center() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.center)
  return center_;
}
void BatchNormalizationParameter::set_center(bool value) {
  set_has_center();
  center_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.center)
}

// optional bool scale = 4;
bool BatchNormalizationParameter::has_scale() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BatchNormalizationParameter::set_has_scale() {
  _has_bits_[0] |= 0x00000040u;
}
void BatchNormalizationParameter::clear_has_scale() {
  _has_bits_[0] &= ~0x00000040u;
}
void BatchNormalizationParameter::clear_scale() {
  scale_ = false;
  clear_has_scale();
}
bool BatchNormalizationParameter::scale() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.scale)
  return scale_;
}
void BatchNormalizationParameter::set_scale(bool value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.scale)
}

// optional float momentum = 5;
bool BatchNormalizationParameter::has_momentum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BatchNormalizationParameter::set_has_momentum() {
  _has_bits_[0] |= 0x00000080u;
}
void BatchNormalizationParameter::clear_has_momentum() {
  _has_bits_[0] &= ~0x00000080u;
}
void BatchNormalizationParameter::clear_momentum() {
  momentum_ = 0;
  clear_has_momentum();
}
float BatchNormalizationParameter::momentum() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.momentum)
  return momentum_;
}
void BatchNormalizationParameter::set_momentum(float value) {
  set_has_momentum();
  momentum_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.BatchNormalizationParameter.momentum)
}

// optional .apollo.prediction.TensorParameter mu = 6;
bool BatchNormalizationParameter::has_mu() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BatchNormalizationParameter::set_has_mu() {
  _has_bits_[0] |= 0x00000001u;
}
void BatchNormalizationParameter::clear_has_mu() {
  _has_bits_[0] &= ~0x00000001u;
}
void BatchNormalizationParameter::clear_mu() {
  if (mu_ != NULL) mu_->::apollo::prediction::TensorParameter::Clear();
  clear_has_mu();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::mu() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.mu)
  return mu_ != NULL ? *mu_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_mu() {
  set_has_mu();
  if (mu_ == NULL) {
    mu_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.mu)
  return mu_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_mu() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.mu)
  clear_has_mu();
  ::apollo::prediction::TensorParameter* temp = mu_;
  mu_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_mu(::apollo::prediction::TensorParameter* mu) {
  delete mu_;
  mu_ = mu;
  if (mu) {
    set_has_mu();
  } else {
    clear_has_mu();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.mu)
}

// optional .apollo.prediction.TensorParameter sigma = 7;
bool BatchNormalizationParameter::has_sigma() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BatchNormalizationParameter::set_has_sigma() {
  _has_bits_[0] |= 0x00000002u;
}
void BatchNormalizationParameter::clear_has_sigma() {
  _has_bits_[0] &= ~0x00000002u;
}
void BatchNormalizationParameter::clear_sigma() {
  if (sigma_ != NULL) sigma_->::apollo::prediction::TensorParameter::Clear();
  clear_has_sigma();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::sigma() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.sigma)
  return sigma_ != NULL ? *sigma_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_sigma() {
  set_has_sigma();
  if (sigma_ == NULL) {
    sigma_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.sigma)
  return sigma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_sigma() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.sigma)
  clear_has_sigma();
  ::apollo::prediction::TensorParameter* temp = sigma_;
  sigma_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_sigma(::apollo::prediction::TensorParameter* sigma) {
  delete sigma_;
  sigma_ = sigma;
  if (sigma) {
    set_has_sigma();
  } else {
    clear_has_sigma();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.sigma)
}

// optional .apollo.prediction.TensorParameter gamma = 8;
bool BatchNormalizationParameter::has_gamma() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BatchNormalizationParameter::set_has_gamma() {
  _has_bits_[0] |= 0x00000004u;
}
void BatchNormalizationParameter::clear_has_gamma() {
  _has_bits_[0] &= ~0x00000004u;
}
void BatchNormalizationParameter::clear_gamma() {
  if (gamma_ != NULL) gamma_->::apollo::prediction::TensorParameter::Clear();
  clear_has_gamma();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::gamma() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.gamma)
  return gamma_ != NULL ? *gamma_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_gamma() {
  set_has_gamma();
  if (gamma_ == NULL) {
    gamma_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.gamma)
  return gamma_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_gamma() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.gamma)
  clear_has_gamma();
  ::apollo::prediction::TensorParameter* temp = gamma_;
  gamma_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_gamma(::apollo::prediction::TensorParameter* gamma) {
  delete gamma_;
  gamma_ = gamma;
  if (gamma) {
    set_has_gamma();
  } else {
    clear_has_gamma();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.gamma)
}

// optional .apollo.prediction.TensorParameter beta = 9;
bool BatchNormalizationParameter::has_beta() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BatchNormalizationParameter::set_has_beta() {
  _has_bits_[0] |= 0x00000008u;
}
void BatchNormalizationParameter::clear_has_beta() {
  _has_bits_[0] &= ~0x00000008u;
}
void BatchNormalizationParameter::clear_beta() {
  if (beta_ != NULL) beta_->::apollo::prediction::TensorParameter::Clear();
  clear_has_beta();
}
const ::apollo::prediction::TensorParameter& BatchNormalizationParameter::beta() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.BatchNormalizationParameter.beta)
  return beta_ != NULL ? *beta_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::mutable_beta() {
  set_has_beta();
  if (beta_ == NULL) {
    beta_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.BatchNormalizationParameter.beta)
  return beta_;
}
::apollo::prediction::TensorParameter* BatchNormalizationParameter::release_beta() {
  // @@protoc_insertion_point(field_release:apollo.prediction.BatchNormalizationParameter.beta)
  clear_has_beta();
  ::apollo::prediction::TensorParameter* temp = beta_;
  beta_ = NULL;
  return temp;
}
void BatchNormalizationParameter::set_allocated_beta(::apollo::prediction::TensorParameter* beta) {
  delete beta_;
  beta_ = beta;
  if (beta) {
    set_has_beta();
  } else {
    clear_has_beta();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.BatchNormalizationParameter.beta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LSTMParameter::kUnitsFieldNumber;
const int LSTMParameter::kReturnSequencesFieldNumber;
const int LSTMParameter::kStatefulFieldNumber;
const int LSTMParameter::kActivationFieldNumber;
const int LSTMParameter::kRecurrentActivationFieldNumber;
const int LSTMParameter::kUseBiasFieldNumber;
const int LSTMParameter::kUnitForgetBiasFieldNumber;
const int LSTMParameter::kGoBackwardsFieldNumber;
const int LSTMParameter::kUnrollFieldNumber;
const int LSTMParameter::kImplementationFieldNumber;
const int LSTMParameter::kWeightsInputFieldNumber;
const int LSTMParameter::kWeightsForgetFieldNumber;
const int LSTMParameter::kWeightsCellFieldNumber;
const int LSTMParameter::kWeightsOutputFieldNumber;
const int LSTMParameter::kBiasInputFieldNumber;
const int LSTMParameter::kBiasForgetFieldNumber;
const int LSTMParameter::kBiasCellFieldNumber;
const int LSTMParameter::kBiasOutputFieldNumber;
const int LSTMParameter::kRecurrentWeightsInputFieldNumber;
const int LSTMParameter::kRecurrentWeightsForgetFieldNumber;
const int LSTMParameter::kRecurrentWeightsCellFieldNumber;
const int LSTMParameter::kRecurrentWeightsOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LSTMParameter::LSTMParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.LSTMParameter)
}
LSTMParameter::LSTMParameter(const LSTMParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_activation()) {
    activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
  }
  recurrent_activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recurrent_activation()) {
    recurrent_activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recurrent_activation_);
  }
  if (from.has_weights_input()) {
    weights_input_ = new ::apollo::prediction::TensorParameter(*from.weights_input_);
  } else {
    weights_input_ = NULL;
  }
  if (from.has_weights_forget()) {
    weights_forget_ = new ::apollo::prediction::TensorParameter(*from.weights_forget_);
  } else {
    weights_forget_ = NULL;
  }
  if (from.has_weights_cell()) {
    weights_cell_ = new ::apollo::prediction::TensorParameter(*from.weights_cell_);
  } else {
    weights_cell_ = NULL;
  }
  if (from.has_weights_output()) {
    weights_output_ = new ::apollo::prediction::TensorParameter(*from.weights_output_);
  } else {
    weights_output_ = NULL;
  }
  if (from.has_bias_input()) {
    bias_input_ = new ::apollo::prediction::TensorParameter(*from.bias_input_);
  } else {
    bias_input_ = NULL;
  }
  if (from.has_bias_forget()) {
    bias_forget_ = new ::apollo::prediction::TensorParameter(*from.bias_forget_);
  } else {
    bias_forget_ = NULL;
  }
  if (from.has_bias_cell()) {
    bias_cell_ = new ::apollo::prediction::TensorParameter(*from.bias_cell_);
  } else {
    bias_cell_ = NULL;
  }
  if (from.has_bias_output()) {
    bias_output_ = new ::apollo::prediction::TensorParameter(*from.bias_output_);
  } else {
    bias_output_ = NULL;
  }
  if (from.has_recurrent_weights_input()) {
    recurrent_weights_input_ = new ::apollo::prediction::TensorParameter(*from.recurrent_weights_input_);
  } else {
    recurrent_weights_input_ = NULL;
  }
  if (from.has_recurrent_weights_forget()) {
    recurrent_weights_forget_ = new ::apollo::prediction::TensorParameter(*from.recurrent_weights_forget_);
  } else {
    recurrent_weights_forget_ = NULL;
  }
  if (from.has_recurrent_weights_cell()) {
    recurrent_weights_cell_ = new ::apollo::prediction::TensorParameter(*from.recurrent_weights_cell_);
  } else {
    recurrent_weights_cell_ = NULL;
  }
  if (from.has_recurrent_weights_output()) {
    recurrent_weights_output_ = new ::apollo::prediction::TensorParameter(*from.recurrent_weights_output_);
  } else {
    recurrent_weights_output_ = NULL;
  }
  ::memcpy(&units_, &from.units_,
    reinterpret_cast<char*>(&unit_forget_bias_) -
    reinterpret_cast<char*>(&units_) + sizeof(unit_forget_bias_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.LSTMParameter)
}

void LSTMParameter::SharedCtor() {
  _cached_size_ = 0;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recurrent_activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&weights_input_, 0, reinterpret_cast<char*>(&implementation_) -
    reinterpret_cast<char*>(&weights_input_) + sizeof(implementation_));
  unit_forget_bias_ = true;
}

LSTMParameter::~LSTMParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.LSTMParameter)
  SharedDtor();
}

void LSTMParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recurrent_activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete weights_input_;
  }
  if (this != internal_default_instance()) {
    delete weights_forget_;
  }
  if (this != internal_default_instance()) {
    delete weights_cell_;
  }
  if (this != internal_default_instance()) {
    delete weights_output_;
  }
  if (this != internal_default_instance()) {
    delete bias_input_;
  }
  if (this != internal_default_instance()) {
    delete bias_forget_;
  }
  if (this != internal_default_instance()) {
    delete bias_cell_;
  }
  if (this != internal_default_instance()) {
    delete bias_output_;
  }
  if (this != internal_default_instance()) {
    delete recurrent_weights_input_;
  }
  if (this != internal_default_instance()) {
    delete recurrent_weights_forget_;
  }
  if (this != internal_default_instance()) {
    delete recurrent_weights_cell_;
  }
  if (this != internal_default_instance()) {
    delete recurrent_weights_output_;
  }
}

void LSTMParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LSTMParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LSTMParameter& LSTMParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

LSTMParameter* LSTMParameter::New(::google::protobuf::Arena* arena) const {
  LSTMParameter* n = new LSTMParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LSTMParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.LSTMParameter)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_activation()) {
      GOOGLE_DCHECK(!activation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*activation_.UnsafeRawStringPointer())->clear();
    }
    if (has_recurrent_activation()) {
      GOOGLE_DCHECK(!recurrent_activation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*recurrent_activation_.UnsafeRawStringPointer())->clear();
    }
    if (has_weights_input()) {
      GOOGLE_DCHECK(weights_input_ != NULL);
      weights_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_forget()) {
      GOOGLE_DCHECK(weights_forget_ != NULL);
      weights_forget_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_cell()) {
      GOOGLE_DCHECK(weights_cell_ != NULL);
      weights_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_weights_output()) {
      GOOGLE_DCHECK(weights_output_ != NULL);
      weights_output_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_input()) {
      GOOGLE_DCHECK(bias_input_ != NULL);
      bias_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_forget()) {
      GOOGLE_DCHECK(bias_forget_ != NULL);
      bias_forget_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    if (has_bias_cell()) {
      GOOGLE_DCHECK(bias_cell_ != NULL);
      bias_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_bias_output()) {
      GOOGLE_DCHECK(bias_output_ != NULL);
      bias_output_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_input()) {
      GOOGLE_DCHECK(recurrent_weights_input_ != NULL);
      recurrent_weights_input_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_forget()) {
      GOOGLE_DCHECK(recurrent_weights_forget_ != NULL);
      recurrent_weights_forget_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_cell()) {
      GOOGLE_DCHECK(recurrent_weights_cell_ != NULL);
      recurrent_weights_cell_->::apollo::prediction::TensorParameter::Clear();
    }
    if (has_recurrent_weights_output()) {
      GOOGLE_DCHECK(recurrent_weights_output_ != NULL);
      recurrent_weights_output_->::apollo::prediction::TensorParameter::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 49152u) {
    ::memset(&units_, 0, reinterpret_cast<char*>(&return_sequences_) -
      reinterpret_cast<char*>(&units_) + sizeof(return_sequences_));
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ::memset(&stateful_, 0, reinterpret_cast<char*>(&implementation_) -
      reinterpret_cast<char*>(&stateful_) + sizeof(implementation_));
    unit_forget_bias_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LSTMParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.LSTMParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 units = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool return_sequences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_return_sequences();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_sequences_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stateful = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_stateful();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stateful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string activation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LSTMParameter.activation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string recurrent_activation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recurrent_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recurrent_activation().data(), this->recurrent_activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LSTMParameter.recurrent_activation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_bias = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_use_bias();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_bias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unit_forget_bias = 7 [default = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_unit_forget_bias();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unit_forget_bias_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool go_backwards = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_go_backwards();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &go_backwards_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unroll = 9 [default = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_unroll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unroll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 implementation = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_implementation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &implementation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_input = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_forget = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_forget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_cell = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter weights_output = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weights_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_input = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_forget = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_forget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_cell = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter bias_output = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bias_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_forget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recurrent_weights_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.LSTMParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.LSTMParameter)
  return false;
#undef DO_
}

void LSTMParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.LSTMParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 units = 1;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->units(), output);
  }

  // optional bool return_sequences = 2;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->return_sequences(), output);
  }

  // optional bool stateful = 3;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->stateful(), output);
  }

  // optional string activation = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->activation(), output);
  }

  // optional string recurrent_activation = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recurrent_activation().data(), this->recurrent_activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.recurrent_activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->recurrent_activation(), output);
  }

  // optional bool use_bias = 6;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_bias(), output);
  }

  // optional bool unit_forget_bias = 7 [default = true];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->unit_forget_bias(), output);
  }

  // optional bool go_backwards = 8 [default = false];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->go_backwards(), output);
  }

  // optional bool unroll = 9 [default = false];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->unroll(), output);
  }

  // optional int32 implementation = 10 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->implementation(), output);
  }

  // optional .apollo.prediction.TensorParameter weights_input = 15;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->weights_input_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_forget = 16;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->weights_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_cell = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->weights_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter weights_output = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->weights_output_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_input = 19;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->bias_input_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_forget = 20;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->bias_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_cell = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->bias_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter bias_output = 22;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->bias_output_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->recurrent_weights_input_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->recurrent_weights_forget_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->recurrent_weights_cell_, output);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->recurrent_weights_output_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.LSTMParameter)
}

::google::protobuf::uint8* LSTMParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.LSTMParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 units = 1;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->units(), target);
  }

  // optional bool return_sequences = 2;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->return_sequences(), target);
  }

  // optional bool stateful = 3;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->stateful(), target);
  }

  // optional string activation = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->activation(), target);
  }

  // optional string recurrent_activation = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recurrent_activation().data(), this->recurrent_activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LSTMParameter.recurrent_activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->recurrent_activation(), target);
  }

  // optional bool use_bias = 6;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_bias(), target);
  }

  // optional bool unit_forget_bias = 7 [default = true];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->unit_forget_bias(), target);
  }

  // optional bool go_backwards = 8 [default = false];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->go_backwards(), target);
  }

  // optional bool unroll = 9 [default = false];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->unroll(), target);
  }

  // optional int32 implementation = 10 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->implementation(), target);
  }

  // optional .apollo.prediction.TensorParameter weights_input = 15;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->weights_input_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter weights_forget = 16;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->weights_forget_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter weights_cell = 17;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->weights_cell_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter weights_output = 18;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->weights_output_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter bias_input = 19;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->bias_input_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter bias_forget = 20;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->bias_forget_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter bias_cell = 21;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->bias_cell_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter bias_output = 22;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->bias_output_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->recurrent_weights_input_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->recurrent_weights_forget_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->recurrent_weights_cell_, deterministic, target);
  }

  // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->recurrent_weights_output_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.LSTMParameter)
  return target;
}

size_t LSTMParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.LSTMParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string activation = 4;
    if (has_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activation());
    }

    // optional string recurrent_activation = 5;
    if (has_recurrent_activation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recurrent_activation());
    }

    // optional .apollo.prediction.TensorParameter weights_input = 15;
    if (has_weights_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_input_);
    }

    // optional .apollo.prediction.TensorParameter weights_forget = 16;
    if (has_weights_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_forget_);
    }

    // optional .apollo.prediction.TensorParameter weights_cell = 17;
    if (has_weights_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_cell_);
    }

    // optional .apollo.prediction.TensorParameter weights_output = 18;
    if (has_weights_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->weights_output_);
    }

    // optional .apollo.prediction.TensorParameter bias_input = 19;
    if (has_bias_input()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_input_);
    }

    // optional .apollo.prediction.TensorParameter bias_forget = 20;
    if (has_bias_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_forget_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .apollo.prediction.TensorParameter bias_cell = 21;
    if (has_bias_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_cell_);
    }

    // optional .apollo.prediction.TensorParameter bias_output = 22;
    if (has_bias_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bias_output_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
    if (has_recurrent_weights_input()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_input_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
    if (has_recurrent_weights_forget()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_forget_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
    if (has_recurrent_weights_cell()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_cell_);
    }

    // optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
    if (has_recurrent_weights_output()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->recurrent_weights_output_);
    }

    // optional int32 units = 1;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

    // optional bool return_sequences = 2;
    if (has_return_sequences()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional bool stateful = 3;
    if (has_stateful()) {
      total_size += 1 + 1;
    }

    // optional bool use_bias = 6;
    if (has_use_bias()) {
      total_size += 1 + 1;
    }

    // optional bool go_backwards = 8 [default = false];
    if (has_go_backwards()) {
      total_size += 1 + 1;
    }

    // optional bool unroll = 9 [default = false];
    if (has_unroll()) {
      total_size += 1 + 1;
    }

    // optional int32 implementation = 10 [default = 0];
    if (has_implementation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->implementation());
    }

    // optional bool unit_forget_bias = 7 [default = true];
    if (has_unit_forget_bias()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LSTMParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.LSTMParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const LSTMParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LSTMParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.LSTMParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.LSTMParameter)
    MergeFrom(*source);
  }
}

void LSTMParameter::MergeFrom(const LSTMParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.LSTMParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_activation();
      activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_recurrent_activation();
      recurrent_activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recurrent_activation_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_weights_input()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_input());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_weights_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_forget());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_weights_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_cell());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_weights_output()->::apollo::prediction::TensorParameter::MergeFrom(from.weights_output());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_bias_input()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_input());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_bias_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_forget());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_bias_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_cell());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_bias_output()->::apollo::prediction::TensorParameter::MergeFrom(from.bias_output());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_recurrent_weights_input()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_input());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_recurrent_weights_forget()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_forget());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_recurrent_weights_cell()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_cell());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_recurrent_weights_output()->::apollo::prediction::TensorParameter::MergeFrom(from.recurrent_weights_output());
    }
    if (cached_has_bits & 0x00004000u) {
      units_ = from.units_;
    }
    if (cached_has_bits & 0x00008000u) {
      return_sequences_ = from.return_sequences_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      stateful_ = from.stateful_;
    }
    if (cached_has_bits & 0x00020000u) {
      use_bias_ = from.use_bias_;
    }
    if (cached_has_bits & 0x00040000u) {
      go_backwards_ = from.go_backwards_;
    }
    if (cached_has_bits & 0x00080000u) {
      unroll_ = from.unroll_;
    }
    if (cached_has_bits & 0x00100000u) {
      implementation_ = from.implementation_;
    }
    if (cached_has_bits & 0x00200000u) {
      unit_forget_bias_ = from.unit_forget_bias_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LSTMParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.LSTMParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LSTMParameter::CopyFrom(const LSTMParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.LSTMParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LSTMParameter::IsInitialized() const {
  return true;
}

void LSTMParameter::Swap(LSTMParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LSTMParameter::InternalSwap(LSTMParameter* other) {
  activation_.Swap(&other->activation_);
  recurrent_activation_.Swap(&other->recurrent_activation_);
  std::swap(weights_input_, other->weights_input_);
  std::swap(weights_forget_, other->weights_forget_);
  std::swap(weights_cell_, other->weights_cell_);
  std::swap(weights_output_, other->weights_output_);
  std::swap(bias_input_, other->bias_input_);
  std::swap(bias_forget_, other->bias_forget_);
  std::swap(bias_cell_, other->bias_cell_);
  std::swap(bias_output_, other->bias_output_);
  std::swap(recurrent_weights_input_, other->recurrent_weights_input_);
  std::swap(recurrent_weights_forget_, other->recurrent_weights_forget_);
  std::swap(recurrent_weights_cell_, other->recurrent_weights_cell_);
  std::swap(recurrent_weights_output_, other->recurrent_weights_output_);
  std::swap(units_, other->units_);
  std::swap(return_sequences_, other->return_sequences_);
  std::swap(stateful_, other->stateful_);
  std::swap(use_bias_, other->use_bias_);
  std::swap(go_backwards_, other->go_backwards_);
  std::swap(unroll_, other->unroll_);
  std::swap(implementation_, other->implementation_);
  std::swap(unit_forget_bias_, other->unit_forget_bias_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LSTMParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LSTMParameter

// optional int32 units = 1;
bool LSTMParameter::has_units() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void LSTMParameter::set_has_units() {
  _has_bits_[0] |= 0x00004000u;
}
void LSTMParameter::clear_has_units() {
  _has_bits_[0] &= ~0x00004000u;
}
void LSTMParameter::clear_units() {
  units_ = 0;
  clear_has_units();
}
::google::protobuf::int32 LSTMParameter::units() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.units)
  return units_;
}
void LSTMParameter::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.units)
}

// optional bool return_sequences = 2;
bool LSTMParameter::has_return_sequences() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void LSTMParameter::set_has_return_sequences() {
  _has_bits_[0] |= 0x00008000u;
}
void LSTMParameter::clear_has_return_sequences() {
  _has_bits_[0] &= ~0x00008000u;
}
void LSTMParameter::clear_return_sequences() {
  return_sequences_ = false;
  clear_has_return_sequences();
}
bool LSTMParameter::return_sequences() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.return_sequences)
  return return_sequences_;
}
void LSTMParameter::set_return_sequences(bool value) {
  set_has_return_sequences();
  return_sequences_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.return_sequences)
}

// optional bool stateful = 3;
bool LSTMParameter::has_stateful() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void LSTMParameter::set_has_stateful() {
  _has_bits_[0] |= 0x00010000u;
}
void LSTMParameter::clear_has_stateful() {
  _has_bits_[0] &= ~0x00010000u;
}
void LSTMParameter::clear_stateful() {
  stateful_ = false;
  clear_has_stateful();
}
bool LSTMParameter::stateful() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.stateful)
  return stateful_;
}
void LSTMParameter::set_stateful(bool value) {
  set_has_stateful();
  stateful_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.stateful)
}

// optional string activation = 4;
bool LSTMParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LSTMParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000001u;
}
void LSTMParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000001u;
}
void LSTMParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
const ::std::string& LSTMParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.activation)
  return activation_.GetNoArena();
}
void LSTMParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.activation)
}
#if LANG_CXX11
void LSTMParameter::set_activation(::std::string&& value) {
  set_has_activation();
  activation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.LSTMParameter.activation)
}
#endif
void LSTMParameter::set_activation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LSTMParameter.activation)
}
void LSTMParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LSTMParameter.activation)
}
::std::string* LSTMParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LSTMParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LSTMParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.activation)
}

// optional string recurrent_activation = 5;
bool LSTMParameter::has_recurrent_activation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LSTMParameter::set_has_recurrent_activation() {
  _has_bits_[0] |= 0x00000002u;
}
void LSTMParameter::clear_has_recurrent_activation() {
  _has_bits_[0] &= ~0x00000002u;
}
void LSTMParameter::clear_recurrent_activation() {
  recurrent_activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recurrent_activation();
}
const ::std::string& LSTMParameter::recurrent_activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_activation)
  return recurrent_activation_.GetNoArena();
}
void LSTMParameter::set_recurrent_activation(const ::std::string& value) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.recurrent_activation)
}
#if LANG_CXX11
void LSTMParameter::set_recurrent_activation(::std::string&& value) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.LSTMParameter.recurrent_activation)
}
#endif
void LSTMParameter::set_recurrent_activation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LSTMParameter.recurrent_activation)
}
void LSTMParameter::set_recurrent_activation(const char* value, size_t size) {
  set_has_recurrent_activation();
  recurrent_activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LSTMParameter.recurrent_activation)
}
::std::string* LSTMParameter::mutable_recurrent_activation() {
  set_has_recurrent_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_activation)
  return recurrent_activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LSTMParameter::release_recurrent_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_activation)
  clear_has_recurrent_activation();
  return recurrent_activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LSTMParameter::set_allocated_recurrent_activation(::std::string* recurrent_activation) {
  if (recurrent_activation != NULL) {
    set_has_recurrent_activation();
  } else {
    clear_has_recurrent_activation();
  }
  recurrent_activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recurrent_activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_activation)
}

// optional bool use_bias = 6;
bool LSTMParameter::has_use_bias() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void LSTMParameter::set_has_use_bias() {
  _has_bits_[0] |= 0x00020000u;
}
void LSTMParameter::clear_has_use_bias() {
  _has_bits_[0] &= ~0x00020000u;
}
void LSTMParameter::clear_use_bias() {
  use_bias_ = false;
  clear_has_use_bias();
}
bool LSTMParameter::use_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.use_bias)
  return use_bias_;
}
void LSTMParameter::set_use_bias(bool value) {
  set_has_use_bias();
  use_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.use_bias)
}

// optional bool unit_forget_bias = 7 [default = true];
bool LSTMParameter::has_unit_forget_bias() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void LSTMParameter::set_has_unit_forget_bias() {
  _has_bits_[0] |= 0x00200000u;
}
void LSTMParameter::clear_has_unit_forget_bias() {
  _has_bits_[0] &= ~0x00200000u;
}
void LSTMParameter::clear_unit_forget_bias() {
  unit_forget_bias_ = true;
  clear_has_unit_forget_bias();
}
bool LSTMParameter::unit_forget_bias() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.unit_forget_bias)
  return unit_forget_bias_;
}
void LSTMParameter::set_unit_forget_bias(bool value) {
  set_has_unit_forget_bias();
  unit_forget_bias_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.unit_forget_bias)
}

// optional bool go_backwards = 8 [default = false];
bool LSTMParameter::has_go_backwards() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void LSTMParameter::set_has_go_backwards() {
  _has_bits_[0] |= 0x00040000u;
}
void LSTMParameter::clear_has_go_backwards() {
  _has_bits_[0] &= ~0x00040000u;
}
void LSTMParameter::clear_go_backwards() {
  go_backwards_ = false;
  clear_has_go_backwards();
}
bool LSTMParameter::go_backwards() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.go_backwards)
  return go_backwards_;
}
void LSTMParameter::set_go_backwards(bool value) {
  set_has_go_backwards();
  go_backwards_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.go_backwards)
}

// optional bool unroll = 9 [default = false];
bool LSTMParameter::has_unroll() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void LSTMParameter::set_has_unroll() {
  _has_bits_[0] |= 0x00080000u;
}
void LSTMParameter::clear_has_unroll() {
  _has_bits_[0] &= ~0x00080000u;
}
void LSTMParameter::clear_unroll() {
  unroll_ = false;
  clear_has_unroll();
}
bool LSTMParameter::unroll() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.unroll)
  return unroll_;
}
void LSTMParameter::set_unroll(bool value) {
  set_has_unroll();
  unroll_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.unroll)
}

// optional int32 implementation = 10 [default = 0];
bool LSTMParameter::has_implementation() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void LSTMParameter::set_has_implementation() {
  _has_bits_[0] |= 0x00100000u;
}
void LSTMParameter::clear_has_implementation() {
  _has_bits_[0] &= ~0x00100000u;
}
void LSTMParameter::clear_implementation() {
  implementation_ = 0;
  clear_has_implementation();
}
::google::protobuf::int32 LSTMParameter::implementation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.implementation)
  return implementation_;
}
void LSTMParameter::set_implementation(::google::protobuf::int32 value) {
  set_has_implementation();
  implementation_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LSTMParameter.implementation)
}

// optional .apollo.prediction.TensorParameter weights_input = 15;
bool LSTMParameter::has_weights_input() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LSTMParameter::set_has_weights_input() {
  _has_bits_[0] |= 0x00000004u;
}
void LSTMParameter::clear_has_weights_input() {
  _has_bits_[0] &= ~0x00000004u;
}
void LSTMParameter::clear_weights_input() {
  if (weights_input_ != NULL) weights_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_input)
  return weights_input_ != NULL ? *weights_input_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_input() {
  set_has_weights_input();
  if (weights_input_ == NULL) {
    weights_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_input)
  return weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_input)
  clear_has_weights_input();
  ::apollo::prediction::TensorParameter* temp = weights_input_;
  weights_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_input(::apollo::prediction::TensorParameter* weights_input) {
  delete weights_input_;
  weights_input_ = weights_input;
  if (weights_input) {
    set_has_weights_input();
  } else {
    clear_has_weights_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_input)
}

// optional .apollo.prediction.TensorParameter weights_forget = 16;
bool LSTMParameter::has_weights_forget() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LSTMParameter::set_has_weights_forget() {
  _has_bits_[0] |= 0x00000008u;
}
void LSTMParameter::clear_has_weights_forget() {
  _has_bits_[0] &= ~0x00000008u;
}
void LSTMParameter::clear_weights_forget() {
  if (weights_forget_ != NULL) weights_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_forget)
  return weights_forget_ != NULL ? *weights_forget_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_forget() {
  set_has_weights_forget();
  if (weights_forget_ == NULL) {
    weights_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_forget)
  return weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_forget)
  clear_has_weights_forget();
  ::apollo::prediction::TensorParameter* temp = weights_forget_;
  weights_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_forget(::apollo::prediction::TensorParameter* weights_forget) {
  delete weights_forget_;
  weights_forget_ = weights_forget;
  if (weights_forget) {
    set_has_weights_forget();
  } else {
    clear_has_weights_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_forget)
}

// optional .apollo.prediction.TensorParameter weights_cell = 17;
bool LSTMParameter::has_weights_cell() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LSTMParameter::set_has_weights_cell() {
  _has_bits_[0] |= 0x00000010u;
}
void LSTMParameter::clear_has_weights_cell() {
  _has_bits_[0] &= ~0x00000010u;
}
void LSTMParameter::clear_weights_cell() {
  if (weights_cell_ != NULL) weights_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_cell)
  return weights_cell_ != NULL ? *weights_cell_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_cell() {
  set_has_weights_cell();
  if (weights_cell_ == NULL) {
    weights_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_cell)
  return weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_cell)
  clear_has_weights_cell();
  ::apollo::prediction::TensorParameter* temp = weights_cell_;
  weights_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_cell(::apollo::prediction::TensorParameter* weights_cell) {
  delete weights_cell_;
  weights_cell_ = weights_cell;
  if (weights_cell) {
    set_has_weights_cell();
  } else {
    clear_has_weights_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_cell)
}

// optional .apollo.prediction.TensorParameter weights_output = 18;
bool LSTMParameter::has_weights_output() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LSTMParameter::set_has_weights_output() {
  _has_bits_[0] |= 0x00000020u;
}
void LSTMParameter::clear_has_weights_output() {
  _has_bits_[0] &= ~0x00000020u;
}
void LSTMParameter::clear_weights_output() {
  if (weights_output_ != NULL) weights_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_weights_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::weights_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.weights_output)
  return weights_output_ != NULL ? *weights_output_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_weights_output() {
  set_has_weights_output();
  if (weights_output_ == NULL) {
    weights_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.weights_output)
  return weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_weights_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.weights_output)
  clear_has_weights_output();
  ::apollo::prediction::TensorParameter* temp = weights_output_;
  weights_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_weights_output(::apollo::prediction::TensorParameter* weights_output) {
  delete weights_output_;
  weights_output_ = weights_output;
  if (weights_output) {
    set_has_weights_output();
  } else {
    clear_has_weights_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.weights_output)
}

// optional .apollo.prediction.TensorParameter bias_input = 19;
bool LSTMParameter::has_bias_input() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LSTMParameter::set_has_bias_input() {
  _has_bits_[0] |= 0x00000040u;
}
void LSTMParameter::clear_has_bias_input() {
  _has_bits_[0] &= ~0x00000040u;
}
void LSTMParameter::clear_bias_input() {
  if (bias_input_ != NULL) bias_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_input)
  return bias_input_ != NULL ? *bias_input_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_input() {
  set_has_bias_input();
  if (bias_input_ == NULL) {
    bias_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_input)
  return bias_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_input)
  clear_has_bias_input();
  ::apollo::prediction::TensorParameter* temp = bias_input_;
  bias_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_input(::apollo::prediction::TensorParameter* bias_input) {
  delete bias_input_;
  bias_input_ = bias_input;
  if (bias_input) {
    set_has_bias_input();
  } else {
    clear_has_bias_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_input)
}

// optional .apollo.prediction.TensorParameter bias_forget = 20;
bool LSTMParameter::has_bias_forget() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LSTMParameter::set_has_bias_forget() {
  _has_bits_[0] |= 0x00000080u;
}
void LSTMParameter::clear_has_bias_forget() {
  _has_bits_[0] &= ~0x00000080u;
}
void LSTMParameter::clear_bias_forget() {
  if (bias_forget_ != NULL) bias_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_forget)
  return bias_forget_ != NULL ? *bias_forget_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_forget() {
  set_has_bias_forget();
  if (bias_forget_ == NULL) {
    bias_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_forget)
  return bias_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_forget)
  clear_has_bias_forget();
  ::apollo::prediction::TensorParameter* temp = bias_forget_;
  bias_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_forget(::apollo::prediction::TensorParameter* bias_forget) {
  delete bias_forget_;
  bias_forget_ = bias_forget;
  if (bias_forget) {
    set_has_bias_forget();
  } else {
    clear_has_bias_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_forget)
}

// optional .apollo.prediction.TensorParameter bias_cell = 21;
bool LSTMParameter::has_bias_cell() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LSTMParameter::set_has_bias_cell() {
  _has_bits_[0] |= 0x00000100u;
}
void LSTMParameter::clear_has_bias_cell() {
  _has_bits_[0] &= ~0x00000100u;
}
void LSTMParameter::clear_bias_cell() {
  if (bias_cell_ != NULL) bias_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_cell)
  return bias_cell_ != NULL ? *bias_cell_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_cell() {
  set_has_bias_cell();
  if (bias_cell_ == NULL) {
    bias_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_cell)
  return bias_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_cell)
  clear_has_bias_cell();
  ::apollo::prediction::TensorParameter* temp = bias_cell_;
  bias_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_cell(::apollo::prediction::TensorParameter* bias_cell) {
  delete bias_cell_;
  bias_cell_ = bias_cell;
  if (bias_cell) {
    set_has_bias_cell();
  } else {
    clear_has_bias_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_cell)
}

// optional .apollo.prediction.TensorParameter bias_output = 22;
bool LSTMParameter::has_bias_output() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void LSTMParameter::set_has_bias_output() {
  _has_bits_[0] |= 0x00000200u;
}
void LSTMParameter::clear_has_bias_output() {
  _has_bits_[0] &= ~0x00000200u;
}
void LSTMParameter::clear_bias_output() {
  if (bias_output_ != NULL) bias_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_bias_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::bias_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.bias_output)
  return bias_output_ != NULL ? *bias_output_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_bias_output() {
  set_has_bias_output();
  if (bias_output_ == NULL) {
    bias_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.bias_output)
  return bias_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_bias_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.bias_output)
  clear_has_bias_output();
  ::apollo::prediction::TensorParameter* temp = bias_output_;
  bias_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_bias_output(::apollo::prediction::TensorParameter* bias_output) {
  delete bias_output_;
  bias_output_ = bias_output;
  if (bias_output) {
    set_has_bias_output();
  } else {
    clear_has_bias_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.bias_output)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_input = 25;
bool LSTMParameter::has_recurrent_weights_input() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_input() {
  _has_bits_[0] |= 0x00000400u;
}
void LSTMParameter::clear_has_recurrent_weights_input() {
  _has_bits_[0] &= ~0x00000400u;
}
void LSTMParameter::clear_recurrent_weights_input() {
  if (recurrent_weights_input_ != NULL) recurrent_weights_input_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_input();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_input)
  return recurrent_weights_input_ != NULL ? *recurrent_weights_input_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_input() {
  set_has_recurrent_weights_input();
  if (recurrent_weights_input_ == NULL) {
    recurrent_weights_input_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_input)
  return recurrent_weights_input_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_input)
  clear_has_recurrent_weights_input();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_input_;
  recurrent_weights_input_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_input(::apollo::prediction::TensorParameter* recurrent_weights_input) {
  delete recurrent_weights_input_;
  recurrent_weights_input_ = recurrent_weights_input;
  if (recurrent_weights_input) {
    set_has_recurrent_weights_input();
  } else {
    clear_has_recurrent_weights_input();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_input)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_forget = 26;
bool LSTMParameter::has_recurrent_weights_forget() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_forget() {
  _has_bits_[0] |= 0x00000800u;
}
void LSTMParameter::clear_has_recurrent_weights_forget() {
  _has_bits_[0] &= ~0x00000800u;
}
void LSTMParameter::clear_recurrent_weights_forget() {
  if (recurrent_weights_forget_ != NULL) recurrent_weights_forget_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_forget();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_forget() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  return recurrent_weights_forget_ != NULL ? *recurrent_weights_forget_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_forget() {
  set_has_recurrent_weights_forget();
  if (recurrent_weights_forget_ == NULL) {
    recurrent_weights_forget_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  return recurrent_weights_forget_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_forget() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_forget)
  clear_has_recurrent_weights_forget();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_forget_;
  recurrent_weights_forget_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_forget(::apollo::prediction::TensorParameter* recurrent_weights_forget) {
  delete recurrent_weights_forget_;
  recurrent_weights_forget_ = recurrent_weights_forget;
  if (recurrent_weights_forget) {
    set_has_recurrent_weights_forget();
  } else {
    clear_has_recurrent_weights_forget();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_forget)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_cell = 27;
bool LSTMParameter::has_recurrent_weights_cell() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_cell() {
  _has_bits_[0] |= 0x00001000u;
}
void LSTMParameter::clear_has_recurrent_weights_cell() {
  _has_bits_[0] &= ~0x00001000u;
}
void LSTMParameter::clear_recurrent_weights_cell() {
  if (recurrent_weights_cell_ != NULL) recurrent_weights_cell_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_cell();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_cell() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  return recurrent_weights_cell_ != NULL ? *recurrent_weights_cell_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_cell() {
  set_has_recurrent_weights_cell();
  if (recurrent_weights_cell_ == NULL) {
    recurrent_weights_cell_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  return recurrent_weights_cell_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_cell() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_cell)
  clear_has_recurrent_weights_cell();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_cell_;
  recurrent_weights_cell_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_cell(::apollo::prediction::TensorParameter* recurrent_weights_cell) {
  delete recurrent_weights_cell_;
  recurrent_weights_cell_ = recurrent_weights_cell;
  if (recurrent_weights_cell) {
    set_has_recurrent_weights_cell();
  } else {
    clear_has_recurrent_weights_cell();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_cell)
}

// optional .apollo.prediction.TensorParameter recurrent_weights_output = 28;
bool LSTMParameter::has_recurrent_weights_output() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void LSTMParameter::set_has_recurrent_weights_output() {
  _has_bits_[0] |= 0x00002000u;
}
void LSTMParameter::clear_has_recurrent_weights_output() {
  _has_bits_[0] &= ~0x00002000u;
}
void LSTMParameter::clear_recurrent_weights_output() {
  if (recurrent_weights_output_ != NULL) recurrent_weights_output_->::apollo::prediction::TensorParameter::Clear();
  clear_has_recurrent_weights_output();
}
const ::apollo::prediction::TensorParameter& LSTMParameter::recurrent_weights_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LSTMParameter.recurrent_weights_output)
  return recurrent_weights_output_ != NULL ? *recurrent_weights_output_
                         : *::apollo::prediction::TensorParameter::internal_default_instance();
}
::apollo::prediction::TensorParameter* LSTMParameter::mutable_recurrent_weights_output() {
  set_has_recurrent_weights_output();
  if (recurrent_weights_output_ == NULL) {
    recurrent_weights_output_ = new ::apollo::prediction::TensorParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LSTMParameter.recurrent_weights_output)
  return recurrent_weights_output_;
}
::apollo::prediction::TensorParameter* LSTMParameter::release_recurrent_weights_output() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LSTMParameter.recurrent_weights_output)
  clear_has_recurrent_weights_output();
  ::apollo::prediction::TensorParameter* temp = recurrent_weights_output_;
  recurrent_weights_output_ = NULL;
  return temp;
}
void LSTMParameter::set_allocated_recurrent_weights_output(::apollo::prediction::TensorParameter* recurrent_weights_output) {
  delete recurrent_weights_output_;
  recurrent_weights_output_ = recurrent_weights_output;
  if (recurrent_weights_output) {
    set_has_recurrent_weights_output();
  } else {
    clear_has_recurrent_weights_output();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LSTMParameter.recurrent_weights_output)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivationParameter::kActivationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivationParameter::ActivationParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ActivationParameter)
}
ActivationParameter::ActivationParameter(const ActivationParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_activation()) {
    activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ActivationParameter)
}

void ActivationParameter::SharedCtor() {
  _cached_size_ = 0;
  activation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ActivationParameter::~ActivationParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ActivationParameter)
  SharedDtor();
}

void ActivationParameter::SharedDtor() {
  activation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActivationParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivationParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivationParameter& ActivationParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivationParameter* ActivationParameter::New(::google::protobuf::Arena* arena) const {
  ActivationParameter* n = new ActivationParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivationParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ActivationParameter)
  if (has_activation()) {
    GOOGLE_DCHECK(!activation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*activation_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivationParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ActivationParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string activation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activation().data(), this->activation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.ActivationParameter.activation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ActivationParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ActivationParameter)
  return false;
#undef DO_
}

void ActivationParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ActivationParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string activation = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.ActivationParameter.activation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->activation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ActivationParameter)
}

::google::protobuf::uint8* ActivationParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ActivationParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string activation = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activation().data(), this->activation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.ActivationParameter.activation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->activation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ActivationParameter)
  return target;
}

size_t ActivationParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ActivationParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string activation = 1;
  if (has_activation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->activation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivationParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ActivationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivationParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivationParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ActivationParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ActivationParameter)
    MergeFrom(*source);
  }
}

void ActivationParameter::MergeFrom(const ActivationParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ActivationParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_activation()) {
    set_has_activation();
    activation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activation_);
  }
}

void ActivationParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ActivationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivationParameter::CopyFrom(const ActivationParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ActivationParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivationParameter::IsInitialized() const {
  return true;
}

void ActivationParameter::Swap(ActivationParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivationParameter::InternalSwap(ActivationParameter* other) {
  activation_.Swap(&other->activation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivationParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivationParameter

// optional string activation = 1;
bool ActivationParameter::has_activation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivationParameter::set_has_activation() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivationParameter::clear_has_activation() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivationParameter::clear_activation() {
  activation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_activation();
}
const ::std::string& ActivationParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ActivationParameter.activation)
  return activation_.GetNoArena();
}
void ActivationParameter::set_activation(const ::std::string& value) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.ActivationParameter.activation)
}
#if LANG_CXX11
void ActivationParameter::set_activation(::std::string&& value) {
  set_has_activation();
  activation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.ActivationParameter.activation)
}
#endif
void ActivationParameter::set_activation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.ActivationParameter.activation)
}
void ActivationParameter::set_activation(const char* value, size_t size) {
  set_has_activation();
  activation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.ActivationParameter.activation)
}
::std::string* ActivationParameter::mutable_activation() {
  set_has_activation();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ActivationParameter.activation)
  return activation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActivationParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.ActivationParameter.activation)
  clear_has_activation();
  return activation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActivationParameter::set_allocated_activation(::std::string* activation) {
  if (activation != NULL) {
    set_has_activation();
  } else {
    clear_has_activation();
  }
  activation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.ActivationParameter.activation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlattenParameter::FlattenParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.FlattenParameter)
}
FlattenParameter::FlattenParameter(const FlattenParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.FlattenParameter)
}

void FlattenParameter::SharedCtor() {
  _cached_size_ = 0;
}

FlattenParameter::~FlattenParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.FlattenParameter)
  SharedDtor();
}

void FlattenParameter::SharedDtor() {
}

void FlattenParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlattenParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlattenParameter& FlattenParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

FlattenParameter* FlattenParameter::New(::google::protobuf::Arena* arena) const {
  FlattenParameter* n = new FlattenParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlattenParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.FlattenParameter)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FlattenParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.FlattenParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.FlattenParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.FlattenParameter)
  return false;
#undef DO_
}

void FlattenParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.FlattenParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.FlattenParameter)
}

::google::protobuf::uint8* FlattenParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.FlattenParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.FlattenParameter)
  return target;
}

size_t FlattenParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.FlattenParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlattenParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.FlattenParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const FlattenParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlattenParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.FlattenParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.FlattenParameter)
    MergeFrom(*source);
  }
}

void FlattenParameter::MergeFrom(const FlattenParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.FlattenParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FlattenParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.FlattenParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlattenParameter::CopyFrom(const FlattenParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.FlattenParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlattenParameter::IsInitialized() const {
  return true;
}

void FlattenParameter::Swap(FlattenParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlattenParameter::InternalSwap(FlattenParameter* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlattenParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlattenParameter

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConcatenateParameter::kAxisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConcatenateParameter::ConcatenateParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.ConcatenateParameter)
}
ConcatenateParameter::ConcatenateParameter(const ConcatenateParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  axis_ = from.axis_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.ConcatenateParameter)
}

void ConcatenateParameter::SharedCtor() {
  _cached_size_ = 0;
  axis_ = 0;
}

ConcatenateParameter::~ConcatenateParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.ConcatenateParameter)
  SharedDtor();
}

void ConcatenateParameter::SharedDtor() {
}

void ConcatenateParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConcatenateParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConcatenateParameter& ConcatenateParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConcatenateParameter* ConcatenateParameter::New(::google::protobuf::Arena* arena) const {
  ConcatenateParameter* n = new ConcatenateParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConcatenateParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.ConcatenateParameter)
  axis_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConcatenateParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.ConcatenateParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 axis = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_axis();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &axis_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.ConcatenateParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.ConcatenateParameter)
  return false;
#undef DO_
}

void ConcatenateParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.ConcatenateParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 axis = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->axis(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.ConcatenateParameter)
}

::google::protobuf::uint8* ConcatenateParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.ConcatenateParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 axis = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->axis(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.ConcatenateParameter)
  return target;
}

size_t ConcatenateParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.ConcatenateParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 axis = 1;
  if (has_axis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->axis());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConcatenateParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.ConcatenateParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ConcatenateParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConcatenateParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.ConcatenateParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.ConcatenateParameter)
    MergeFrom(*source);
  }
}

void ConcatenateParameter::MergeFrom(const ConcatenateParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.ConcatenateParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_axis()) {
    set_axis(from.axis());
  }
}

void ConcatenateParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.ConcatenateParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConcatenateParameter::CopyFrom(const ConcatenateParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.ConcatenateParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConcatenateParameter::IsInitialized() const {
  return true;
}

void ConcatenateParameter::Swap(ConcatenateParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConcatenateParameter::InternalSwap(ConcatenateParameter* other) {
  std::swap(axis_, other->axis_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConcatenateParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConcatenateParameter

// optional int32 axis = 1;
bool ConcatenateParameter::has_axis() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConcatenateParameter::set_has_axis() {
  _has_bits_[0] |= 0x00000001u;
}
void ConcatenateParameter::clear_has_axis() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConcatenateParameter::clear_axis() {
  axis_ = 0;
  clear_has_axis();
}
::google::protobuf::int32 ConcatenateParameter::axis() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ConcatenateParameter.axis)
  return axis_;
}
void ConcatenateParameter::set_axis(::google::protobuf::int32 value) {
  set_has_axis();
  axis_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.ConcatenateParameter.axis)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerParameter::kTypeFieldNumber;
const int LayerParameter::kNameFieldNumber;
const int LayerParameter::kOrderNumberFieldNumber;
const int LayerParameter::kInputFieldNumber;
const int LayerParameter::kActivationFieldNumber;
const int LayerParameter::kDenseFieldNumber;
const int LayerParameter::kBatchNormalizationFieldNumber;
const int LayerParameter::kLstmFieldNumber;
const int LayerParameter::kFlattenFieldNumber;
const int LayerParameter::kConcatenateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LayerParameter::LayerParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.LayerParameter)
}
LayerParameter::LayerParameter(const LayerParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  order_number_ = from.order_number_;
  clear_has_oneof_layers();
  switch (from.oneof_layers_case()) {
    case kInput: {
      mutable_input()->::apollo::prediction::InputParameter::MergeFrom(from.input());
      break;
    }
    case kActivation: {
      mutable_activation()->::apollo::prediction::ActivationParameter::MergeFrom(from.activation());
      break;
    }
    case kDense: {
      mutable_dense()->::apollo::prediction::DenseParameter::MergeFrom(from.dense());
      break;
    }
    case kBatchNormalization: {
      mutable_batch_normalization()->::apollo::prediction::BatchNormalizationParameter::MergeFrom(from.batch_normalization());
      break;
    }
    case kLstm: {
      mutable_lstm()->::apollo::prediction::LSTMParameter::MergeFrom(from.lstm());
      break;
    }
    case kFlatten: {
      mutable_flatten()->::apollo::prediction::FlattenParameter::MergeFrom(from.flatten());
      break;
    }
    case kConcatenate: {
      mutable_concatenate()->::apollo::prediction::ConcatenateParameter::MergeFrom(from.concatenate());
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.LayerParameter)
}

void LayerParameter::SharedCtor() {
  _cached_size_ = 0;
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_number_ = 0;
  clear_has_oneof_layers();
}

LayerParameter::~LayerParameter() {
  // @@protoc_insertion_point(destructor:apollo.prediction.LayerParameter)
  SharedDtor();
}

void LayerParameter::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_oneof_layers()) {
    clear_oneof_layers();
  }
}

void LayerParameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LayerParameter::descriptor() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LayerParameter& LayerParameter::default_instance() {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::InitDefaults();
  return *internal_default_instance();
}

LayerParameter* LayerParameter::New(::google::protobuf::Arena* arena) const {
  LayerParameter* n = new LayerParameter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LayerParameter::clear_oneof_layers() {
// @@protoc_insertion_point(one_of_clear_start:apollo.prediction.LayerParameter)
  switch (oneof_layers_case()) {
    case kInput: {
      delete oneof_layers_.input_;
      break;
    }
    case kActivation: {
      delete oneof_layers_.activation_;
      break;
    }
    case kDense: {
      delete oneof_layers_.dense_;
      break;
    }
    case kBatchNormalization: {
      delete oneof_layers_.batch_normalization_;
      break;
    }
    case kLstm: {
      delete oneof_layers_.lstm_;
      break;
    }
    case kFlatten: {
      delete oneof_layers_.flatten_;
      break;
    }
    case kConcatenate: {
      delete oneof_layers_.concatenate_;
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_LAYERS_NOT_SET;
}


void LayerParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.LayerParameter)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_type()) {
      GOOGLE_DCHECK(!type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*type_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
  }
  order_number_ = 0;
  clear_oneof_layers();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LayerParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.LayerParameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LayerParameter.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.prediction.LayerParameter.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 order_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_order_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.InputParameter input = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ActivationParameter activation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.DenseParameter dense = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dense()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_batch_normalization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.LSTMParameter lstm = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lstm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.FlattenParameter flatten = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flatten()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_concatenate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.LayerParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.LayerParameter)
  return false;
#undef DO_
}

void LayerParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.LayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 order_number = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->order_number(), output);
  }

  switch (oneof_layers_case()) {
    case kInput:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *oneof_layers_.input_, output);
      break;
    case kActivation:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, *oneof_layers_.activation_, output);
      break;
    case kDense:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, *oneof_layers_.dense_, output);
      break;
    case kBatchNormalization:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        7, *oneof_layers_.batch_normalization_, output);
      break;
    case kLstm:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        8, *oneof_layers_.lstm_, output);
      break;
    case kFlatten:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        9, *oneof_layers_.flatten_, output);
      break;
    case kConcatenate:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, *oneof_layers_.concatenate_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.prediction.LayerParameter)
}

::google::protobuf::uint8* LayerParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.LayerParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.prediction.LayerParameter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 order_number = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->order_number(), target);
  }

  switch (oneof_layers_case()) {
    case kInput:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          4, *oneof_layers_.input_, deterministic, target);
      break;
    case kActivation:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          5, *oneof_layers_.activation_, deterministic, target);
      break;
    case kDense:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          6, *oneof_layers_.dense_, deterministic, target);
      break;
    case kBatchNormalization:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          7, *oneof_layers_.batch_normalization_, deterministic, target);
      break;
    case kLstm:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          8, *oneof_layers_.lstm_, deterministic, target);
      break;
    case kFlatten:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          9, *oneof_layers_.flatten_, deterministic, target);
      break;
    case kConcatenate:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          10, *oneof_layers_.concatenate_, deterministic, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.LayerParameter)
  return target;
}

size_t LayerParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.LayerParameter)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 order_number = 3;
    if (has_order_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_number());
    }

  }
  switch (oneof_layers_case()) {
    // optional .apollo.prediction.InputParameter input = 4;
    case kInput: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.input_);
      break;
    }
    // optional .apollo.prediction.ActivationParameter activation = 5;
    case kActivation: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.activation_);
      break;
    }
    // optional .apollo.prediction.DenseParameter dense = 6;
    case kDense: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.dense_);
      break;
    }
    // optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
    case kBatchNormalization: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.batch_normalization_);
      break;
    }
    // optional .apollo.prediction.LSTMParameter lstm = 8;
    case kLstm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.lstm_);
      break;
    }
    // optional .apollo.prediction.FlattenParameter flatten = 9;
    case kFlatten: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.flatten_);
      break;
    }
    // optional .apollo.prediction.ConcatenateParameter concatenate = 10;
    case kConcatenate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *oneof_layers_.concatenate_);
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.LayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const LayerParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LayerParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.LayerParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.LayerParameter)
    MergeFrom(*source);
  }
}

void LayerParameter::MergeFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.LayerParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      order_number_ = from.order_number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.oneof_layers_case()) {
    case kInput: {
      mutable_input()->::apollo::prediction::InputParameter::MergeFrom(from.input());
      break;
    }
    case kActivation: {
      mutable_activation()->::apollo::prediction::ActivationParameter::MergeFrom(from.activation());
      break;
    }
    case kDense: {
      mutable_dense()->::apollo::prediction::DenseParameter::MergeFrom(from.dense());
      break;
    }
    case kBatchNormalization: {
      mutable_batch_normalization()->::apollo::prediction::BatchNormalizationParameter::MergeFrom(from.batch_normalization());
      break;
    }
    case kLstm: {
      mutable_lstm()->::apollo::prediction::LSTMParameter::MergeFrom(from.lstm());
      break;
    }
    case kFlatten: {
      mutable_flatten()->::apollo::prediction::FlattenParameter::MergeFrom(from.flatten());
      break;
    }
    case kConcatenate: {
      mutable_concatenate()->::apollo::prediction::ConcatenateParameter::MergeFrom(from.concatenate());
      break;
    }
    case ONEOF_LAYERS_NOT_SET: {
      break;
    }
  }
}

void LayerParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LayerParameter::CopyFrom(const LayerParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.LayerParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerParameter::IsInitialized() const {
  return true;
}

void LayerParameter::Swap(LayerParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LayerParameter::InternalSwap(LayerParameter* other) {
  type_.Swap(&other->type_);
  name_.Swap(&other->name_);
  std::swap(order_number_, other->order_number_);
  std::swap(oneof_layers_, other->oneof_layers_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LayerParameter::GetMetadata() const {
  protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fprediction_2fproto_2fnetwork_5flayers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LayerParameter

// optional string type = 1;
bool LayerParameter::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LayerParameter::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void LayerParameter::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void LayerParameter::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
const ::std::string& LayerParameter::type() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.type)
  return type_.GetNoArena();
}
void LayerParameter::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.type)
}
#if LANG_CXX11
void LayerParameter::set_type(::std::string&& value) {
  set_has_type();
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.LayerParameter.type)
}
#endif
void LayerParameter::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LayerParameter.type)
}
void LayerParameter::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LayerParameter.type)
}
::std::string* LayerParameter::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LayerParameter::release_type() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LayerParameter::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.type)
}

// optional string name = 2;
bool LayerParameter::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LayerParameter::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void LayerParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void LayerParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& LayerParameter::name() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.name)
  return name_.GetNoArena();
}
void LayerParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.name)
}
#if LANG_CXX11
void LayerParameter::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.LayerParameter.name)
}
#endif
void LayerParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.LayerParameter.name)
}
void LayerParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.LayerParameter.name)
}
::std::string* LayerParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LayerParameter::release_name() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LayerParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.name)
}

// optional int32 order_number = 3;
bool LayerParameter::has_order_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LayerParameter::set_has_order_number() {
  _has_bits_[0] |= 0x00000004u;
}
void LayerParameter::clear_has_order_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void LayerParameter::clear_order_number() {
  order_number_ = 0;
  clear_has_order_number();
}
::google::protobuf::int32 LayerParameter::order_number() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.order_number)
  return order_number_;
}
void LayerParameter::set_order_number(::google::protobuf::int32 value) {
  set_has_order_number();
  order_number_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.LayerParameter.order_number)
}

// optional .apollo.prediction.InputParameter input = 4;
bool LayerParameter::has_input() const {
  return oneof_layers_case() == kInput;
}
void LayerParameter::set_has_input() {
  _oneof_case_[0] = kInput;
}
void LayerParameter::clear_input() {
  if (has_input()) {
    delete oneof_layers_.input_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::InputParameter& LayerParameter::input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.input)
  return has_input()
      ? *oneof_layers_.input_
      : ::apollo::prediction::InputParameter::default_instance();
}
::apollo::prediction::InputParameter* LayerParameter::mutable_input() {
  if (!has_input()) {
    clear_oneof_layers();
    set_has_input();
    oneof_layers_.input_ = new ::apollo::prediction::InputParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.input)
  return oneof_layers_.input_;
}
::apollo::prediction::InputParameter* LayerParameter::release_input() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.input)
  if (has_input()) {
    clear_has_oneof_layers();
    ::apollo::prediction::InputParameter* temp = oneof_layers_.input_;
    oneof_layers_.input_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_input(::apollo::prediction::InputParameter* input) {
  clear_oneof_layers();
  if (input) {
    set_has_input();
    oneof_layers_.input_ = input;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.input)
}

// optional .apollo.prediction.ActivationParameter activation = 5;
bool LayerParameter::has_activation() const {
  return oneof_layers_case() == kActivation;
}
void LayerParameter::set_has_activation() {
  _oneof_case_[0] = kActivation;
}
void LayerParameter::clear_activation() {
  if (has_activation()) {
    delete oneof_layers_.activation_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::ActivationParameter& LayerParameter::activation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.activation)
  return has_activation()
      ? *oneof_layers_.activation_
      : ::apollo::prediction::ActivationParameter::default_instance();
}
::apollo::prediction::ActivationParameter* LayerParameter::mutable_activation() {
  if (!has_activation()) {
    clear_oneof_layers();
    set_has_activation();
    oneof_layers_.activation_ = new ::apollo::prediction::ActivationParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.activation)
  return oneof_layers_.activation_;
}
::apollo::prediction::ActivationParameter* LayerParameter::release_activation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.activation)
  if (has_activation()) {
    clear_has_oneof_layers();
    ::apollo::prediction::ActivationParameter* temp = oneof_layers_.activation_;
    oneof_layers_.activation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_activation(::apollo::prediction::ActivationParameter* activation) {
  clear_oneof_layers();
  if (activation) {
    set_has_activation();
    oneof_layers_.activation_ = activation;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.activation)
}

// optional .apollo.prediction.DenseParameter dense = 6;
bool LayerParameter::has_dense() const {
  return oneof_layers_case() == kDense;
}
void LayerParameter::set_has_dense() {
  _oneof_case_[0] = kDense;
}
void LayerParameter::clear_dense() {
  if (has_dense()) {
    delete oneof_layers_.dense_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::DenseParameter& LayerParameter::dense() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.dense)
  return has_dense()
      ? *oneof_layers_.dense_
      : ::apollo::prediction::DenseParameter::default_instance();
}
::apollo::prediction::DenseParameter* LayerParameter::mutable_dense() {
  if (!has_dense()) {
    clear_oneof_layers();
    set_has_dense();
    oneof_layers_.dense_ = new ::apollo::prediction::DenseParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.dense)
  return oneof_layers_.dense_;
}
::apollo::prediction::DenseParameter* LayerParameter::release_dense() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.dense)
  if (has_dense()) {
    clear_has_oneof_layers();
    ::apollo::prediction::DenseParameter* temp = oneof_layers_.dense_;
    oneof_layers_.dense_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_dense(::apollo::prediction::DenseParameter* dense) {
  clear_oneof_layers();
  if (dense) {
    set_has_dense();
    oneof_layers_.dense_ = dense;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.dense)
}

// optional .apollo.prediction.BatchNormalizationParameter batch_normalization = 7;
bool LayerParameter::has_batch_normalization() const {
  return oneof_layers_case() == kBatchNormalization;
}
void LayerParameter::set_has_batch_normalization() {
  _oneof_case_[0] = kBatchNormalization;
}
void LayerParameter::clear_batch_normalization() {
  if (has_batch_normalization()) {
    delete oneof_layers_.batch_normalization_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::BatchNormalizationParameter& LayerParameter::batch_normalization() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.batch_normalization)
  return has_batch_normalization()
      ? *oneof_layers_.batch_normalization_
      : ::apollo::prediction::BatchNormalizationParameter::default_instance();
}
::apollo::prediction::BatchNormalizationParameter* LayerParameter::mutable_batch_normalization() {
  if (!has_batch_normalization()) {
    clear_oneof_layers();
    set_has_batch_normalization();
    oneof_layers_.batch_normalization_ = new ::apollo::prediction::BatchNormalizationParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.batch_normalization)
  return oneof_layers_.batch_normalization_;
}
::apollo::prediction::BatchNormalizationParameter* LayerParameter::release_batch_normalization() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.batch_normalization)
  if (has_batch_normalization()) {
    clear_has_oneof_layers();
    ::apollo::prediction::BatchNormalizationParameter* temp = oneof_layers_.batch_normalization_;
    oneof_layers_.batch_normalization_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_batch_normalization(::apollo::prediction::BatchNormalizationParameter* batch_normalization) {
  clear_oneof_layers();
  if (batch_normalization) {
    set_has_batch_normalization();
    oneof_layers_.batch_normalization_ = batch_normalization;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.batch_normalization)
}

// optional .apollo.prediction.LSTMParameter lstm = 8;
bool LayerParameter::has_lstm() const {
  return oneof_layers_case() == kLstm;
}
void LayerParameter::set_has_lstm() {
  _oneof_case_[0] = kLstm;
}
void LayerParameter::clear_lstm() {
  if (has_lstm()) {
    delete oneof_layers_.lstm_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::LSTMParameter& LayerParameter::lstm() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.lstm)
  return has_lstm()
      ? *oneof_layers_.lstm_
      : ::apollo::prediction::LSTMParameter::default_instance();
}
::apollo::prediction::LSTMParameter* LayerParameter::mutable_lstm() {
  if (!has_lstm()) {
    clear_oneof_layers();
    set_has_lstm();
    oneof_layers_.lstm_ = new ::apollo::prediction::LSTMParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.lstm)
  return oneof_layers_.lstm_;
}
::apollo::prediction::LSTMParameter* LayerParameter::release_lstm() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.lstm)
  if (has_lstm()) {
    clear_has_oneof_layers();
    ::apollo::prediction::LSTMParameter* temp = oneof_layers_.lstm_;
    oneof_layers_.lstm_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_lstm(::apollo::prediction::LSTMParameter* lstm) {
  clear_oneof_layers();
  if (lstm) {
    set_has_lstm();
    oneof_layers_.lstm_ = lstm;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.lstm)
}

// optional .apollo.prediction.FlattenParameter flatten = 9;
bool LayerParameter::has_flatten() const {
  return oneof_layers_case() == kFlatten;
}
void LayerParameter::set_has_flatten() {
  _oneof_case_[0] = kFlatten;
}
void LayerParameter::clear_flatten() {
  if (has_flatten()) {
    delete oneof_layers_.flatten_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::FlattenParameter& LayerParameter::flatten() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.flatten)
  return has_flatten()
      ? *oneof_layers_.flatten_
      : ::apollo::prediction::FlattenParameter::default_instance();
}
::apollo::prediction::FlattenParameter* LayerParameter::mutable_flatten() {
  if (!has_flatten()) {
    clear_oneof_layers();
    set_has_flatten();
    oneof_layers_.flatten_ = new ::apollo::prediction::FlattenParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.flatten)
  return oneof_layers_.flatten_;
}
::apollo::prediction::FlattenParameter* LayerParameter::release_flatten() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.flatten)
  if (has_flatten()) {
    clear_has_oneof_layers();
    ::apollo::prediction::FlattenParameter* temp = oneof_layers_.flatten_;
    oneof_layers_.flatten_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_flatten(::apollo::prediction::FlattenParameter* flatten) {
  clear_oneof_layers();
  if (flatten) {
    set_has_flatten();
    oneof_layers_.flatten_ = flatten;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.flatten)
}

// optional .apollo.prediction.ConcatenateParameter concatenate = 10;
bool LayerParameter::has_concatenate() const {
  return oneof_layers_case() == kConcatenate;
}
void LayerParameter::set_has_concatenate() {
  _oneof_case_[0] = kConcatenate;
}
void LayerParameter::clear_concatenate() {
  if (has_concatenate()) {
    delete oneof_layers_.concatenate_;
    clear_has_oneof_layers();
  }
}
 const ::apollo::prediction::ConcatenateParameter& LayerParameter::concatenate() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.LayerParameter.concatenate)
  return has_concatenate()
      ? *oneof_layers_.concatenate_
      : ::apollo::prediction::ConcatenateParameter::default_instance();
}
::apollo::prediction::ConcatenateParameter* LayerParameter::mutable_concatenate() {
  if (!has_concatenate()) {
    clear_oneof_layers();
    set_has_concatenate();
    oneof_layers_.concatenate_ = new ::apollo::prediction::ConcatenateParameter;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.LayerParameter.concatenate)
  return oneof_layers_.concatenate_;
}
::apollo::prediction::ConcatenateParameter* LayerParameter::release_concatenate() {
  // @@protoc_insertion_point(field_release:apollo.prediction.LayerParameter.concatenate)
  if (has_concatenate()) {
    clear_has_oneof_layers();
    ::apollo::prediction::ConcatenateParameter* temp = oneof_layers_.concatenate_;
    oneof_layers_.concatenate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void LayerParameter::set_allocated_concatenate(::apollo::prediction::ConcatenateParameter* concatenate) {
  clear_oneof_layers();
  if (concatenate) {
    set_has_concatenate();
    oneof_layers_.concatenate_ = concatenate;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.LayerParameter.concatenate)
}

bool LayerParameter::has_oneof_layers() const {
  return oneof_layers_case() != ONEOF_LAYERS_NOT_SET;
}
void LayerParameter::clear_has_oneof_layers() {
  _oneof_case_[0] = ONEOF_LAYERS_NOT_SET;
}
LayerParameter::OneofLayersCase LayerParameter::oneof_layers_case() const {
  return LayerParameter::OneofLayersCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
