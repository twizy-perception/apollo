//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: Gt.cpp
//
// MATLAB Coder version            : 4.0
// C/C++ source code generated on  : 27-Apr-2018 11:56:12
//

// Include Files
#include <cmath>
#include <math.h>
#include "rt_nonfinite.h"
#include <string.h>
#include "time_update.h"
#include "Gt.h"
#include "sign.h"
#include "sqrt.h"

// Function Declarations
static double rt_powd_snf(double u0, double u1);

// Function Definitions

//
// Arguments    : double u0
//                double u1
// Return Type  : double
//
static double rt_powd_snf(double u0, double u1)
{
  double y;
  double d0;
  double d1;
  if (rtIsNaN(u0) || rtIsNaN(u1)) {
    y = rtNaN;
  } else {
    d0 = std::abs(u0);
    d1 = std::abs(u1);
    if (rtIsInf(u1)) {
      if (d0 == 1.0) {
        y = 1.0;
      } else if (d0 > 1.0) {
        if (u1 > 0.0) {
          y = rtInf;
        } else {
          y = 0.0;
        }
      } else if (u1 > 0.0) {
        y = 0.0;
      } else {
        y = rtInf;
      }
    } else if (d1 == 0.0) {
      y = 1.0;
    } else if (d1 == 1.0) {
      if (u1 > 0.0) {
        y = u0;
      } else {
        y = 1.0 / u0;
      }
    } else if (u1 == 2.0) {
      y = u0 * u0;
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
      y = std::sqrt(u0);
    } else if ((u0 < 0.0) && (u1 > std::floor(u1))) {
      y = rtNaN;
    } else {
      y = pow(u0, u1);
    }
  }

  return y;
}

//
// GT
//     GT = GT(T,GX,GY,GZ,QW,QX,QY,QZ)
// Arguments    : double T
//                const double gyr[3]
//                const double q[4]
//                double b_Gt[48]
// Return Type  : void
//
void Gt(double T, const double gyr[3], const double q[4], double b_Gt[48])
{
  double t2;
  double t6;
  double t3;
  double t9;
  double t4;
  double t12;
  double t5;
  double t15;
  double t16;
  double t18;
  double t24;
  double t17;
  double t27;
  double t19;
  double t20;
  double t30;
  double t21;
  double t22;
  double t23;
  double t25;
  double t28;
  double t31;
  double t114;
  double t35;
  double t36;
  double t67;
  double t37;
  double t73;
  double t38;
  double t79;
  double t39;
  double t85;
  double t40;
  double t42;
  double t43;
  double t45;
  double t53;
  double t57;
  double t96;
  double t97;
  double t105;
  double t109;
  double t110;
  double t111;
  double t112;
  double t113;
  double t115;
  double t124;
  double t136;
  double t145;
  double t152;
  double t158;
  double t159;
  double t161;
  double t162;
  double t163;
  double t164;
  double t165;
  double t172;
  double t173;
  double t178;
  double t190;
  double t198;
  double dv1[48];
  int i1;

  //     This function was generated by the Symbolic Math Toolbox version 7.2.
  //     17-Apr-2018 01:07:00
  t2 = T * T;
  t6 = T * gyr[0];
  t3 = std::abs(t6);
  t9 = T * gyr[1];
  t4 = std::abs(t9);
  t12 = T * gyr[2];
  t5 = std::abs(t12);
  t15 = (t3 * t3 * 0.25 + t4 * t4 * 0.25) + t5 * t5 * 0.25;
  t16 = t15;
  b_sqrt(&t16);
  t18 = std::sin(t16);
  t24 = T * gyr[0] * t18;
  t17 = std::abs(t24);
  t27 = T * gyr[1] * t18;
  t19 = std::abs(t27);
  t20 = 1.0 / t15;
  t30 = T * gyr[2] * t18;
  t21 = std::abs(t30);
  t22 = std::cos(t16);
  t23 = std::abs(t22);
  t25 = t17 * t17;
  t28 = t19 * t19;
  t31 = t21 * t21;
  t16 = ((t20 * t25 * 0.25 + t20 * t28 * 0.25) + t20 * t31 * 0.25) + t23 * t23;
  t114 = t16;
  b_sqrt(&t114);
  t35 = 1.0 / t114;
  t114 = t15;
  b_sqrt(&t114);
  t36 = 1.0 / t114;
  t67 = ((q[1] * t22 * t35 + T * gyr[0] * q[0] * t18 * t35 * t36 * 0.5) - T *
         gyr[1] * q[3] * t18 * t35 * t36 * 0.5) + T * gyr[2] * q[2] * t18 * t35 *
    t36 * 0.5;
  t37 = std::abs(t67);
  t73 = ((q[2] * t22 * t35 + T * gyr[1] * q[0] * t18 * t35 * t36 * 0.5) + T *
         gyr[0] * q[3] * t18 * t35 * t36 * 0.5) - T * gyr[2] * q[1] * t18 * t35 *
    t36 * 0.5;
  t38 = std::abs(t73);
  t79 = ((q[3] * t22 * t35 - T * gyr[0] * q[2] * t18 * t35 * t36 * 0.5) + T *
         gyr[1] * q[1] * t18 * t35 * t36 * 0.5) + T * gyr[2] * q[0] * t18 * t35 *
    t36 * 0.5;
  t39 = std::abs(t79);
  t85 = ((-(q[0] * t22 * t35) + T * gyr[0] * t18 * t35 * t36 * q[1] * 0.5) + T *
         gyr[1] * t18 * t35 * t36 * q[2] * 0.5) + T * gyr[2] * t18 * t35 * t36 *
    q[3] * 0.5;
  t40 = std::abs(t85);
  b_sign(&t6);
  t42 = 1.0 / (t15 * t15);
  t43 = 1.0 / rt_powd_snf(t15, 1.5);
  t45 = 1.0 / rt_powd_snf(t16, 1.5);
  b_sign(&t24);
  t15 = T * t18;
  t53 = t22;
  b_sign(&t53);
  b_sign(&t27);
  b_sign(&t30);
  t57 = (((((T * t3 * t25 * t6 * t42 * 0.125 + T * t3 * t28 * t6 * t42 * 0.125)
            + T * t3 * t31 * t6 * t42 * 0.125) + T * t3 * t18 * t23 * t36 * t6 *
           t53 * 0.5) - t17 * t20 * t24 * (t15 + gyr[0] * t2 * t3 * t22 * t36 *
           t6 * 0.25) * 0.5) - gyr[1] * t2 * t3 * t19 * t22 * t6 * t43 * t27 *
         0.125) - gyr[2] * t2 * t3 * t21 * t22 * t6 * t43 * t30 * 0.125;
  t16 = ((t37 * t37 + t38 * t38) + t39 * t39) + t40 * t40;
  t96 = ((((((((((T * t18 * t35 * t36 * q[1] * 0.5 + T * q[0] * t3 * t18 * t35 *
                  t36 * t6 * 0.25) + T * gyr[0] * t18 * t36 * q[1] * t45 * t57 *
                 0.25) + T * gyr[1] * t18 * t36 * t45 * t57 * q[2] * 0.25) + T *
               gyr[2] * t18 * t36 * t45 * t57 * q[3] * 0.25) + gyr[0] * t2 * t3 *
              t20 * t22 * t35 * t6 * q[1] * 0.125) + gyr[1] * t2 * t3 * t20 *
             t22 * t35 * t6 * q[2] * 0.125) + gyr[2] * t2 * t3 * t20 * t22 * t35
            * t6 * q[3] * 0.125) - q[0] * t22 * t45 * t57 * 0.5) - gyr[0] * t2 *
          t3 * t18 * t35 * t6 * t43 * q[1] * 0.125) - gyr[1] * t2 * t3 * t18 *
         t35 * t6 * t43 * q[2] * 0.125) - gyr[2] * t2 * t3 * t18 * t35 * t6 *
    t43 * q[3] * 0.125;
  t114 = t16;
  b_sqrt(&t114);
  t97 = 1.0 / t114;
  b_sign(&t9);
  t105 = (((((T * t4 * t25 * t42 * t9 * 0.125 + T * t4 * t28 * t42 * t9 * 0.125)
             + T * t4 * t31 * t42 * t9 * 0.125) + T * t4 * t18 * t23 * t36 * t53
            * t9 * 0.5) - t19 * t20 * t27 * (t15 + gyr[1] * t2 * t4 * t22 * t36 *
            t9 * 0.25) * 0.5) - gyr[0] * t2 * t4 * t17 * t22 * t43 * t24 * t9 *
          0.125) - gyr[2] * t2 * t4 * t21 * t22 * t43 * t30 * t9 * 0.125;
  t109 = 1.0 / rt_powd_snf(t16, 1.5);
  t110 = t73;
  b_sign(&t110);
  t111 = T * q[0] * t18 * t35 * t36 * 0.5;
  t112 = t79;
  b_sign(&t112);
  t113 = t67;
  b_sign(&t113);
  t114 = T * q[3] * t18 * t35 * t36 * 0.5;
  t115 = t85;
  b_sign(&t115);
  t124 = ((((((((((T * t18 * t35 * t36 * q[2] * 0.5 + T * q[0] * t4 * t18 * t35 *
                   t36 * t9 * 0.25) + T * gyr[0] * t18 * t36 * q[1] * t45 * t105
                  * 0.25) + T * gyr[1] * t18 * t36 * t45 * q[2] * t105 * 0.25) +
                T * gyr[2] * t18 * t36 * t45 * q[3] * t105 * 0.25) + gyr[0] * t2
               * t4 * t20 * t22 * t35 * q[1] * t9 * 0.125) + gyr[1] * t2 * t4 *
              t20 * t22 * t35 * q[2] * t9 * 0.125) + gyr[2] * t2 * t4 * t20 *
             t22 * t35 * q[3] * t9 * 0.125) - q[0] * t22 * t45 * t105 * 0.5) -
           gyr[0] * t2 * t4 * t18 * t35 * t43 * q[1] * t9 * 0.125) - gyr[1] * t2
          * t4 * t18 * t35 * t43 * q[2] * t9 * 0.125) - gyr[2] * t2 * t4 * t18 *
    t35 * t43 * q[3] * t9 * 0.125;
  b_sign(&t12);
  t16 = (((((T * t5 * t25 * t42 * t12 * 0.125 + T * t5 * t28 * t42 * t12 * 0.125)
            + T * t5 * t31 * t42 * t12 * 0.125) + T * t5 * t18 * t23 * t36 * t53
           * t12 * 0.5) - t20 * t21 * t30 * (t15 + gyr[2] * t2 * t5 * t22 * t36 *
           t12 * 0.25) * 0.5) - gyr[0] * t2 * t5 * t17 * t22 * t43 * t24 * t12 *
         0.125) - gyr[1] * t2 * t5 * t19 * t22 * t43 * t27 * t12 * 0.125;
  t136 = T * q[1] * t18 * t35 * t36 * 0.5;
  t145 = ((((((((((T * t18 * t35 * t36 * q[3] * 0.5 + T * q[0] * t5 * t18 * t35 *
                   t36 * t12 * 0.25) + T * gyr[0] * t18 * t36 * q[1] * t45 * t16
                  * 0.25) + T * gyr[1] * t18 * t36 * t45 * q[2] * t16 * 0.25) +
                T * gyr[2] * t18 * t36 * t45 * q[3] * t16 * 0.25) + gyr[0] * t2 *
               t5 * t20 * t22 * t35 * q[1] * t12 * 0.125) + gyr[1] * t2 * t5 *
              t20 * t22 * t35 * q[2] * t12 * 0.125) + gyr[2] * t2 * t5 * t20 *
             t22 * t35 * q[3] * t12 * 0.125) - q[0] * t22 * t45 * t16 * 0.5) -
           gyr[0] * t2 * t5 * t18 * t35 * t43 * q[1] * t12 * 0.125) - gyr[1] *
          t2 * t5 * t18 * t35 * t43 * q[2] * t12 * 0.125) - gyr[2] * t2 * t5 *
    t18 * t35 * t43 * q[3] * t12 * 0.125;
  t152 = ((((((((((t111 + q[1] * t22 * t45 * t57 * 0.5) + T * gyr[0] * q[0] *
                  t18 * t36 * t45 * t57 * 0.25) + T * gyr[2] * q[2] * t18 * t36 *
                 t45 * t57 * 0.25) + gyr[0] * q[0] * t2 * t3 * t20 * t22 * t35 *
                t6 * 0.125) + gyr[2] * q[2] * t2 * t3 * t20 * t22 * t35 * t6 *
               0.125) + gyr[1] * q[3] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125)
             - T * gyr[1] * q[3] * t18 * t36 * t45 * t57 * 0.25) - T * q[1] * t3
            * t18 * t35 * t36 * t6 * 0.25) - gyr[1] * q[3] * t2 * t3 * t20 * t22
           * t35 * t6 * 0.125) - gyr[0] * q[0] * t2 * t3 * t18 * t35 * t6 * t43 *
          0.125) - gyr[2] * q[2] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125;
  t158 = t37 * t113 * t152 * 2.0;
  t159 = q[3] * t22 * t45 * t57 * 0.5;
  t15 = T * q[2] * t18 * t35 * t36 * 0.5;
  t161 = T * gyr[1] * q[1] * t18 * t36 * t45 * t57 * 0.25;
  t162 = T * gyr[2] * q[0] * t18 * t36 * t45 * t57 * 0.25;
  t163 = gyr[1] * q[1] * t2 * t3 * t20 * t22 * t35 * t6 * 0.125;
  t164 = gyr[2] * q[0] * t2 * t3 * t20 * t22 * t35 * t6 * 0.125;
  t165 = gyr[0] * q[2] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125;
  t172 = ((((((((((t114 + q[2] * t22 * t45 * t57 * 0.5) + T * gyr[1] * q[0] *
                  t18 * t36 * t45 * t57 * 0.25) + T * gyr[0] * q[3] * t18 * t36 *
                 t45 * t57 * 0.25) + gyr[1] * q[0] * t2 * t3 * t20 * t22 * t35 *
                t6 * 0.125) + gyr[0] * q[3] * t2 * t3 * t20 * t22 * t35 * t6 *
               0.125) + gyr[2] * q[1] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125)
             - T * gyr[2] * q[1] * t18 * t36 * t45 * t57 * 0.25) - T * q[2] * t3
            * t18 * t35 * t36 * t6 * 0.25) - gyr[2] * q[1] * t2 * t3 * t20 * t22
           * t35 * t6 * 0.125) - gyr[1] * q[0] * t2 * t3 * t18 * t35 * t6 * t43 *
          0.125) - gyr[0] * q[3] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125;
  t173 = t38 * t110 * t172 * 2.0;
  t178 = t40 * t96 * t115 * 2.0;
  t190 = ((((((((((t111 + q[2] * t22 * t45 * t105 * 0.5) + T * gyr[1] * q[0] *
                  t18 * t36 * t45 * t105 * 0.25) + T * gyr[0] * q[3] * t18 * t36
                 * t45 * t105 * 0.25) + gyr[1] * q[0] * t2 * t4 * t20 * t22 *
                t35 * t9 * 0.125) + gyr[0] * q[3] * t2 * t4 * t20 * t22 * t35 *
               t9 * 0.125) + gyr[2] * q[1] * t2 * t4 * t18 * t35 * t43 * t9 *
              0.125) - T * gyr[2] * q[1] * t18 * t36 * t45 * t105 * 0.25) - T *
            q[2] * t4 * t18 * t35 * t36 * t9 * 0.25) - gyr[2] * q[1] * t2 * t4 *
           t20 * t22 * t35 * t9 * 0.125) - gyr[1] * q[0] * t2 * t4 * t18 * t35 *
          t43 * t9 * 0.125) - gyr[0] * q[3] * t2 * t4 * t18 * t35 * t43 * t9 *
    0.125;
  t198 = ((((((((((t136 + q[3] * t22 * t45 * t105 * 0.5) + T * gyr[1] * q[1] *
                  t18 * t36 * t45 * t105 * 0.25) + T * gyr[2] * q[0] * t18 * t36
                 * t45 * t105 * 0.25) + gyr[1] * q[1] * t2 * t4 * t20 * t22 *
                t35 * t9 * 0.125) + gyr[2] * q[0] * t2 * t4 * t20 * t22 * t35 *
               t9 * 0.125) + gyr[0] * q[2] * t2 * t4 * t18 * t35 * t43 * t9 *
              0.125) - T * gyr[0] * q[2] * t18 * t36 * t45 * t105 * 0.25) - T *
            q[3] * t4 * t18 * t35 * t36 * t9 * 0.25) - gyr[0] * q[2] * t2 * t4 *
           t20 * t22 * t35 * t9 * 0.125) - gyr[1] * q[1] * t2 * t4 * t18 * t35 *
          t43 * t9 * 0.125) - gyr[2] * q[0] * t2 * t4 * t18 * t35 * t43 * t9 *
    0.125;
  t105 = ((((((((((t114 + T * gyr[1] * q[3] * t18 * t36 * t45 * t105 * 0.25) + T
                  * q[1] * t4 * t18 * t35 * t36 * t9 * 0.25) + gyr[1] * q[3] *
                 t2 * t4 * t20 * t22 * t35 * t9 * 0.125) + gyr[0] * q[0] * t2 *
                t4 * t18 * t35 * t43 * t9 * 0.125) + gyr[2] * q[2] * t2 * t4 *
               t18 * t35 * t43 * t9 * 0.125) - q[1] * t22 * t45 * t105 * 0.5) -
             T * gyr[0] * q[0] * t18 * t36 * t45 * t105 * 0.25) - T * gyr[2] *
            q[2] * t18 * t36 * t45 * t105 * 0.25) - gyr[0] * q[0] * t2 * t4 *
           t20 * t22 * t35 * t9 * 0.125) - gyr[2] * q[2] * t2 * t4 * t20 * t22 *
          t35 * t9 * 0.125) - gyr[1] * q[3] * t2 * t4 * t18 * t35 * t43 * t9 *
    0.125;
  t9 = ((t38 * t110 * t190 * 2.0 + t39 * t112 * t198 * 2.0) + t40 * t115 * t124 *
        2.0) - t37 * t113 * t105 * 2.0;
  t4 = ((((((((((t15 + q[1] * t22 * t45 * t16 * 0.5) + T * gyr[0] * q[0] * t18 *
                t36 * t45 * t16 * 0.25) + T * gyr[2] * q[2] * t18 * t36 * t45 *
               t16 * 0.25) + gyr[0] * q[0] * t2 * t5 * t20 * t22 * t35 * t12 *
              0.125) + gyr[2] * q[2] * t2 * t5 * t20 * t22 * t35 * t12 * 0.125)
            + gyr[1] * q[3] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125) - T *
           gyr[1] * q[3] * t18 * t36 * t45 * t16 * 0.25) - T * q[1] * t5 * t18 *
          t35 * t36 * t12 * 0.25) - gyr[1] * q[3] * t2 * t5 * t20 * t22 * t35 *
         t12 * 0.125) - gyr[0] * q[0] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125)
    - gyr[2] * q[2] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125;
  t31 = ((((((((((t111 + q[3] * t22 * t45 * t16 * 0.5) + T * gyr[1] * q[1] * t18
                 * t36 * t45 * t16 * 0.25) + T * gyr[2] * q[0] * t18 * t36 * t45
                * t16 * 0.25) + gyr[1] * q[1] * t2 * t5 * t20 * t22 * t35 * t12 *
               0.125) + gyr[2] * q[0] * t2 * t5 * t20 * t22 * t35 * t12 * 0.125)
             + gyr[0] * q[2] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125) - T *
            gyr[0] * q[2] * t18 * t36 * t45 * t16 * 0.25) - T * q[3] * t5 * t18 *
           t35 * t36 * t12 * 0.25) - gyr[0] * q[2] * t2 * t5 * t20 * t22 * t35 *
          t12 * 0.125) - gyr[1] * q[1] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125)
    - gyr[2] * q[0] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125;
  t42 = T * gyr[2] * q[1] * t18 * t36 * t45 * t16 * 0.25;
  t24 = T * q[2] * t5 * t18 * t35 * t36 * t12 * 0.25;
  t17 = gyr[2] * q[1] * t2 * t5 * t20 * t22 * t35 * t12 * 0.125;
  t27 = gyr[1] * q[0] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125;
  t19 = gyr[0] * q[3] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125;
  t30 = q[2] * t22 * t45 * t16 * 0.5;
  t21 = T * gyr[1] * q[0] * t18 * t36 * t45 * t16 * 0.25;
  t23 = T * gyr[0] * q[3] * t18 * t36 * t45 * t16 * 0.25;
  t25 = gyr[1] * q[0] * t2 * t5 * t20 * t22 * t35 * t12 * 0.125;
  t28 = gyr[0] * q[3] * t2 * t5 * t20 * t22 * t35 * t12 * 0.125;
  t53 = gyr[2] * q[1] * t2 * t5 * t18 * t35 * t43 * t12 * 0.125;
  t114 = ((t39 * t112 * t31 * 2.0 + t37 * t113 * t4 * 2.0) + t40 * t115 * t145 *
          2.0) - t38 * t110 * (((((((((((t136 + t42) + t24) + t17) + t27) + t19)
    - t30) - t21) - t23) - t25) - t28) - t53) * 2.0;
  t16 = ((((((((((t159 - t15) + t161) + t162) + t163) + t164) + t165) - T * gyr
            [0] * q[2] * t18 * t36 * t45 * t57 * 0.25) - T * q[3] * t3 * t18 *
           t35 * t36 * t6 * 0.25) - gyr[0] * q[2] * t2 * t3 * t20 * t22 * t35 *
          t6 * 0.125) - gyr[1] * q[1] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125)
    - gyr[2] * q[0] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125;
  t15 = ((t158 + t173) + t178) + t39 * t112 * t16 * 2.0;
  dv1[0] = 0.0;
  dv1[1] = 0.0;
  dv1[2] = 0.0;
  dv1[3] = 0.0;
  dv1[4] = t96 * t97 - t85 * t109 * (((t158 + t173) + t178) + t39 * t112 *
    (((((((((((t159 + t161) + t162) + t163) + t164) + t165) - T * q[2] * t18 *
          t35 * t36 * 0.5) - T * gyr[0] * q[2] * t18 * t36 * t45 * t57 * 0.25) -
        T * q[3] * t3 * t18 * t35 * t36 * t6 * 0.25) - gyr[0] * q[2] * t2 * t3 *
       t20 * t22 * t35 * t6 * 0.125) - gyr[1] * q[1] * t2 * t3 * t18 * t35 * t6 *
      t43 * 0.125) - gyr[2] * q[0] * t2 * t3 * t18 * t35 * t6 * t43 * 0.125) *
    2.0) * 0.5;
  dv1[5] = -t97 * t152 + t67 * t109 * t15 * 0.5;
  dv1[6] = -t97 * t172 + t73 * t109 * t15 * 0.5;
  dv1[7] = -t97 * t16 + t79 * t109 * t15 * 0.5;
  dv1[8] = 0.0;
  dv1[9] = 0.0;
  dv1[10] = 0.0;
  dv1[11] = 0.0;
  dv1[12] = t97 * t124 - t85 * t109 * t9 * 0.5;
  dv1[13] = t97 * t105 + t67 * t109 * t9 * 0.5;
  dv1[14] = -t97 * t190 + t73 * t109 * t9 * 0.5;
  dv1[15] = -t97 * t198 + t79 * t109 * t9 * 0.5;
  dv1[16] = 0.0;
  dv1[17] = 0.0;
  dv1[18] = 0.0;
  dv1[19] = 0.0;
  dv1[20] = t97 * t145 - t85 * t109 * t114 * 0.5;
  dv1[21] = -t97 * t4 + t67 * t109 * t114 * 0.5;
  dv1[22] = t97 * (((((((((((t136 + t42) + t24) + t17) + t27) + t19) - t30) -
                       t21) - t23) - t25) - t28) - t53) + t73 * t109 * t114 *
    0.5;
  dv1[23] = -t97 * t31 + t79 * t109 * t114 * 0.5;
  memset(&dv1[24], 0, sizeof(double) << 3);
  dv1[32] = t2 * (q[0] * q[3] * 2.0 - q[1] * q[2] * 2.0) * -0.5;
  dv1[33] = t2 * ((q[0] * q[0] * 2.0 + q[2] * q[2] * 2.0) - 1.0) * 0.5;
  dv1[34] = t2 * (q[0] * q[1] * 2.0 + q[2] * q[3] * 2.0) * 0.5;
  dv1[35] = T;
  memset(&dv1[36], 0, 12U * sizeof(double));
  for (i1 = 0; i1 < 6; i1++) {
    memcpy(&b_Gt[i1 << 3], &dv1[i1 << 3], sizeof(double) << 3);
  }
}

//
// File trailer for Gt.cpp
//
// [EOF]
//
